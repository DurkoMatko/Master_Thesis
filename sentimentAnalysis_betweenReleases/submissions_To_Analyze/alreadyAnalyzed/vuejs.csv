date;submission_text;comments_text
2015-06-13 11:16:33;Infinite scroll with VueJS;"It's largely the same logic with or without Vue; the only difference is that you'd be directly pushing the fetched data into an Array instead of doing manual DOM appending."
2015-06-12 17:46:42;0.12.0 is out!;"Excellent work!

Im really enjoying Vue. I've tried other frameworks, but none of them seemed to just let me do what I want.  
Genuinely, thanks!"
2015-06-11 12:28:08;Sign up for the Slack VueJS team. Open for everyone!;perhaps this could be added to the side bar?
2015-06-11 11:37:18;filtering a list & on-click;
2015-06-10 15:01:52;The state of Web Components (or why you may want to use Vue instead);
2015-06-17 14:35:31;New in guide: Tips & Best Practices;
2015-06-25 22:12:38;Vue components using ES7 class syntax;
2015-06-23 19:29:11;I started working on a grid component for vue.js;Nice work, although one small suggestion: you may want to expose an API that allows people to register the component themselves (e.g. under another component) instead of always registering it globally.
2015-07-02 16:28:11;0.12.5 is out!;Awesome improvements!
2015-10-27 15:04:35;Vue.js 1.0.0 Released!;Very nice!
2015-11-05 20:12:58;How to periodically sync data?;never mind, i found async-dataCare to explain for others? :)
2015-11-11 12:28:25;As a JS beginner and just started a small JS game development: Ractive.js or Vue.js?;"I really really like Vue.

The 2-way data binding is really nice, their new binding API (with 1.0.0) is nice and clean and, more importantly, explicit.  
The component system is really powerful as is its 2-way data, and I often find myself trying something that I don't expect to work, but it does... and its supposed to work like that.

I believe Vue is well supported by the Laravel community as well, thanks to Jeffrey Weys over at Laracasts doing an excellent series on it.  
There was also a series with Angular, but Vue just struck a not with me.

There is a resource plugin for Vue that makes AJAX requests easier. I tried it & liked it, but abandoned that line of development, because I hated so much else of what I was doing. I haven't looked at it since I started redoing the whole front end, but my intentions are to go back to it. Its either that or JQuery AJAX, but I have no intentions of bringing in JQuery just to handle AJAX when there is the Resource plugin for Vue.Looking at the GitHub pages of each framework gives us a pretty clear answer in my opinion, and I'm not partial to either (yet).

https://github.com/ractivejs/ractive

https://github.com/vuejs/vue

The watches, stars, and forks are higher on Vue, which likely means there will be better community support.

Now take a look at the commits and issues.

Vue has commits happening nearly every day, and issues are not only low right now, but have also had a really good track record ever since I've started watching at version 1.0.0

I'd say it's a very clear choice for Vue.js
"
2015-11-19 05:13:36;How can I make this simple custom directive work?;
2015-11-16 16:44:41;Build an App with Vue.js: From Authentication to Calling an API;
2015-11-29 19:05:01;load external pages in vue.js?;"    <modal>
        <component
            :is=""currentView""
            :data=""data"">
        </component>
    </modal>

    Vue.component('modal', {
        template: '<div class=""modal""><slot></slot></div>',
        props: ['currentView', 'data']
    });

I hope I got your question right. The key is to use [props](http://vuejs.org/guide/components.html#Props). "
2015-11-29 12:00:36;How to apply a filter back to the model;
2015-12-11 14:59:57;Vue, webpack, and hot reload;"Check out the hackernews clone for a sample of how he uses it.

https://github.com/vuejs/vue-hackernewsyou can also use `vue-cli` it will setup everything for you, just:

`npm install -g vue-cli`

and then:

`vue init webpack <projectname>`

then:
`cd <projectname>`

and run:
`npm install`

and you are good to go!"
2015-12-11 07:04:36;Vuejs + webpack + gulp;
2015-12-11 02:01:19;Vue.js 1.0 Official Guide, Free Ebook!;"Getting an error ""Something is missing"":  
http://i.imgur.com/6mEEvAL.pngThe TOC reads like a 1:1 copy of the vuejs official Guide - What kind / Amount of additional information can I expect?

Thinking about giving a couple of bucks if this is not a simple copy of the guide .."
2015-12-25 12:08:41;Vue.js: 2015 in Review;Awesome to see the growth this year :)
2016-01-09 07:23:24;Anyone here from Portland?;yeah i might be interestedWhich Portland?just learning but I'm in Beaverton and down.
2016-01-08 22:36:26;Vue Electron Boilerplate;
2016-01-06 01:23:29;Help: Waterfall selects;"You would make components for each (preferably a generic component that you could re-use for all 3 selects) and nest them inside one another. The first select becomes the parent component, the second one is inserted inside the template of the first one and so on.

The Vue.js Guide describes how to bind values to selects - all you then have to do is pass the selected value of the first select as a prop to the second select etc.

I'm sorry I can't be more specific,but implementation depends a bit on how your scenario is supposed to work exactly.If you're using Laravel, use this package to get your collection to JavaScript: https://github.com/laracasts/PHP-Vars-To-Js-Transformer

Then simply do a method in Vue.js like this:

    changeCommodity: function () {
        var commodity = _.findWhere(app.commodities, { id: parseInt(this.source.commodity) });
        if (commodity) {
            this.varieties = commodity.varieties;
        } else {
            this.varieties = [];
        }
    }

app.commodities is my Laravel Collection in JavaScript. It basically reads like this:

1. On select change, trigger this function. Find the selected value in the Collection.
2. If the value exists (if truthy), populate the next select data source (this.varieties) with the nested varieties for the found commodity.

Note: _.findWhere is an [Underscore.js](http://underscorejs.org/) thing.

edit: here is my HTML:

    <div class=""form-group required"">
        <label for=""source-commodity"" class=""col-sm-4 control-label"">Commodity</label>
        <div class=""col-sm-6"">
            <select name=""commodity_id"" class=""form-control"" id=""source-commodity"" v-model=""source.commodity"" @change=""changeCommodity()"">
                <option value=""""></option>
                <option v-for=""commodity in commodities"" value=""@{{ commodity.id }}"">@{{ commodity.name }}</option>
            </select>
        </div>
    </div>

    <div class=""form-group required"">
        <label for=""source-variety"" class=""col-sm-4 control-label"">Variety</label>
        <div class=""col-sm-6"">
            <select name=""variety_id"" class=""form-control"" id=""source-variety"" v-model=""source.variety"" :disabled=""!varieties.length"">
                <option value=""""></option>
                <option v-for=""variety in varieties"" value=""@{{ variety.id }}"">@{{ variety.name }}</option>
            </select>
        </div>
    </div>
"
2016-01-05 17:00:45;London Vue.js Meetup - Who's interested?;
2016-01-14 22:33:16;Searching for REAL boilerplate example with vue router;"Look at this example: 

[main.js](https://github.com/kucharzyk/vuejs-java-starter/blob/master/src/main/vuejs/main.js)

[config/routes.js](https://github.com/kucharzyk/vuejs-java-starter/blob/master/src/main/vuejs/config/routes.js)

[app.vue](https://github.com/kucharzyk/vuejs-java-starter/blob/master/src/main/vuejs/app.vue)this works for me...


	<html>
	<head>
		<title>A Page</title>
		<script src=""app.js""></script>
	</head>
	<body>
	  <div id=""app"">
	      <router-view></router-view>
	  </div>
	</body>
	</html>



 	//main.js
	var Vue = require('vue');
	var VueRouter = require('vue-router');

	Vue.use(VueRouter);

	var router = new VueRouter();
	router.map({
	  '/': {
	    name: 'home',
	    component: require('./views/home.vue') 
	  },
	  '/sample': {
	    name: 'sample',
	    component: require('./views/sample.vue')
	  },
	  '/page/:id': {
	    name: 'page',
	    component: require('./views/page.vue')
	  }
	});"
2016-01-11 21:52:28;vuejs-java-starter;
2016-01-19 22:15:37;My first application with vuejs : LessPass (ES6 + WebPack + vue + vue-i18n);
2016-01-19 18:12:30;How's vue performance on a big app?;"I'm currently working on a project using Vue in a SaaS setting.

Currently its more so a proof-of-concept, but I don't think performance is going to be an issue because it being a SaaS solution. The backend, if you have one, could become an issue in terms of performance. Vue itself depends on the device you visit the app in the browser on. That is my main concern for the most part; how will it work on tablets and other devices that do not have the same power as a desktop might have."
2016-01-29 02:50:46;Passing an array as a prop, Invalid Array Length?;"     <div v-for=""s in subItems"">"
2016-01-28 14:07:51;London Vue.js Meetup confirmed: 3rd March 7pm. 2 talks (UI Components + Vuex & Redux);
2016-01-25 07:25:04;A boilerplate for vue plugins;Looking forward to trying this out, I've been looking for ways to contribute to the Vue community but I don't have much experience building packages that other people can easily utilize.  Specifically with Vue I use vue-loader and vueify but I don't know if everyone uses those, so its hard to share them.
2016-01-24 23:54:41;Rollup plugin to share vue components in CommonJS modules;Hey op, care to explain the benefits / what you were trying to solve by making this?
2016-02-05 17:39:52;[Help] Trying to create multi step wizard form;[deleted]
2016-02-05 06:28:20;How to work with an array of inputs?;"Perhaps Im missing something in your question, but wouldn't :

    this.product.push(your-object);

Work? (assuming produc is defined in your data object).

(edit: formatting)    this.$http.post('http://example.com/product', this.products').then....

This doesn't work? (using vue resource for ajax calls but you can use anything). Of course in my example I renamed product to products. I don't really see the issue you're having."
2016-02-20 23:34:43;A curated list of awesome things related to Vue.js;This isn't my list, but I think we may want to add this link to the sidebar.
2016-02-20 15:16:14;Linking Vue.js to Meteor ?;Meteor is very opinionated about the way it wants you to handle your views, so I'd recommend that you didn't, but maybe you have a specific reason as of why you want to use meteor and vue together?
2016-02-20 03:43:05;Use Vue.js in a traditional server side rendered website instead of jquery ?;One great thing about vue is that you can limit its scope to just one element, like a div or a section. That keeps it playing nicely with other libraries.Give it a shot. Sounds like a good idea to me.Vue.js can definitely replace jquery 100%. I'd say go for it.
2016-02-18 06:36:09;How to update the DOM while running a function?;"Without code examples it can be a little difficult to debug but it sounds like you're setting data.loading to false on the next line after the Ajax call. You need to set data.loading back to false in the 'then' callback of the Ajax call. sounds like the ajax is synchronous.  
Set the loading screen (set `this.loading = true;`). Fire the ajax with a callback.  
Callback processes the data, and clears the loading screen (`this.loading = false`)

Are you testing locally? is the ajax call happening too fast?  
DOM updates happen on Ticks. This reduces multiple updates conflicting.  
If, for whatever reason, the AJAX is happening faster than the ticks, its likely it will never show.Script.js

	startLoadingImg: function() {
		this.loading = true;
		Vue.nextTick(this.register);

	},

	register: function() {
        this.error = '';
        
        this.registerResource.save(this.registerData, function (data) {
            this.registerData.length = 0;
        }).error(function (data) {
            console.log(data);
            var str = """";

            for (var p in data) {
            	str += data[p][0] + ""<br />"";
            }

            this.error = str;
        });
        this.loading = false;
        
        // TODO: make this contingent on a successful registration
        this.signedUp = true;

    }
and my html has:

    <form class=""contact-form row"" @submit.prevent=""startLoadingImg"">


I think it works and when I take out the code for register() it does show the loading screen. But I don't know if someone has a slow connection or when its up for production if the loading screen will show as the rest of register goes through. Thanks for the help."
2016-02-17 16:00:47;How to reverse transitions on Vue Router?;"I like Vue, but I've never used it's router. I have done a lot of navigation lists, but I used my own classes for navigation: `previous`, `current` and `next`. I've used this technique with standalone routers without problem, such as SammyJS, Director, PathJS, etc. These classes set the CSS translation of the card/screen/view.

    .previous {
       transform: translate3d(-100%,0,0);
    }
    .current {
       transform: translate3d(0,0,0);
    }
    .next {
       transform: translate3d(100%,0,0);
    }

Using thee classes gives you hardware accelerated animation.

What I'd do with routing is remove `previous` or `next` and add `current`. When leaving `current`, remove `current` and add class `previous`. When returning backwards, set `current` to `next` and the previous to current.

You could probably check the $.router.params object to see where you are at any time.
Hope that helps."
2016-02-26 00:06:52;Running a melonJS game inside a Vue and saving the data to a Mongo back-end.;"I'd imagine you would build a basic Vue component with a template that contained the html (either static or through an async component). Run any of your game init code in the ready block of the component and cleanup in the beforeDestroy block. 

I would also put the minified js as a script tag at the top of the page containing the Vues, not the imported html as this could get messy trying to import script tags halfway down the DOM. Also, this assumes the minified js is just the engine and doesn't run as soon as the page is loaded. "
2016-02-25 22:16:05;Develop a Reactive Invoice App using Vue.js;Is this a complete tutorial?
2016-02-21 19:46:18;Is there any gettext, xgettext tooling for Vue templates .vue files?;"Check out [this plugin](https://github.com/Haixing-Hu/vue-i18n). If your goal is internationalization, it may help.I'm not sure I know what you're looking for, but you can get text from elements by using the v-el directive

http://vuejs.org/api/#v-el
I'm not sure as I'm new to Vue, but it sounds like you could make an easy JS or jQuery instruction, such as $(element).text() to get the text of the element, and assign it to a variable, like var thisText = $(element).text(), to be able to reuse it, either through your JS, either in a helper and then back to your HTML through template ?
But maybe I misunderstood your question, I'm not sure. "
2016-03-04 08:12:04;Vuex 0.5.0 now featuring time travel;"[**@vuejs**](https://twitter.com/vuejs):
>[2016-03-04 04:45:22 UTC](https://twitter.com/vuejs/status/705615094210797568)

>vuex 0.5.0 \+ vue\-devtools 1.1.0 = time travel [*pic.twitter.com*](http://pbs.twimg.com/tweet_video_thumb/CcrZMEVWAAAyCiV.jpg) [^[Imgur]](http://i.imgur.com/INVtbrP.jpg)

----

[^[Mistake?]](/message/compose/?to=TweetPoster&subject=Error%20Report&message=/48wi6j%0A%0APlease leave above link unaltered.)
[^[Suggestion]](/message/compose/?to=TweetPoster&subject=Suggestion)
[^[FAQ]](/r/TweetPoster/comments/13relk/)
[^[Code]](https://github.com/joealcorn/TweetPoster)
[^[Issues]](https://github.com/joealcorn/TweetPoster/issues)
"
2016-03-03 03:14:06;Vue.js technical book;I see you're a laravel developer. I'd be incredibly interested in a chapter on Laravel + Webpack + Vue.js and how they work together. Also a section on pagination in Vue.js if you haven't already. Thanks. Looking forward to the book.How much are you planning to charge for the book?Cool, my co-workers and I are interested in Vue.js and would pay for this.I bought your book about a month ago a built a web app using it. I owe you loads of thanks. Are you gonna expand your book any? I'm not using laravel and can't find a good guide to separate my components from my templates from my html page.Everyone who subscribes on Leanpub has to make his email public. Otherwise, we wont be able to send the promo code when the book is published.
2016-03-02 11:45:35;Redux binding for Vue;Worth checking out Vuex if you are in need of this sort of thing. The new API is working well for me.  https://github.com/vuejs/vuex
2016-03-01 21:20:10;simple Vue CLI tool;
2016-03-01 13:06:27;How to access data from root instance within component?;
2016-03-12 22:31:19;I made a silly client-only Battleship game with Vue to learn it a little bit. Here you go.;"Using TypeScript, nice!

Was it not possible to use standard Vue templates with TS?Source for the interested:

https://github.com/kylestlb/BATTLESHIPnoticed there is no collision detection, my destroyer was placed over my battleshipLooks nice, I'm starting to learn Vue.js, this should come in handy as some sort of tutorial."
2016-03-12 19:22:21;How to extend another component in a single-file component (ES6 vue-loader);
2016-03-11 12:13:08;I'm doing a workshop for all those interested in Vue.js, Sunday 20.03.2016 @ 20:00 CET;I am looking forward to watching it!Tonight is the night!
2016-03-09 03:51:06;On the flying data filtering;"Not to be rude, but have you read the documentation on form input bindings and filtering?

http://vuejs.org/guide/forms.html

http://vuejs.org/api/#filterBy"
2016-03-07 15:01:24;London Vue.js #2 (Live Q&A with Evan You + Vue: Simple & Great) - London VueJS Meetup (London, England);
2016-03-15 13:20:02;March 2016 Update;
2016-03-15 01:21:39;Comparing Angular 2 to Vue JS;"I am not sure about others, but i would wait for dust to settle on angular 2 vs aurelia* , before trying out angular2.

other than that, angular 2 seems to be a nice framework.

*both aurelia and angular are in beta, so that fight has yet to start let alone finish.
"
2016-03-14 17:39:32;fill and create component with data from json file?;"You want a way to load the json first. This is completely up to you, but googling a bit should lead you to some simple answers. As for the vue part, you've almost got it. I'd do it by loading in an array in the projects part, like this:

    data () {
        projects: [
            {
                title: 'whatever'
            }
        ]
    }

Then, you can go ahead and in your project component add a prop like this:

    props: {
        project: undefined
    }

Afterwards, you want to do the following in your parent components template:

    <project v-for=""project in projects"" :project=""project""></project>


And then inside of the component, you can do 

    {{ project.title }}

Otherwise, check out other approaches on the vuejs website for examples on how to handle parent-child relationsships.

Feel free to ask if it is confusing :)
    "
2016-03-23 15:54:13;Conditional page transitions?;"The router has a transition object that you can pass into the data hook so you can check what page it's going to and/or from. If that's what you're going for

See http://vuejs.github.io/vue-router/en/pipeline/hooks.html"
2016-03-21 19:50:09;Vue Router;"Gonna need to see some code and more detail.Can you show us a JSFiddle of what you have?

Also, things disappearing/appearing. It wouldn't be your reload (LiveReload/BrowserSync) causing issues would it?"
2016-03-20 15:30:46;absolute path with vue bindings;"its because when you use `v-bind:prop` or `:prop` then value is treated as js expression

try `<img :src="" '/absolute/path/' +image_src"">`"
2016-04-02 18:17:05;[x-post r/javascript] Fullstack development with Vue.js;"X-Post referenced from /r/javascript by /u/Cyb3rWaste  
[[WORKSHOP] Fullstack development with Vue,js](https://www.reddit.com/r/javascript/comments/4d2lok/workshop_fullstack_development_with_vuejs/)
*****  
  
^^I ^^am ^^a ^^bot ^^made ^^for ^^your ^^convenience ^^\(Especially ^^for ^^mobile ^^users).  
^^P.S. ^^negative ^^comments ^^get ^^deleted.  
^^[Contact](https://www.reddit.com/message/compose/?to=OriginalPostSearcher) ^^| ^^[Code](https://github.com/papernotes/Reddit-OriginalPostSearcher) ^^| ^^[FAQ](https://github.com/papernotes/Reddit-OriginalPostSearcher#faq)"
2016-03-31 23:52:00;Single File Vue Components for multi-page apps?;"When I started using Vue (and I haven't really continued, so take this with a grain of salt), I used Require.js. I get the impression that it's frowned upon, but it let me write my component's JS as a script file, the template as a `text!`-imported HTML file, and the CSS could've been imported as a dependency with `css!`, too. It's definitely not single-file development, but it was a nice separation of concerns and it seemed very modular at the time.I ended up with this problem too.

my solution was to write a `vue_load.js` file
as 

        var v = require('vue');
        v.component('a-comp', require('./components/a_comp.vue') );
        v.component('b-comp', require('./components/b_comp.vue') );
        v.component('c-comp', require('./components/c_comp.vue') );

        window.vueLoader = {Vue:v }; 


usage,


       <-- this is the dist version, not the source written above
      <script src=""vue_load.js"" ></script>
       <script>
       var V = VueLoader.Vue;  //note: the cases are same as in source file.
    
       new V({
                //use as required
        });
       </script>


if you are using the file for loading vue only, and your page has no other reference to vue. then you can directly use  `window.Vue` to export your custom vue as `Vue`I don't know a thing about laravel... when you say multi-page you mean not a SPA, right?

If that's the case, why are you defining routes in Vue?you can use: http://vuejs.github.io/vue-loader/start/tutorial.html

To load up the compiled js + css"
2016-03-31 06:21:48;Single Page App;"could you show the page layout and preferably the code for the app & router on jsfiddle.net or sth. similar?

generally, your App instance should contain pretty much the whole body. it would contain header, footer, maybe the sidebar, and the router would then render the routed components inside of there in the <router-view></router-view> element.

Example: https://jsfiddle.net/Linusborg/1f56bk14/"
2016-04-16 07:57:33;setting up vue.js with java;Soooo.. what exactly do you need help with? Was looking for some java vue.js seed. I found one https://github.com/lavenderx/modern-java-web-scaffold
2016-04-14 03:20:57;Props in ES6;"Same thing

```
export default {
  props: ['your-prop'],
  ....
}
```

Apologies if it doesn't format correctly, I'm on mobile.That is the correct way to define component props, and they then must be provided from outside of the component, as attributes on the element used for the component. 

http://vuejs.org/guide/components.html#Props details usage, and further down in the docs dynamic props are also explained, which are very helpful too. "
2016-04-13 16:06:42;Triggering vue-router hooks;"How are you getting your data in the first place?Why not just trigger the API and backend update again?

Have a vuex action call the API and dispatch a store update. Bind that to your button click"
2016-04-10 03:57:11;vue-syntax-highlight 3.0 now highlights vue directive expressions;
2016-04-22 14:53:00;vbuild: Preset build tool for Vue.js apps.;This is awesome. Thanks!
2016-04-22 14:20:34;The first Vue.js book is celebrating 100 readers!;"[**@tmvuejs**](https://twitter.com/tmvuejs):
>[2016-04-21 11:55:49 UTC](https://twitter.com/tmvuejs/status/723118035679109120)

>Hooray 🎉🎉 We have reached 100 readers!
>Thanks Everybody 💓 [#vuejs](https://twitter.com/search?q=%23vuejs)
>
>You can use this coupon until the end of the month
>[*leanpub.com*](https://leanpub.com/vuejs/c/hooray)

----

[^[Mistake?]](/message/compose/?to=TweetPoster&subject=Error%20Report&message=/4fynes%0A%0APlease leave above link unaltered.)
[^[Suggestion]](/message/compose/?to=TweetPoster&subject=Suggestion)
[^[FAQ]](/r/TweetPoster/comments/13relk/)
[^[Code]](https://github.com/joealcorn/TweetPoster)
[^[Issues]](https://github.com/joealcorn/TweetPoster/issues)
Last I checked the book was still 80% done. Hopefully it'll be fully completed soon cause Vue deserves more books about it"
2016-04-21 04:31:54;vue is going to have vdom?;"[**@vuejs**](https://twitter.com/vuejs):
>[2016-04-20 10:03:43 UTC](https://twitter.com/vuejs/status/722727437503754240)

>What would happen when Vue meets Virtual DOM?

----

[^[Mistake?]](/message/compose/?to=TweetPoster&subject=Error%20Report&message=/4frei3%0A%0APlease leave above link unaltered.)
[^[Suggestion]](/message/compose/?to=TweetPoster&subject=Suggestion)
[^[FAQ]](/r/TweetPoster/comments/13relk/)
[^[Code]](https://github.com/joealcorn/TweetPoster)
[^[Issues]](https://github.com/joealcorn/TweetPoster/issues)
I'm not sure I understand why this is needed. Aren't Vue Components compiled as document fragments? I thought that was the ideal way."
2016-04-18 15:33:24;Interested in switching from server side templating to using a purely client-side solution (I'm leaning towards Vue.js). How would I handle the issues of layouts/templates/partial views?;"the concepts don't translate 1:1, but all of that is generally quite easily achieved with vue components.essentially, this is how it would be done

parent.vue

    <style>
        //parent's styles goes here
    </style>
    <template>
        <div class=""layout"">
            
                <slot name=""nav"">
                  //navbar goes here
                    <nav>            
                    </nav>     
                <slot>
            
            <slot></slot> 
        </div>
    </template>
    <script>
        export default {}
    </script>
    
    
child.vue

    <style>
        //child's styles goes here
    </style>
    <template>
        <parent>
         
          //remove this tag to use parent's nav
         <template slot=""nav"">
           //childs nav goes here. 
         </template>
        //body goes here 
         </parent>
    </template>
    <script>
        export default {
             components: {
             parent: require('parent.vue')
            }
        }
    </script> 
    
PS: the code is untested.

Edit: updated codeBe sure to check out http://vuejs.org/guide/application.html, which shows some examples of 'Single File Components'. That should get you started!"
2016-04-27 19:12:01;Announcing Vue.js 2.0;Damn excited!AWESOME! Nice work /u/yyx990803 , Thank you for all your hard work!As if Vue wasn't already amazingly good. This is awesome news!Amazing! I'm loving this framework more and more. Started Vue only 2 weeks ago and loving it!It is still in pre-alpha, but it looks promising. I really hope that Vue gain more popularity in the community. Just yesterday, I was wondering when to use `elementDirectives` and `<partial>`, apparently I was not the only one who thought that wayIs anyone using 2.0 already and has encountered any issues? I am in the middle of developing an app and wonder if it's better to update already.Hell yes.
2016-04-25 20:00:32;Everything Vue.js!;"the demo link is not working. it shows a blank page after taking its time to load.A large app that is fully modular with webpack, router, vuex etc is something I've been looking for for a long time. Haven't had a chance to look at it yet but even if this sucks I wanted to sincerely thank you for at least trying to get something like this out there. Since the framework is so new, it's really hard to find good resources out there. Everyone shows off how simple it is to get vue up and running with data binding and stuff, binding the root vue instance to 'body' and does everything in there, that's not how you'd make a real project. We need more of these bigger examples.

I've made quite a few apps already but I don't feel comfortable enough sharing the code with everyone since I'm pretty sure that they contain about 0 best practices, haha, sorry.
And thanks again.Nice work! Have an upvote and a GitHub star!

> Coming soon will be a demo of how to do this. I use sailsJs

I also use VueJS + SailsJS, and would be very interested to see how you would achieve login (using sails-permissions?)

I'm currently trying to get the vuejs frontend to build directly from sailsjs using a derivative of [sails-hook-webpack](https://github.com/teamfa/sails-hook-webpack), with hot module reloading in the development environment.Sounds nice, though the demo does not work for me. 

You should consider submitting it to https://github.com/vuejs/awesome-vueThis is really great stuff. After a few weeks of research, I've settled on using Vue.js, and, just recently, AdminLTE for the foundation of my project. Thank you so much for providing this as an example to work from. Cheers!I took the Hacker News demo and just started subbing in my own pages and files using the ones in there already for reference.  Wasn't very clear and would have been nice to have more commenting on exactly what was going on.  I'm hoping I can put together a nice little Vue tutorial myself that covers the most important pieces of functionality and concepts while staying simple enough to not go over people's heads.Wow, this is quite nice. I was looking for a stock dashboard template before beginning my Vue.js project. Totally would have used this but already started on mine."
2016-04-24 11:28:03;I built a tic tac toe game in VueJS and Sass;It cheats. http://imgur.com/081lejJNice game. it is fun
2016-05-06 18:57:34;[help] vue-validator says inputs are valid when component loads?;
2016-05-06 00:47:45;Need help with setting up vue-google-maps;Without code example it's pretty hard to give you a direction where to look.It says you need a token
2016-05-04 11:41:22;vue color components (from react-color);"why is it `require('vue-color/src/Photoshop.vue')` instead of `require('vue-color').Photoshop`? 

the second syntax is quite succinct and better imo."
2016-05-11 10:24:49;When do you start breaking up components?;"there is more to vue then just broadcasts and events, you can also use properties to pass data between components and slots.

They i would go about implementing pagination would be something like:
`<paging v-bind:total-items=""499"" v--bind:max-items-per-page=""50"" current-page=""3""></paging>` or something close to that, you can even bind them two-way instead of one-way(default)You can also use something like Vuex to manage your state, and get rid of all your events and passing of props. Having a single source of truth for your data has a lot of advantages, including easy debugging, plus ease of access from your components. "
2016-05-10 14:32:49;Building a README generator with Vue.js;"The link is broken for me :(

EDIT: Now works"
2016-05-21 02:49:27;No 'Access-Control-Allow-Origin' header;"new Vue({

    ready: function() {

      // GET request
      this.$http.get('/someUrl').then(function (response) {

          // get status
          response.status;

          // get all headers
          response.headers();

          // get 'expires' header
          response.headers('expires');

          // set data on vm
          this.$set('someData', response.data)

      }, function (response) {

          // error callback
      });

    }

})

Edit: You have to chain your function like an Ajax call when you're using vue-resource. It actually seems like setting custom headers is the issue here, not the solution. From what I understand, the browser does a preflight request when custom headers are involved. Either way, your sample code is actually setting a query parameter called 'headers'.

Try the [vue-resource docs](https://github.com/vuejs/vue-resource/tree/master/docs)"
2016-05-18 21:38:52;Checking if data is an object;"If isObject is a function, you need to pass the parameter in.

`<ul v-if=""isObject(value)"">`"
2016-05-17 15:08:28;Building a Google Keep Clone with Vue and Firebase (Part 1);
2016-05-28 07:14:08;Is this the right way to build a reusable modal?;Hey there, I am starting with vue right now for an app idea. I appreciate your post and will add, you have a very great writing style, easy to follow and very clear.! 
2016-05-26 02:12:56;passed prop object can't be seen by child's methods;"`<weather-view :coordinates=""coordinates"">`

Your syntax is wrong, the above should work."
2016-05-25 11:16:47;vue-multiselect - New select2/chosen inspired, standalone (no jquery!) component for Vue.js. Fully configurable, >90% test coverage;"Great job!Nice niceFunny.... I tried this today but I kept getting a browserify token error  :(

So far I have Chosen working but a full vue solution would be nice. This looks awesome!Great job!Updated to v0.2 with new features:
- Tagging
- Custom labels
- Custom templates (via Mixins)"
2016-05-25 02:04:00;"""From a React point of Vue..."" - comparing React.js to Vue.js for dynamic tabular data";https://github.com/footballradar/VueReactPerf/pull/3 Worth reading as a follow up!
2016-05-24 16:51:24;Filtering an Input Field;"Take a look at the source of this Vue plugin; might be what you need: https://github.com/BosNaufal/vue-calc-input"
2016-06-02 17:10:25;vuejs-paginator - Pagination with Vue.js made simple!;"Nice! Would love to have buttons for the pages as well. http://i.imgur.com/WL2FXES.pngCool library.. I'm trying to use it with Laravel and can't seem to customize the prev and next button text. I've tried a bunch of stuff but at the simpliest this is what im working with. Thanks for any help

(welcome.blade.php)[http://pastebin.com/uAdRxVmK]

(routes.php)[http://pastebin.com/dicsdtUV]"
2016-06-01 21:56:01;Best JWT or auth library for use with Vue?;"Do you need a Laravel library for the JWT-generation or just a way to consume a JWT-based api with Vue? No idea if there is a library for it.
I based my auth solution on this blogpost:
https://auth0.com/blog/2015/11/13/build-an-app-with-vuejs/ There is a Laravel Vue starter app that uses a package called ""rest"" to make API calls. The rest package allows for interceptors that can handle JWT, and that repo does just that. I will try to link it after I get home. If you find any other solutions, I'm all ears because I was hoping to use a more popular fetch library that has this built in.

Here's the link: https://github.com/layer7be/vue-starter/blob/master/interceptors/jwtAuth.js"
2016-06-01 10:43:09;Follow up - A fairer Vue of React;"> React performs more scripting work, as we would expect from its virtual DOM implementation, and Vue is heavier on painting and rendering as it touches the DOM directly.

For some reason, I feel like this is the right approach.

I'm not an expert, but I think that it is much easier (for browsers) to optimize the DOM logic."
2016-05-30 13:46:20;Change value v-model inline;"Ok, so there is a list of (say) products.  
In the Admin page (say) you want to set a default and a custom price, and then whether the price shown to the user defaults to the default price or the custom price.  
Is that right?

And the database models go like this:  
`Product` has a `Price` referenced by `default_price_id`  
`Product` has a `CustomPrice` referenced by ??!!

How is the result of this used?  

What I would do:  
Component to handle the Price input.   

`PriceInputComponent`:  
Single input box, bound to `computedPrice`  
Add class to highlight if `custom_price` is `not null` (to indicate its using a custom price). Should probably use a computed property for this.  
Show button to reset (`custom_price` set to `null`) if `custom_price` is `not null`. Again, use the same computed property as the class highlight.

Has a computed property (`computedPrice`) that has setters/getters for `default_price` or `custom_price`.  
Getter: If `custom_price` `is null`, return `default_price, else return `custom_price`.  
Setter: If `newValue` is equal to `default_price` set `custom_price` to `null`. Else set `custom_price` to `newValue`


VM that is the parent of the `PriceInputComponent`:  
`computedPrice` as described in the `PriceInputComponent` (this could be done as a mixin to keep it DRY).  
use `computedPrice` instead of accessing `default_price` or `custom_price` directly.  
Could create `computedIsDefault` or `computedIsCustom` that checks the value of `custom_price` to indicate the usage of a custom price or default price. As these are also used in `PriceInputComponent` I would look at putting them in the mixin with the `computedPrice`

NB:  
names are to indicate what things are. a computed property obviously does not need to be called `computedBlahBlah`

edit:  
Big ol' edit to state a decent way of doing it... from what I understand of the problem"
2016-06-10 09:32:31;Building a dashboard using Laravel and Vue;
2016-06-10 04:04:01;Vue 2.0 livestream;That was great, thanks. I love that you always explain why things are as they are, what the downside of the old implementation was and how to avoid certain pitfalls. 
2016-06-09 22:50:04;vue-model Plugin for rich models;
2016-06-09 07:25:44;I don't understand Vuex.;"Only use Vuex if you check one of the below:

1. Your app needs to manage complex cross-component state.
2. You expect your app to grow considerably in scale in the future.
3. There will be multiple people working on the same app.

The verbosity in state management patterns like this is a deliberate tradeoff in return for long-term maintainability, so if you are just using it not for one of the above reasons you will likely find it adding more cruft than usefulness.

As an aside, you don't need to put all possible state in Vuex - if the form data is local to that component then you can just leave it outside of Vuex and use normal `v-model` as you like.A vuex getter acts in the same way a computed property acts, so you do not need your computed block. Vuex actions can be called the same was you would call a method in a component.

I would pay somebody for a decent tutorial on vuex that is as crystalclear as the vue.js tutorials on laracast. I simply cannot wrap my head around it because every tutorial starts out with 4-5 components and simply dives straight into actions and mutators without in depth explanation.

Even the docs leave me guessing, I might just be stupid here but I don't get it. It seems like so much extra implementation to replace the event system it also does not seem worth it at a glance."
2016-06-07 22:19:42;Share your reusable components;"This actually makes me wonder, what's the proper (or recommended) way to distribute a component?I'll start, I wrote a configurable select component.  
I have a site that uses server side rendering(django), so I used a prop to pass in the data from the server view to the html template. That is why I have a bunch of js on in the html.

https://jsfiddle.net/oyb8yzgu/3/"
2016-06-18 07:18:40;VueStrap - Bootstrap components built with Vue.js;date picker bug => cannot close the disabled days dropdown when you click away from it
2016-06-17 11:51:39;Vue2: Jsx plugin is working;"I love Vue, but since we wanted to share as much code as possible between all our clients and stick with a single way of thinking we went with React and React Native.

I've found JSX to be great in a conceptual way, but in practice it's a pain to use. You lose all the great tools for writing HTML (Emmet, etc), and all the handy directives from Vue (v-for, etc).

I've found [react-templates](https://github.com/wix/react-templates) to be a good replacement. Not as powerful as Vue directives for sure, but it makes your life a lot simpler IMO."
2016-06-17 06:56:15;Mint UI – Mobile UI Elements for Vue.js;Look fantastic, thank you!
2016-06-13 23:45:41;How can I nest v-fors inside my component file?;
2016-06-12 15:28:18;How difficult (if at all possible) is it to create an android/iOS app with vue.js and phonegap?;"Only dabbled a little with app development and only using ionic/angular but I don't think there's anything that prevents it from being possible to use Vue for this. And that's pretty much the extent of the advice I can give. 

Vue 2.0 just entered alpha which moves to use a virtual DOM and there were also some mentions of possible integrations for native rendering of vue apps, which is something I'm definitely looking at later this summer. We use Vue a bit at work and will probably add an app version of our customer portal soon-ish so I have my hopes up. That way we possibly don't have to use different js stacks for the portal and the app ;)

Edit: When I say I don't see anything that prevents you from using vue for app development I of course mean putting a vue app into Cordova (which is what phonegap uses). As far as I know it would work as long as you're not doing anything really weird. However you won't get the same performance as if you were developing an optimized Ionic app or use React Native. "
2016-06-22 07:17:44;Forcing refresh of v-for when updating nested object;"This should not be an issue at all if you properly add the `obj` to the component's `data` and stay clear of the [Change detectin caveats](http://vuejs.org/guide/reactivity.html#Change-Detection-Caveats) - it *should* update automatically.

Can you show how you actually add the `obj` into your component and how you update it?"
2016-06-21 16:24:28;Empty filter on load;"This is one of the reasons that filters are deprecated in 2.0 in favour of computed properties.

I've created a computed property example below.

https://jsfiddle.net/wetx3ctt/1/This might not be exactly how you want it to work, but couldn't you do a v-if=""query"" and set the initial query value to an empty string? Something like this: https://jsfiddle.net/yvyeoasz/1/

I think chaining these properties is the kinda thing that makes Vue.js pretty awesome."
2016-06-20 20:42:48;Vux - Mobile web UI Components based on Vue and WeUI.;Looks great!
2016-07-02 00:23:58;Keen UI - Vue UI Components inspired by Material Design;looks very good! Probaply going to use it in my next project :)
2016-07-01 13:00:37;Peeking into Vue.js 2 (Part 1);Where are the docs for vue.js 2?
2016-06-27 14:41:14;Help with large(ish) scale application architecture with Vuex.;"What I ended up doing in your situation with a recent project was keep the files split up as suggested, but created ES6 classes for each type.  Since 95% of my Models only needed to support basic CRUD routes, it was easier to make assumptions for the majority, while still leaving the ability to add custom events when needed.

This ultimately cleaned up my process very significantly, I could post you some examples when I get home if you want.My advice: don't overthink it. Actions are basically functions that receive a Vuex Store object as their first argument. You can structure them independently from the Vuex stuff. Start with a single file, split into multiple ""action sets"" if needed.I'm working on a same implementation atm and i've been following [this structure](https://github.com/jackhutu/jackblog-vue/tree/master/src). But i'm having the same issues as you have. I have about ~20ish components and i kinda want them to have their own types, actions and module and import it into one big store.

Im also wondering about the actions.js file. It's getting kinda big and i'm thinking about importing the actions from each component i have.

I'm intrested in how you will go about handling it.I just put together a scaffold of a vuex and horizon.io app... you might be interested in the structure and see how it compares to what you've already come across. 

https://github.com/kylestlb/vuex-horizon-scaffoldhey scratching my head about the exact same issue. my actions file seems disproportionately large compared to the module files. what did you end up doing? is it possible to post a link to your code? i'm a little worried that i'm moving too much of my app into vuex..."
2016-07-08 07:12:28;Vue 2.0 is now in beta phase!;Can't wait for vue-router to be ready for 2.0 !!!Is there a list of major changes from 1.0 available anywhere?
2016-07-06 17:22:52;"Practical Vue.js (book, 95% complete) - ""we are planning update all book at Vue 2.0 launch."" Has anyone read the 1.x version and would you recommend?";"Kinda wish they offered a downloadable preview. How does this work? You pay $22 for an incomplete book that will be obsolete in a couple of months?Personally I think you'd get better value from Jeffrey Way's online version: https://laracasts.com/series/learning-vue-step-by-stepHow do you get a variable from html to a component for a $_GET ajax request?
"
2016-07-06 14:58:59;vue-gettext;nice, will defently give it a goHey there, I'm setting up a new front end architecture for my company using Vue.js and I'm looking to migrate our [angular-translate](https://github.com/angular-translate/angular-translate) setup. This seems like it might be just the thing we need, so I'll try it and make sure to let you know if I have any feedback.
2016-07-16 20:04:38;Vuedo: An open source project built with Laravel and Vue.js.;
2016-07-16 02:53:54;Simple Arabic Keyboard;You might want to mention that you implemented the OSX keyboard layout, which differs from the more common [IBM PC layout](http://www.smartkeyboardstickers.com/images/Arabic-10002D-layout-zoom.gif).Good project
2016-07-16 02:20:21;Is there a vue component similar to algolia/places?;Also discussed here: https://github.com/vuejs/vue-requests/issues/16
2016-07-15 02:45:50;Has anyone used async/await with a Vue.js Webpack project?;"you would have to include the `stage-0` preset in your `.babelrc` file and install the [stage-0 plugin](https://www.npmjs.com/package/babel-preset-stage-0).

IF you don't want all of the stage-0 features, you could also simply install a plugin for this feature: https://babeljs.io/docs/plugins/transform-async-to-generator/I used it for a bit, but decided to use Coroutines via Bluebird instead. I found coroutines to be a nice way to write serial code while waiting for async await to be more usable."
2016-07-15 00:06:39;Vue 2.0 Isomorphic Starter;
2016-07-22 08:34:58;electron-vue: An Electron & Vue.js boilerplate (vue-cli support);
2016-07-21 14:07:25;Use Vue without single file component (.vue);
2016-07-20 11:49:00;Vue.js for developers AngularJS – Part 2 (Components and states);Why link a post in portugeese?
2016-07-19 11:29:28;I wrote a guide to open-sourcing Vue.js components. Any thoughts?;
2016-07-19 10:14:50;Founding Front-end Role: Looking for Vue dev in/near St. Louis, MO, USA.;*good.
2016-07-26 07:20:55;Q&A with Evan You;
2016-07-26 04:13:49;vuejs and D3;have you tried it? I think there are a few open source packages for using d3 and vue. At my place of employment we've tried it out a bit.   Personally I feel like d3 and vue are trying to accomplish almost the same thing.  I wrote my own svg templates with vue and it felt more 'vue-y'.  I assume you could just have a computed 'render' property that process the data join with d3 whenever your props change... that would probably be the best marriage of the two.
2016-08-06 05:17:12;VuePack - A modern starter which uses Vue 2, Vuex, Vue-router and Webpack 2;Anyone know when full webpack 2 docs will be out?  I think I will wait for the docs before trying version 2.Can this work with elixir??Is there a filehandler included? Like for moving images from /src to /dist and maybe even optimize them?It would be cool if it came with JSX plugins out of the box. 
2016-08-03 10:33:51;Select an option in a nested for loop.;"Could you post a fiddle?Do you have some sort of Array.contains(item) method? If so, it's as simple as having a single option that v-fors/repeats on your allRoles array, then simply do something like

    selected=""{{user.roles.contains(role.id)}}""

If you don't have access to an Array.contains method, it's as simple as using Array.indexOf(item) and checking that the index returned is not -1. You wouldn't really need a ""contains"" method, but IMO it looks nicer than:

    selected=""{{user.roles.indexOf(role.id) !== -1}}""

The `selected` should evaluate for each individual `option`, so you don't need to do anything fancy like trying to add the user's roles separately.U are missing the v-model on your select"
2016-08-02 15:57:16;Polling an API;"You could either toss an AJAX request inside `setInterval()` or use a real-time service a la Pusher, Horizon, socket.io, etc.Server sent events are perfect for this:

https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events"
2016-08-02 08:58:10;Suggest me for better code;"Hard to say without knowing your case, but it's a valid way of initializing data. Why are you creating these variables? Do you use them in your model? Do you need them to be reactive from the very beginning? As usual, it all depends.  
  
Check [this chapter](http://vuejs.org/guide/reactivity.html) from official guide, it should help."
2016-07-31 22:53:44;Listening for multiple events in Vue 2.0;"Just use multiple `v-on`s. You can also use the shorthand to make it simpler:

```
<div id=""blah""
  @keyup.enter=""onKeyUp""
  @blur=""onBlur"">
</div>
```"
2016-08-13 15:16:01;Vue vs React;"I posted a bit in the /r/reactjs thread, but I am also making this decision, so I'll post some here as well.

Things I dislike about react:

- The render function. You either define some functions or snippets up front based on certain logic, and then reference them later, or else litter your template with `{ list.map(function(){ return <li> ... </li>}})`, which just feels ugly as hell. Both methods really break my flow of reading what the html for this thing looks like. 

React people will deflect this by saying ""you are not writing html, you are writing js that generates html"". That is not how I view things. My ideal is writing html and the js interaction that magically binds to it. Vue feels more like that.

- Everything is super functional. A lot of the recipes for parent <-> child communication require passing functions that accept functions  and so forth. That, or people will say ""don't do that, use redux."" This is all good and fine, but I am working with people who are not primarily programmers, and a lot of callback passing can get confusing fast. Don't get me started on `this`. In Vue, I use a lot less `bind` than in react, because it automatically fixes up all of my `methods` for me.

- Boilerplate. Especially once you get into redux, there are a few files worth of incantations that I don't really understand, but you gotta do to wire everything together. Vue has less of that. `applyMiddleware(thunk, reactErrorHandler)` ?? wtf is that? All of my apps have this code that I have no idea what it does. That scares me. 

Vue seems simpler, and it feels much more pragmatic to me. You want to do X, add Y to your component options. I like that.

I recently found http://wix.github.io/react-templates/, which seems to make react feel more like vue in some ways, so I will be trying that out in the near future. In my opinion, react is good, but Vue is better.

Whether you compare jsx with .vue file Or react's css with vue's css support. Vue already has performed very well in benchmarks. From the thread in /r/react, apparently react does not support prop binding either.

In many areas, react goes against standards (jsx is a prime example) while vue is closer to standards.

Though i have to admit that react has bigger community and is more popular. 

tbh if react was not pita to get started, i would be using react. But now that i know Vue, i just can't see what does react offers so much that i leave vue's benefits.I've looked at vue, react and aurelia. I really liked aurelia until I saw vue. Vue seems like a cleaner, lightweight version of aurelia. Aurelia front-loads so much crap its ridiculous and the only example app they have is poorly structured. even their generator cli sucks

React looks funky, so many new things to grok. Thunks, stores, reducers. I thought angular was tough to grok but this shit is ridiculous. And all the react fanboys saying ""its not html -- its jsx!"" i just say, wtf do you think the x is in jsx? xhtml. I personally don't like that level of ignorance.

Vue looks like it took what works from each framework and dropped what sucked.
The only thing holding me backs is i'm waiting for webpack-2.0 template. I don't want to start with 1.0 now and then have to refactor everything in a month or two.I've shipped code with both React and Vue. An important question is what are you building?

Is the web app THE company? For example Facebook is the software, but my dentist uses software. For Facebook they'll have a team of people working together, building out a complex architecture. Maybe the people building the views for FB aren't the ones who write the data store, or manage the UX. In this case React fits well. It does one thing well in a resource-rich complex architecture. 

If you're building an appointment management tool for my dentist though maybe it's just you or a few people, and you don't need a whole architecture around your client-side views. You have some data, want the users to be able to interact with it, and get the data back to the server. In this case you're going to have to fill in a lot of parts that React lacks to make it work. With Vue you can just get it done. Not to say you can't use Vue in an enterprise-scale web architecture, it's just that React was created specifically for that.

One thing I really like about Vue is that it plays really well with other things. Want to use a jQuery date picker? Just use it as normal and Vue is happy. Bootstrap and Vue just works. AJAX calls are easy. But if you want to use React, you really need a React version of everything.


I've heard people say that React is great for a resume but if you just want to get something built then Vue is better. TBH I'm at the point now where I don't know what I would build in React that I wouldn't rather build in Vue. Vue: more readable. You get to use actual HTML. having the HTML/JS/Style all in one file is just awesome. By the same token, more expressive. React is a lot more nuanced, and you write more code to hook things up, so it takes more effort to add features. It also took more effort for me to learn React in general. "
2016-08-12 11:06:03;Some help with starter packs;Maybe off the topic, but you can use PostCSS to replace most features in SCSS.
2016-08-11 21:44:19;The State of Vue 2.0;
2016-08-11 08:51:03;VueJS 2.0.0-rc.1 released;Started learning Vue yesterday. Would it make sense to start with 2.0 already? I'm doing the Vue tutorial on Laracasts right now. How much has everything changed from. 1.x to 2.0?
2016-08-09 19:08:34;VueJS vs. KnockoutJS. How to convince a boss?;">company

**Money**. How will switching save your boss money? Is your application public facing? Slow frameworks increase bounce rate which decreases conversions.Whenever you change a technology in your stack that works (robust or fragile, it still works, right?) then you need to emphasize how much money this will save in the short and long run. While everyone is commenting about money..... Keep in mind that there is more than one path to money: 

* increased productivity leads to money: less people to do more work.
* getting things out faster: speed to market leads to faster interactions and happier customers which leads to more money.
* reduced tech debt: less bugs means more time can be spent on new, value-add features which leads to more money. 

The other way to convince your boss (assuming this is a big company) is to figure out what HE is being measured on by his leadership and tailor your message to show how switching can help him (this is also assuming your boss is somewhat self centered)



As for convincing other developers (which, if the entire team wants to switch your boss may not have an option):

* documentation is seller: even a junior dev should be able to spend 1 day reading through the documentation and be able to pick it up.
* vue-cli is fucking awesome: unit and e2e tests and pre-processing are configured right out of the box. 
* es6 is great: arrow functions, object and array short hand notation, PROPER ARRAY FUNCTIONS
* reusability is amazing: component/compassable architecture is not the future... is it the present.
* flexibility is also killer: CSS, SCSS, LESS, Jade? Yup, you can use all those.
* and the thing all employees care about: marketability. Using newer technologies makes you more valuable in the tech marketplace. So when they are ready (or forced?) to go to another company, they won't have an antiquated resume. 


(edit fixing formating)A few reasons I would use:

- larger userbase. 24k stars vs 7k stars on Github is just one example. 

- larger ecosystem. look at the number of actively maintained libraries/components for VueJS vs Knockout. some things for Knockout - like Knockout Mapping - haven't been touched in years.

- Vue JS has LTS (starting with 1.1). Not sure if Knockout does, but a quick google doesn't show anything.It's all about the money. Make calculations how much company spends on maintaining and updating your current code + plus maybe some current stack downsides (like it's slow) OP - so, how did it go??"
2016-08-19 19:05:29;How do I store geolocation.getCurrentPosition in root vue data?;"The problem is that `navigator.geolocation.getCurrentPosition()` is an asynchronous operation.

This means that the rest of your data() function is executed while this operation happens ""in parallel"" (its not ecatly ""parallel"" but this gets the point across), and at the end, your data object has been created before the positioning finished.

So what you have to do is:

* create the data object with empty values
* call `navigator.geolocation.getCurrentPosition()` from the `ready()` hook.
* in the callback of `getCurrentPosition()`, you can then assign the position values to the data properties

this looks kind of like this:

    var app = Vue.extend({
       data () {
           return {
               currentLocation: {
                   currentLocationLat: null,
                   currentLocationLon: null,
                   currentLocation: null,
               }
           }
       },
       ready () {
          if ('geolocation' in navigator) {
            var gl = navigator.geolocation
            gl.getCurrentPosition(function(position) {
              this.currentLocation = position.coords
              this.currentLocationLon = position.coords.longitude
              this.currentLocationLat = position.coords.latitude
              console.log(this.currentLocation)
            }.bind(this)) // bind to `this` so it's the current component.
            
          }
       }
    })
    
You should read up on asynchronous operations in javascript, a lot of the advanced functionality relies on his concept.I believe there's a way to only render the view when the data has come back. You can resolve a promise here to wait for the data. But I'm not sure the exact syntax. I saw this in the documentation."
2016-08-19 17:03:47;Bug using vue-loader with a template src tag;I am getting an error that webpack doesn't have the appropriate loader when I am supplying an src for an template. It seems that the template is pre-compiling .Can you post code of your vue file and html file here?
2016-08-18 14:42:33;Jalaali Moment.js filters for your Vue.js project;What does this module do that `vue-moment` does not?
2016-08-17 20:38:39;Vue.js Error Reporting with Sentry;
2016-08-17 19:09:33;Isomorphic SPA;"Example 2.0 app with SSR: https://github.com/vuejs/vue-hackernews-2.0From what I can gather, isomorphic apps are not possible in version 1, so you'd have to start right away with version 2. Being at Release Candidate indicates that there will be no more API changes (or at least minimal ones), so depending on your level of comfort being on the bleeding edge, and your general knowledge of how to architect and build isomorphic SPA's (regardless of which framework you use), it may or may not be wise to get started with it.

If you do wind up using it, I'm sure there will be a lot of people eager to hear about your experience, so please share what you learn!"
2016-08-26 22:53:28;I can't understand 'hot-reload'... Is there an alternative? Does everyone use hot-reload?;"You probably should be using `webpack-simple` instead of `webpack` if you are not familiar with webpack itself. The whole point about the `webpack` template is that it's very opinionated and requires the ability to tweak webpack configs when things go wrong, so we warn about that upfront in the docs: http://vuejs-templates.github.io/webpack/.

As for hot-reload, there's no need to restart the server, just refresh your browser.

And if you have cases where editing the template doesn't reflect a change in the browser, you can file an issue at `vue-loader` with a reproduction.Wow I never ever had to stop and run the server again, if I ever notice changes aren't reflecting I just refresh the browser and everything works fine./r/webpackI find it safe to ignore anything with the word ""hot"" in the name.  Hot Loads are especially unappealing, but that is probably just me."
2016-08-26 19:55:13;Help with vue-quill;Four examples are right in the repository you linked: https://github.com/CroudSupport/vue-quill/tree/master/examples
2016-08-26 01:25:29;Currently working on a new project, and I have some questions;"I would return a user object upon login with something like this:

	user: {
		role: 'admin' // 'admin' or 'default'
		access: {
			feature1: true,
			feature2: false
			featureX: true
		}
	}


Then the UI can just check `user.featureX` to see if it should display access to it. You would need whatever api calls are made within featureX to check that the user does indeed have access to Feature X on the server side. Or return an unauthorized http response.

For admin features, depending on the size of the app I usually build it directly into the UI, so you might have links like ""Delete"" wrapped in logic like:

	if (user.role === 'admin') {
		//show delete link
	}

For large apps usually there is a seperate UI for that on `admin.myapp.com` or something that only allows admin accounts to login.

As for oAuth and all that you'd have to find an example out there, I'm sure there are plenty."
2016-08-25 02:22:43;A Vue 2.0 click-outside component;"    if (!el.contains(e.target))

won't this keep the handler from being called if I click *outside* of the component but *inside* of one of its parent elements?

I would rather add a click handler to the container calling `e.stopPropagation()`"
2016-08-24 02:24:08;Pagination with v-for?;https://jsfiddle.net/Linusborg/9sd90474/17/I'm no Vue guru, just started using it, but this might work for you: https://jsfiddle.net/bvx0p6u4/
2016-09-03 07:35:45;Test code not working. What am I doing wrong?;The problem is you missed the 's' from methods: {}
2016-09-02 14:37:41;Vue.js Meetup in Berlin — Who is interested?;"If I was in Berlin I certainly would!I'm inWould try if in mumbaiNow, after some time without anything around VueJS happening in Berlin, I decided to open up a meetup! I hope anyone is coming!

**I will post updates here soon.**http://meetu.ps/c/31Jsc/6YkHj/f …I did it!"
2016-09-01 14:31:10;Component strategy for a dashboard layout;"Generally I don't make anything a component until I need to use it a second time. You should name things for what they do/are.It's not Vue-specific problem, so [this entry](https://facebook.github.io/react/docs/thinking-in-react.html) from React docs should shed some light on what should be a component.  

Personally I narrow it down to 2 questions, which are ""Can it be reused?"" and ""Does it make sense to make it autonomous?"" If answer is yes, it should e component. Looking at your example of dashboard, Browser Usage panel is a great example of component with nested components (chart, tables etc.).

Naming, it's like with CSS, never make it location specific. If it's a table, name it a table, it will mean just that in resource usage, user listing, to do list etc. If you name it to-do-table... it won't make sense when used for listing users."
2016-09-01 05:29:12;Passing config variables from index to vuejs;"You should be able to access this via VueJS using ""window.app_url"" as the value. I'm doing something similar with my Laravel application. "
2016-08-31 09:04:33;Vue.js for mobile apps with Onsen UI;This is awesome, definitely makes Onsen UI more interesting to me!
2016-09-10 02:27:21;Step by step of building HackerNews clone using Vue.js;"That's a little too far from ""step by step"". I recently learned about Vue and found this post. At Step 2 I am already lost since most of the code is missing. That post is more or less deconstructing into general steps how that clone was developed. But it's not step-by-step the way RailsTutorial is step-by-step. I'll still go through it but at this point it's easier to clone the main repo and go through code and structure by itself."
2016-09-10 00:42:42;"[REQUEST] Weekly 'What Are You Working On"" Thread?";"I second this ideaHow do I find the vue slack?I'll start- I'm working on this: https://github.com/wishinghand/nth

It uses the Quasar Framework (like Ionic but for Vue) and it's just to replace an app that disappeared off of the App Store. It's for weird/obscure words in Scrabble.Nice, /u/wishinghand! It would be sick to have a quick youtube video of the app to check it out w/out download.


I'll go next then: [Read Reddit](http://readreddit.herokuapp.com). A little web app for viewing image based subreddits (meme subreddits like /r/me_irl, and um, other images based subreddits...). You can login and upvote things.

Still a wip. I need to throttle inputs and things like that. I use Valve's [fingerprintjs2](https://github.com/Valve/fingerprintjs2), along with AES encryption to handle auto login."
2016-09-06 11:33:29;Is it logical/okay to build a large scale application with Vue.js ?;Yes you absolutely can! The real power of Vue is in Vue components (especially single-file ones), and then you can pair it with things like vue-router for client-side routing, vue-resource for HTTP requests, and Vuex for managing application state. Don't have any experience with it, but you might want to look at: https://github.com/vuejs/vuexIt's perfectly fine, I think! Make sure to read up on the [recommendations for large scale apps on the Vue.js documentation.](https://vuejs.org/guide/application.html)
2016-09-05 07:44:44;Guide: How to use Vue.js with jQuery Plugins;Couldn't you just make jquery global outside of webpack and save a lot of effort?
2016-09-04 18:26:26;Vue.js: Replacing a Pojo Store with a Vuex Store;
2016-09-17 11:34:18;Does VUE-JSX Support 'slot' in the render method ??;"Not tested right now, but if I recall correctly, you simply do:

     <div>
      { this.$slots.default }
    </div>Have you looked at the last bit here: https://rc.vuejs.org/guide/render-function.html?"
2016-09-16 13:27:45;A simple higher level way to use Vue 2, Vuex and Vue-Router;Ooh, I like this!
2016-09-15 16:47:48;Onsen UI 2: UI Framework and tools for hybrid and mobile web apps - with Vue.js;
2016-09-15 08:52:48;How do you make a plugins for both versions of vuejs?;
2016-09-15 05:04:52;Vuejs vs Angularjs2;"I think most people are primarily concerned with the upgrade path form Angular 1 to Angular 2 (it is practically a brand new framework). VueJS is awesome - and shares a lot with Angular (more with 2 than 1). The VueJS syntax is really simple (you can learn most of it in a few hours). Angular has a much steeper learning curve.

You can find a comparison between the VueJS and many of the popular frameworks here: https://rc.vuejs.org/guide/comparison.htmlI loved angular 1. Not so much 2, so I did a stack of research and ended up on vuejs and I love it. (also love v2) It feels intuitive, and easy to use. I tried react and aurelia mainly. Vue has a lot of similar syntax. I stopped using Angular around a year ago for React. Lately, using Vue w/ my personal projects I find myself missing Angular due to the syntax. With the recent breaking changes in Angular I'm not exactly looking to jump ship anytime soon, though... 2c

Angular has ideas of how your app should be every step along the mvc frame, which can be good and bad. Just something to think about. While Vue is easier to incorporate in existing projects without dictating how the things surrounding it should behave.

I personally love dropping a CDN of Vue in an existing project and getting to work. Vue is great."
2016-09-24 16:46:39;[HELP] custom directive parameter ajaxed;
2016-09-24 13:28:49;Interface Vue to a PHP MVC framework?;"In the case of an API, the front end and back end (in an ideal world) are completely separated.  The only interaction between them would be through REST endpoints, and which backend you use would be irrelevant to Vue.

That said, my personal favorite tool for building the API is Laravel.  Laravel has route shortcuts that automatically generate REST routes for a model.  For instance with a `Post` model, it would create routes to fetch the posts, edit a post, create a new post, etc.

Then on the front end I use `vue-resource` to create resources that have the same routes as my Laravel API.  so in JS I would run `posts.update({id: 1}, {title: ""New Title""});`.  Since both `vue-resource` and Laravel use REST practices, the routes match up perfectly.

Here is an example of a Laravel REST controller.  It has `update`, `store`, `delete`, `show`, and `index` routes.  https://github.com/jsiebach/angular-todo/blob/master/app/Http/Controllers/TodoController.php

In Vue then you would just create a resource to call those using `var todos = Vue.http.resource(""/api/todos/:id"")` and it maps to the same routes.  `todos.delete({id: 1})` for example.  Vue resources: https://github.com/vuejs/vue-resource/blob/master/docs/resource.mdThis is what I am struggling with at the moment. And a relational store, to (try) and cut down on the amount of looping through data that I am doing.

From what I have found, there is no one-size-fits-all.  
I think it is a case (for an api library at least) to start building a class, put all the ajax in there, then return promises.  
Anywhere you need to access server data (or CRUD), you use the api.  
If there isn't a method in the api that fits that specific need, then you write a new one in the api class.  
Once it starts getting a bit horrible, then you look at refactoring it.

I find it hard to judge the common functionality before I start, so I end up writing complex helper functions that - in the end - don't actually help.  
So I am trying the unplanned approach of 'i need it to do this *[code code code]* now it does'.  
Once I start making progress, I'm going to look at cleaning it up.

If you want something to help, there is `vue-resource` which will handle 99% use-cases of ajax.Vue is now the default JS framework for Laravel.
Try Laracasts.com for some relevant stuff, there might actually be something in the docs themselves."
2016-09-24 10:34:39;How do you feel Vue.js compatibility from 1.x to 2.0?;"Its a major version change.  
Breaking changes are to be expected, so I don't expect the dev team to be concerned about compatibility.  
I'm not sure what their stance is on long-term support for 1.x (which is perhaps more your concern?), but I know they have pushed some updates recently, so I think there will be short-term support. 

Vuejs 2.0 brings some great new features & performance, and with it new paradigms (or at least restricting old ones to reduce the chances of tying yourself in knots).  
If you don't want them, stick with Vue 1.x. Its still valid & good..

Compatibility is mostly the same.  
The biggest breaking changes I've had to deal with are 3rd party plugins that used complicated 2-way bindings.  
And the `ready()` to `mounted()` change.

I guess there are some annoying refactorings to do with `coerce`ed props.  

The new `v-for` directive is great, its fantastic having access to the `index`, `key`, and `value`. Very handy for doing alternating-style lists.

The performance improvement is huge!

But then, my project is still in its infancy.  
I have my basic UI, and I'm now working on api/state management and data flow.

Anything in particular you are concerned about?Young projects need to break compatibility quickly or be faced with debt.It's a major version bump, so it's perfect timing for B/C breaks.

They have continued developing 1.x during the process and ported a number of fixes while release 2.0 RC's. 

This shows that they certainly do care about those on legacy release, but don't expect them to back port everything."
2016-09-23 15:38:21;Show /r/vuejs: A simple Vue app for random movies;"Background: I wanted to create a simple App using Vue, with the goal of getting familiar with Vue.

The app uses Vue, FontAwesome, PureCSS grids & lodash. The backend is built on Lumen (Laravel) and the data is from the OMDb API.looks nice, would you consider adding a link to a github repo with the code? Might help some people out. :)Fantastic, but I'd recommend adding in some sort of filter so you don't get movies with a low amount of votes (the one I received had only 32, making the rating useless).This is really good 👍"
2016-09-23 14:29:38;Why Vue (not React) is the new jQuery;"I don't think I'd compare it to jQuery… I'm still new to it, but it seems more like when HTML5 let us get rid of flash and java applets. This strikes a nerve. As one of those beginner programmers (actually, more like a forever n00b) not versed in best practices, design patterns..., VueJS is the first client side technology I've touched since jQuery. 

To put it even more into perspective, I'm using CodeIgniter and not Laravel for the same reasons. XD Although this isn't meant to compare CodeIgniter to VueJS. Good article. I love Facebook projects because they give us new ideas but man sometimes the implementations are so gross. Vue is an excellent alternative to React. "
2016-09-30 19:01:26;Vue 2.0 is here!;This has TypeScript typings included, but are there Flow definitions as well? Pretty sure I was digging through github and came across some.This looks really promising!  Anyone used it in a project and would like to share?
2016-09-29 19:42:24;v-show problem (probably easy);"[DISCLAIMER]
All of this is written from memory, I didn't use vue.js in a month, so beware of typos and such small things.
Anyway, should work with minimal tweaking.

I'll edit the post If anyone give me corrections.

##Why it doesn't work ?##

In the `changeShow` method, `this.show` isn't binded to a specific post, but to the whole post list.

3 solutions, in order :
* simple but quick
* does the job
* the best one

----------
###Quick and dirty fix###

The easy fix is to use `$index` value in list rendering as the flag [(reference)](https://vuejs.org/guide/list.html).
But **this will allow for only 1 open post at once**.

Look `@click` line 6

    <div @click=""changeShow($index)"">

`v-show` line 8

    <p v-show=""show === $index"">{{ post.body }}</p>

 and the `changeShow` method line 40

    changeShow: function (index) {
        if (this.show === index)
            this.show = false; // or use null as a default value
        
        this.show = index;
    }

------
###Complete but ugly fix###

You could have multiple post opened with a bit more work and a [Set](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Set) (carefull, EcmaScript 6):

`@click` line 6

    <div @click=""addShow($index)"">

`v-show` line 8

    <p v-show=""shouldShow($index)"">{{ post.body }}</p>

`show` declaration line 26

    show: new Set()

rename and edit `toggleShow` method line 40

    toggleShow: function (index) {
        if(this.shouldShow(index))
            this.show.delete(index);

        this.show.add(index);
    }

add a `shouldShow` method

    shouldShow: function(index) {
        return this.show.has(index);
    }

If you can't use ES6 features, you can use an array and make it act like a Set, but PITA.

------
###The better way###

Have a Post component, and not only a PostList component.

Change your current PostList component to :

    <template>
        <div class=""container"">
            <h1>My Posts</h1>
            <ul class=""list-group"">
                <li class=""list-group-item"" v-for=""post in list"">
                    <post :post=""post""></post>
                </li>
            </ul>
        </div>
    </template>
                        
                        
    <script>
        export default{
            data(){
                return{
                    list: []
                }
            },
            
            ready(){
                this.fetchPostList();
            },

            methods:{
                fetchPostList() {
                    var root = 'http://jsonplaceholder.typicode.com';
                    this.$http.get(root + '/posts')
                              .then(response => this.list = response.data)
                }
            }
        }
    </script>

And create your new Post component like this :

	<template>
		<div @click=""toggleShow"">
		    <h4>{{ post.title }}</h4>
		    <p v-show=""show"">{{ post.body }}</p>
		    <span v-show=""show"" class=""label label-primary"">ID: {{ post.userId }}</span>
		</div>
	</template>

	<script>

	    export default{

	    	props: ['post'],

	        data(){
	            return{
	                show: false
	            }
	        },

	        methods:{
	            toggleShow() {
	                this.show = !this.show;
	            }
	        }

	    }
	</script>

**I didn't registered the Post component, because I don't know what you prefer between [global or local registration](https://vuejs.org/guide/components.html#Using-Components)**

If you need in depth explanation, just ask for it.

[EDIT]
Renamed `addShow` to `toggleShow` in 2nd solution."
2016-09-29 09:14:24;Love Vue JS and Redux? Use 'Vua-Redux' exact Like React-Redux;
2016-09-28 14:27:21;Laravel 5.3 + Vue reddit-like voting system;"if it's setting to 11, this would indicate that 'this.task.votes = response.data.votes + 1;' line is appending 1 to the end, which means response.data.votes is a string. i've had this happen when working with vue. i have no solution other than parseInt() on 'response.data.votes' (i'm sure the json response for votes is enclosed in quotes making it a string value.. just a guess though)

just incase http://stackoverflow.com/questions/31527050/laravel-5-controller-sending-json-integer-as-stringJust reading the note about the prop being a string, make sure you set the type explicitly like so:

    props: {
        votes: {
            type: Number,
        }
    }

if I was planning a similar component, I would have a function to do something like `this.$set('votes', this.$get('votes') + 1)` then a watcher in the component to send it up to the backend if you need to.

If `response.data.votes` from the API is coming back as a string, check it's not quoted, and check that you have `$casts = ['votes' => 'integer']` in your model, and that the column type in the database is in fact integer. That's all I can think of, good luck!"
2016-09-28 08:52:43;How can I reuse multiple region elements in the outermost layer while switching application modes?;"http://vuejs.org/guide/components.html#Named-Slots

I believe this is what you're looking for."
2016-10-06 14:39:30;DAE cares about Vue 1.0 documentation?;"I checked the vuex github, and it appears to be a [known issue](https://github.com/vuejs/vuex/issues/346).

Here's a working link for the old documentation: [https://github.com/vuejs/vuex/tree/1.0/docs/en](https://github.com/vuejs/vuex/tree/1.0/docs/en)>  was wondering if there are plans to bring back Vue 1.0 documentation along with vue router - vuex to a website format instead of those github readme links?

Vue.js 1.0 documentation is still online and fully functional. 
We will work on bringing docs for vue-router 0.7 and vuex 1.0 back as websites, but can't do everything at once, so we will have to ask for your patience.

> so tearing down the old forum + no easily searchable documentation = screw you if you are using the old version

* We had to switch forums because we could not get NodeBB to work reliably.
* There is no migration path from NodeBB to Discourse, so we could not migrate old posts to Dicsourse.
* the old forum is available at archive.forum.vuejs.org
* Google links to old forum posts are now redirected properly.

if there is something else you miss, don't hesitate to open an issue."
2016-10-05 17:33:33;Standalone vs. Runtime;"> But it seems it really means you cant even USE those templates in an HTML file, like so:

This is correct.

Reason: Vue 2.0 uses a virtualDOM. Because of this Vue has to convert all HTML templates into render functions - also this HTML that you used in your HTML file.

The compiler responsible for this is included in the ""standalone"" build, but not in the ""runtime-only"" build

Vue-loader / vueify does this compile step during build, and usually you can setup your app to only rely on .vue files. In that case, you can use the runtime-only build and save a few kb.

If you have to use Template code in your HTMl file like you show above (though I did not understand the reason), you will have to use the standalone build, but the compiler only adds a few kb (and is still smaller than Vue 1.0).

Does that answer your question?"
2016-10-05 13:46:19;Building a site (similar to HackerNews) in Vuejs2;"The official repo has a demo app for Hacker News.

https://github.com/vuejs/vue-hackernews-2.0

Live here - https://vue-hn.now.sh/top"
2016-10-05 07:38:02;Vue components for creating neat windows.;I built this with css-modules + jsx + functional component 
2016-10-05 07:30:31;Using VueRouter and Vuex together - state is resetted to initial state after router changed;You are trying to show poll with ID 1 but you have added poll with ID 0 (first index of array) 
2016-10-15 06:59:54;Anyone have experience with Weex? It's an official Vue.js wrapper for native mobile development (backed by Alibaba), an alternative to Ionic or React Native.;"Currently Weex is ""inspired by"" Vue.js. The syntax is designed a little different for some reasons. But soon Weex will use Vue 2.0 directly. It will be ""powered by"" Vue. The roadmap Weex and Vue supporting each other is [here](https://github.com/weexteam/weex-vue-framework/issues/9).

Weex also re-define the tags, attrs, styles and events of each components which is more friendly for native features. But the HTML/CSS/JS/Vue syntax will be respected and preserved in the future.

Front-end developers in Alibaba already build some part of Taobao app on Weex. And the more and more apps in Alibaba is trying to use Weex.Quasar is pretty good but my experience is limited. ""Ionic for Vue"" is exactly how I'd describe it. current version of weex is still 0.7. the syntax is quite different from vuejs! But weex team has invited the author of vuejs to be their technical consultant. so I  think you should stand back and wait for more stable features come out. Almoust all of Alibaba's app will be based on weex.Yea im stuck between Onsen UI and Weex myself ... https://onsen.io/blog/preview-vue-support-onsen-ui/"
2016-10-14 13:19:56;Vue.delete() not working;"according to the docs for [.delete()](http://vuejs.org/api/#Vue-delete) is says 

> Delete a property on an object. If the object is reactive, ensure the deletion triggers view updates. This is primarily used to get around the limitation that Vue cannot detect property deletions, but you should rarely need to use it.

Although you're passing the entire todo object instead of the todo array key to your delete function, you're really close. But even if you passed the array key it looks like it isn't updating the view.

I added the array index to the v-for, and then passed that into your delete function. Then I looked at the [TodoMVC example](http://vuejs.org/examples/todomvc.html) (specifically the `removeTodo` function) and saw they were using [.splice()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice)

Here is the result: https://jsfiddle.net/jLfdmn5s/3/

TL;DR Pass in todo array key instead of entire todo item, then replace .delete() with an array splice.Second argument of vue.delete is key, not the object to be deleted. "
2016-10-14 00:26:29;Easy way to know when <router-view> is loaded.;the ready method in that page/component? 
2016-10-12 20:47:32;Vue component explorer?;"react has the amazing [react-storybook](https://github.com/kadirahq/react-storybook).

For Vue, one of our core team members started working on a project inspired by it: [vue-play](https://github.com/vue-play/vue-play)"
2016-10-12 19:14:24;Best practice for nested components in VueX?;"When I look at new frameworks, I try to make an extended version of the classic Todo-app. 

Instead of an App instance hosting a list of TodoItems, I want the App instance to host a dynamically sized list of TodoLists which in turn host their own list of TodoItems. This is a tree structure.

This seemingly simple app seems to introduce a lot of problems that the shiny introductionary tutorials don't mention. IMHO, it should be just as easy as the plain Todo-app.

Maybe I speak too soon or harshly now, but I think all the reactive functionality(transparent observing mutations of plain JS objects) of most frameworks are near garbage for real situations. It confuses newbies to what an app should be designed like.

If you change a deeply nested child in the model, you have to update the whole path to it with something like Immutable.js. Then the the updated model path will alert the component path of a needed refresh.

It's too bad one need quite a bit of discipline to do this in JS. Languages like Elm and ClojureScript feel more natural.

Anyway, good question and I look forward to reading the other answers. :)You can't make mutations from a child element? How come? I'm working with nested child components, and everything's working as expected."
2016-10-22 10:34:20;Real rival of Angular is Vue.js, not React;
2016-10-22 04:29:38;Question about Vue Components and Style;"You can write your variables and mixins in a file and import it where ever you need it.If you have one ""_variables.scss"" file where you have all thise definitions (and those only, not actual CSS), you can import it into any component that needs it. Since it's only variables, this won't change the output or filesize in any way.

This means that you have to add a `@import './path/to/_variables.scss'` to each component that needs it, but enables you do change values in one place later.

If you were to use stylus, you could even add that variables file to be autoloaded by stylus-loader. But sass-loader does not support something like this.Don't use the style part of single-file components, which is ok.You should be able to reference imported variables and functions from other scss files fine when using them in component classes that are scoped.I have a semi related question- what do I do if I want to have a component with scoped and non-scoped CSS? For instance a component that had children and therefore the CSS is inherited, but it also has non-component elements in its template that need CSS that I don't want to be inherited. "
2016-10-21 12:00:29;Why We Chose Vue.js;"> You can use it with or without jQuery

I've actually been wondering about this - is it safe to manipulate the DOM (whether with vanilla js or jQuery) inside the element your Vue instance is mounted to? My gut tells me that's risky"
2016-10-21 09:55:58;Medium-like Image Loading with Vue.js;First time I noticed medium image loading was when I tried to read an article  offline and there were no fucking images loaded.
2016-10-21 08:28:03;Prevent form submit;"You might want try adding brackets to your v-on method name `onSubmit()`. Afaik you should add them as soon as you have arguments in your method.

Since event modifiers can be used together you could also try adding `.stop` (meaning `stopPropagation()` will be called for you).One way I think you could do is attach the onSubmit method, to a button instead, but make sure the button is of type ""button"" and not ""submit"". This will only work when there is more than 1 input in the form (luckily for you there is, username/password). Single input forms seem to always trigger this regardless

I use this method to get around the enter key issue."
2016-10-29 16:38:37;SpeakJS – a Discord server for all things JavaScript;
2016-10-29 12:36:49;How to teach vue.js to someone who never did web / few development. Is it even a good idea ?;"Vue is a great framework for beginners due to its explicit nature, but as ever—start from the beginning. Learn pure JavaScript as well as web development concepts, then only bring in a framework (like Vue) when you feel like you need it. 

I would suggest learn through building, start with something like a simple to-do app (with just JavaScript then with Vue) and go from there. We use Vue.js where I work. I'm the front-end lead. Our back end is Java (Spring Boot, Spring Security, Hibernate). Back end doesn't matter. You can use Vue.js with any back end. Hell, you can have a back end in CGI with Perl, if you want. :-)

Yes, Vue.js is an easy framework. You can be productive in a day or two with everything in the on-line guide and API docs.""If there's a will there's a way""  
Anyways, he should probably at least know how HTML works which should be pretty easy. Im not sure why youre asking about PHP, that really doesnt have anything to do with Vue.  If he wants to learn it bad enough though, he could definitely do it."
2016-10-29 08:16:56;Vue with Materialize;You probably need to use a custom directive, I had to make them to get the Materialize datepicker and dropdown working.
2016-10-28 23:12:06;A sample app using the spotify api, vue, and vuex.;I've decided to share some of what I build while learning more about Vue.js. Hopefully I've presented this in a way others can find useful.Awesome article. Thanks!thx!
2016-10-28 16:47:56;PrettyHost is a simple alternate to the default wamp / xampp pages.;
2016-11-05 21:41:25;Use data in a vue instance globally?;"Try looking into [vuex](https://github.com/vuejs/vuex) :-)If ""anywhere"" means any component, then use vuex as suggested. Otherwise please clarify.

There is a ""dirty"" way as well. You can refer

     vm.$root.productsHeld

 from any child component to access the value as well. But this is not recommend.http://vuejs.org/v2/guide/state-management.html"
2016-11-05 13:45:34;Is there a WYSIWYG editor option for vue 2.0?;"Have you tried https://trix-editor.org/ ?dispatch reference to editor object to parent component on text change I ended up getting quill to work by using  [ref](https://vuejs.org/v2/guide/components.html#Child-Component-Refs)

    <quill :options=""{ theme: 'snow' }"" ref=""qc"">{{event.description}}</quill>"
2016-11-05 13:21:50;Loading from rest in components?;"Have you tried using `beforeRouteEnter` as outlined in the documentation you provided? 

As an aside, you don't have to quote every property name in JS, only in JSON. 'watch': {
        '$route': 'fetchData',
}

Remove that. You are literally listening to every route change and firing fetchData.

"
2016-11-04 21:50:51;jQuery and Vue.js;"Do you have any JS errors? I don't see anything that should cause problems. Can you post a codepen or something of the HTML and JS so we can take a closer look? It might be your other files that are causing an issue. We're missing part of the picture here.

jQuery doesn't interface with `v-on` in any way that I'm aware of, so there shouldn't be a problem.Post your code"
2016-11-04 20:37:31;My first vue app, i.e., fucking around with vue (actually writing some code) on my lunch hour;
2016-11-12 18:07:35;Anyone feel like doing a side project this weekend?;"If you guys ended up building stuff, you should share it!I don't have time this weekend, but I'm interested in joining in another time. Hey, sent you a pm!Dam I would have loved to contribute. I ended up building a little quiz application yesterday. I am still getting to grips with vue but it would be great to work on something in the future.So what did you build?
"
2016-11-11 18:36:53;$watch, methods, and computed properties;"Take a look at the following code snippet:

    var vm = new Vue({
        el: '#welcome',
        data: {
            message: 'Hello',
            name: 'World',
            nameEdits: 0
        },
        computed: {
            welcomeMessage: function () {
                return this.message + ' ' + this.name
            }
        },
        watch: {
            name: function () {
                if (this.message.toLowerCase() === 'reset') {
                    this.nameEdits = 0
                } else {
                    this.nameEdits += 1 
                }
            }
        },
        methods: {
            numRenders: function () {
                console.log('Page rendered')
            }
        }
    })

Let's first look at the computed section. welcomeMessage will only get called whenever either message or name changes since it is dependent on those two things. So if I change any of the other data variables such as nameEdits, welcomeMessage will not be called again since it is not dependent on it. This property of computed properties help keep your app efficient and responsive.

Now let's look at the watch section. Notice that it is watching on the name attribute. This means that whenever name changes, the function will get called which updates the nameEdits attribute. There are two things to note here. One is that each watch function can only watch on one attribute. Second is that this watch function will not be triggered when nameEdits or message is altered.

Lastly, let's look at the methods section. numRenders will get called with every rerender done. So whenever anything is updated on the UI, numRenders is called. For example, if you have an app that displays a timer that updates every millisecond, all your methods will be called every millisecond regardless of what those methods do."
2016-11-11 15:13:24;Are there any free courses online for VueJS that aren't just people going through the 'getting started' section of the site?;"I have yet to see a whole lot of in depth books or courses on Vue.

[Laracasts](https://laracasts.com/series/learning-vue-step-by-step) might have the most complete resource. Most of them are free but not all. 

[These Vue tutorials on Coligo](https://coligo.io/tag/vue) are generally fantastic and they walk you through small but complete applications.

There are a couple of books on LeanPub that I haven't read yet, but they're not free.

Also, most of these resources are for Vue 1. There weren't a whole lot of breaking changes with Vue 2, but there are definitely some differences that could trip you up. Keep the docs open while working through them.

I would also recommend looking through the [example applications](https://vuejs.org/v2/examples/index.html) that Vue provides. They aren't tutorials but the code is good, and should be easy to understand once you've worked through the guide.

I'm working on a fairly in depth tutorial building a complete application in Vue 2, with vuex and vue-router. Not sure when it will be completed though.It's not free, but the Majesty of Vue ebook on LeanPub has been great for me. They're coming out with a 2.0 book soon.Here's a nice list of tutorials on VueJS: [https://github.com/vuejs/awesome-vue#tutorials](https://github.com/vuejs/awesome-vue#tutorials)

[VueJsNews](https://twitter.com/VueJsNews) Twitter account share a lot of update tutorials about Vuejs. You take a check and follow :)codecourse.com has some full sized projects that use Laravel and VueJS"
2016-11-11 14:37:00;Why Vue?;
2016-11-11 06:33:25;Vue.js 2.0 + Firebase Auth Login;"Here's something I cooked up to track PRs for a group of guys I work out with. It is relatively primitive, but it should be a good starting point for you. If you log in with a user that is not in the DB, it will create it for you. If it recognizes a user, it will show that by changing the ""Create Account"" text to ""Log In"" and perform validation on the user. It also will lock you out after 5 incorrect attempts. http://codepen.io/mjweaver01/pen/ORzzXj"
2016-11-19 23:12:23;What libraries do you like using with Vue?;"beside the usual vuex, vue-loader, vue-router and vue-resource, i'm also using vee-validate and element-uiI recommend everyone to check out [Awesome Vue](https://github.com/vuejs/awesome-vue)Currently using vue infinite scroll, vue multi select, and vue validator. They are all pretty nice. Vue-router, Vuex, and Vue-Axios.I use my own, [eva.js](https://github.com/egoist/eva.js) which built on the top of Vue/Vuex and Vue-router; [vue-mugen-scroll](https://github.com/egoist/vue-mugen-scroll) for infinite scroll, [vue-slim-modal](https://github.com/egoist/vue-slim-modal) for building more high-level modals, and I do use some popular projects in awesome-vue list too.

And I use [vbuild](https://vbuild.js.org) to start a new project, you may also like vue-cli because it's official and more popular.

btw. for ajax I simply use axios."
2016-11-19 22:08:08;How do I import my own code in Vue?;"I'm assuming you're using ES6 as you're using `class` keyword, so, you have a couple of options. 

If you want to keep them in separate files, change `var Quiz = class...` to `export default class Quiz {...`. This allows you to write, in another file, `import Quiz from './path/to/quiz.js` to assign the class definition to the local variable Quiz in that file. 

Alternatively, keep them in the same file and write `export class Quiz {...` and  `export class AnotherClass {...`. This allows you to write `import { Quiz, AnotherClass } from './path/to/classes.js`, taking advantage of ES6's object destructuring syntax. 

If I'm confused and you're not using ES6, you'll need to use `require` instead of `import`, you can look up the difference but I hope this is enough to get you started. Good luck!

Edit: as for your other question, there should be no reason they don't play nice, as Vue should only touch the front end. The other option would be to break them into components.  
You could then use events to trigger the checking of answers. If there are multiple questions on a page, then a central store like vuex might make things easier"
2016-11-19 20:16:49;[Release] Voir - A simple store for VueJS: now with async action support and redux devtool action/state logging;This is cool but I'm not entirely sure what functionality it provides beyond Vuex?Vuex is modular out of the box. That's reason enough to stick with it.
2016-11-19 18:28:22;Help: login functionality with vue.js;"I think the easiest route is probably using JWT for auth, as people have built tooling for it on both ends:

* Go: https://github.com/auth0/go-jwt-middleware
* Vue: https://github.com/websanova/vue-auth

(make sure you are using up-to-date packages: https://auth0.com/blog/critical-vulnerabilities-in-json-web-token-libraries/)


This is using Auth0's tools (different from above), but here is a tutorial if you prefer that: https://auth0.com/blog/create-an-app-in-vuejs-2/here is a resource for implementing JWT in Go: https://github.com/thewhitetulip/web-dev-golang-anti-textbook/blob/master/manuscript/8.0buildingAPI.md

In a few days I'll try merging Vue and JWT with Go. I am curious about your experience regarding the integration.What's your backend going to be built with?Complete newbs question, but why can't I/You use the usual session auth ? (PHP style session auth, I don't know about go)

It's something I never get. Any help to understand the why ?"
2016-11-19 16:10:16;Question about project structure for Vue.js and REST server.;"In your specific case, I would consider separating the two projects into API and frontend.

If you only had the webapp it would probably be more convenient to have it all in one repository, but since you want to consume the API from several device types, I feel you may want to handle your web app as just another API consumer.

That being said, it shouldn't be too hard to move Vue into a different repository at a later stage. So if you can move faster having it all combined in the beginning, go for it. :)"
2016-11-26 16:07:49;I made a gem to set you up with Vue JS components, webpack and SSR in your Rails app (X-post Rails);
2016-11-26 12:25:25;I'm new to VueJS 2 and I need a review of my code (laravel 5 project);"> I really need advices on my VueJS code

Your code seems OK for me, it's clean, easy to read, well done. You may add comments (why not?). And maybe have a quick look at http://youmightnotneedjquery.com/To avoid using bootstrap, you could look at some of the Vue specific frameworks out there (check out awesome-vue for links).

Things I'd suggest you change:

- I agree with rap2h you should try and get rid of jQuery, especially since you're also bringing in Underscore. That's a lot of bloat for not a lot of functionality. Note that you can also bring in just a few pieces of Underscore if you're only using 2-3 functions.
- Writing ES5/6 would be nice and would probably make your code more 'standard Vue code'. It's becoming more and more rare to see non-ES5/6 code written, and Vue specifically recommends writing in it."
2016-11-25 19:40:26;vue 2 router - can't get it to work;"I generally don't put the root component as the ""/"" route but do it like this

    new Vue({
        el: '#app',
        router,
        render: h => h(App),
    });

Does this help? https://github.com/vuejs/vue-router/issues/713> const app = new Vue({
  router
}).$mount('#app')

That is no longer valid in Vue 2.0. Read the docs."
2016-11-25 16:58:29;"The ""Majesty of VueJS 2"" (ebook), black Friday deal 40% off";
2016-11-25 15:11:23;Express-Vue Express middleware to server side render Vue using only res.render;"I'm currently using this and love it so far.I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/javascript] [Express-Vue Express middleware to server side render Vue using only res.render - X-Post from r\/vuejs](https://np.reddit.com/r/javascript/comments/5eu3bn/expressvue_express_middleware_to_server_side/)

[](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*

[](#bot)"
2016-12-03 05:35:51;Vue.js Internals: How computed properties work;I wrote this article. Let me know if you have any questions or feedback :)Thank you!
2016-12-03 03:01:48;New Supporter plan to support Vue.js development while posting a Vue.js Job;
2016-12-02 23:24:32;Best resources to learn Vue for someone who knows React well?;"Honestly, it's really hard to beat the [official guide](http://vuejs.org/guide). It's not that long or dense, and is straight to the point.

From there, I'd poke around github and just look at Vue projects, I don't know any good ones offhand otherwise I'd link some."
2016-12-02 21:44:07;History mode on Laravel Homestead;"what part of it is not working? as far as I know, laravel homestead is simply a vargrant box like any other box. so you don't need to touch the box configuration.

what you need to do is direct all request to your main view. for example let's say you have an app.blade.php where you process all the incoming request. so in app/http/routes.php (laravel 5.2 or lower) or routes/web.php (laravel 5.3) make a route to accept all request and return the app.blade.php view :

    Route::get('{any:.+}', function () {
	  return view('app');
    });

    Route::get('/', function () {
	  return view('app');
    });

then make sure your vue-router history mode is on:

    const router = new VueRouter({
        mode: 'history',
        ...

that should work just fine."
2016-12-02 17:05:07;Component reusability with/without Vuex?;"You could use [mixins](https://vuejs.org/v2/guide/mixins.html).

Create a module that includes all the options that are the same between the two (so everything except the vuex specific things). Then you would create two components that both include the mixin you just created. Then on the one you need Vuex on, just add those methods in like you normally would.Use child parent communication with vues custom events. Something happens in the child component, emit an event upwards, your containing parent can deal with the logic, whether it is vuex, or other.  The spec for your component can be a clean interface, a set of events that the implementer has to hook into.I've been loving and using this guy: https://www.npmjs.com/package/vue-stash

Just lets you pass arbitrary data easily between components, a la props."
2016-12-10 19:17:34;Error: scope.{{function}} is not a function in single file components. What am I doing wrong?;"Are you using vue v1 or v2? Did you try already instead of 
module.exports = {... 
write
export default { ...
Try @click=""add"" without the ()I'm new to Vue, and JS for the most part so I'm curious, why do you have the following?: 

    data () {

I've only seen it as:

    data: {"
2016-12-09 19:19:26;New to vue(x);Nothing special about it. The internal variables usually just start with a $, or even an underscore, to try to avoid people from overwritting them. Just a naming convention. Nothing special about it.  When I see $<variablename> its easy for me to understand that this is an internal function of vue+vuex (or friends).`$` is legal in js variable names: `var $myvar = 2`
2016-12-09 16:34:15;5 Free VueJS Tutorials;
2016-12-09 08:23:12;Angular $location.search() equivalent ?;"To set new query use:

    this.$router.push({ query })

To get last query use:

    this.$route.query

If you are using vuex [this plugin might be usefull](https://github.com/vuejs/vuex-router-sync). It adds route module to store. Might be very usefull when you are changing query by dispatching an action.

Here is snippet of what I did in my project:

> component

    async onSubmit() {
      try {
        const { query } = await this.$store.dispatch(SEARCH, this.model);

        this.$router.push({ query });
      } catch (error) {
        // Error handling
        this.errorMessage = `Error: ${error.response.message}`;
      }
    },

> actions

    async [SEARCH]({ rootState }, payload) {
      // You have to add filter to query object to remove falsy values, but not, for example ""0"". To much code for this snippet.
      const query = {
        ...rootState.route.query,
        ...payload,
      };

      try {
        const { data } = await Service.search(query);

        return { query, data };
      } catch (error) {
        throw error;
      }
    },
"
2016-12-08 22:52:41;Come vote for better(if any) vuejs support in Webstorm/IDEA;There are 2 vue plugins. Someone with enough skills should fork and fix them :)
2016-12-16 22:50:06;How do you get data with vuejs?;"	import axios from 'axios'

	export default {
		mounted() {
			this.getMessage() // Get the message when the component mounts
		},
		
		data() {
			return {
				message: ''
			}
		},

		methods: {
			getMessage() {
				axios.get('api-url')
				.then(response => {
					this.message = response.data.message
				})
			}
		}
	}Either vue-ressource or axios.You can use any AJAX library you like; jQuery works fine. You might want to try another library like Axios, though -- Vue itself does nearly everything jQuery does, so you don't need the extra weight just for AJAX. 

Whatever you use, all you do is make an AJAX request and then assign the payload to a data property on your component (check the docs on data components for this). From there you can use it in your templates. Like any other data property, updating it should automatically update your templates. [deleted]Superagent is the best I've used. And I've used all of them."
2016-12-16 18:37:17;Build and Host Your Vue.js Apps on stdlib in Minutes;
2016-12-16 13:30:21;Need help setting up Vue SSR in my ASP.Net Core project;Depending on your app you'll might want Vue validation, routing, and Ajax plugins. They are all optional but might be useful to you. There is also Vuex for state management, but I haven't need it for anything I've built yet with Vue.
2016-12-16 01:25:17;Game-focused tutorials?;"Awesome to hear your daughter is such a voracious learner, you sound like a great parent.

Is there a particular reason you want to use Vue? All the js game engines I'm aware of have baked in UI solutions that are tightly coupled with the core game loop. I can't find any tutorials that fit your criteria.

If her interest is more in game dev, [Phaser](http://phaser.io/) is worth checking out. They have good documentation and a physical book your daughter can read through (if her computer access is limited but she still wants read up about phaser)."
2016-12-16 00:31:07;Vue.js 2.0 In 60 Minutes (original source);"This won't suit everyone, but I found 1.25x quite understandable...

Vue.js 2.0 In 48 Minutes.
"
2016-12-24 09:14:09;Simple Google Analytics binding for Vue.js;Yer a wizard.
2016-12-24 07:28:52;Vue.js devtools;
2016-12-22 20:16:34;VueJS2 and vue-resource causes an infinite loop.... wtf??;"There is too much code to read and make sense. Can you create a minimal repro?

Though, at first, i suggest you to place  breakpoints using chrome inspector and find what is actually happening.
You're calling $http.put in your removeModel(), but you don't pass the correct parameters to it.

E.g. for a POST
this.$http.post('/someUrl', {foo: 'bar'}).then((response) => {"
2016-12-22 14:17:27;Newsticker in Vue;[deleted]
2016-12-22 11:39:49;Dealing With Templates in Vue.js 2.0;"Nothing wrong with the article. The more, the better. Excellent post!Sorry buddy, but this is a completely useless article. All of this information is covered in the official documentation.

Don't try to do to Vue what people did with Angular, where we had a million articles about how to get started and other superficial information. Vue's documentation is really well done and comprehensive enough that these articles and tutorials serve no point whatsoever."
2016-12-31 21:50:39;How do you handle forms in the context of Vuex?;"Looks quite sane to me. If you can abstract the error handling to some closure generated Vuex actions, that would make it more DRY. Not sure if you haven't done that yet, without looking at the code. As for the HTML - maybe some functional components for the errors, since the error class is consistent across different use cases?

Anyway, if you need to play with some front-end side validation you might be interested in Vuelidate https://monterail.github.io/vuelidate

It also supports data sources from Vuex getters and async validators too. It doesn't give provide any directives though, as we aim at making it super lightweight (hence, it can be used as a mixin whenever needed). 
Happy New Year!This is an area of Vue/Vuex that needs a lot more elaboration and focus from the community, so big props for putting this together. I think the approach is very reasonable and more sane & DRY than anything else I've seen or come up with. Some code samples might help make it easier to understand and more accessible for newcomers.This seems well thought out. I'm also new to Vue and would love if you could post some examples, especially for the conversation that it might generate.This sounds pretty sensible! There's a similar solution in Laravel Spark, but without Vuex. I especially like the idea of only committing to the store after getting the data back from the API. Do you have this code available somewhere? My team and I are about to start on a large vuex form application and this would be a great start. Would also be happy to collaborate if you want to throw this on github. If you're willing: no need to make it fancy yet - I'd be happy to work with what you have so far.Nice ideas, but I do not get why using Vuex is absolutely necessary?

My solution to handling forms is to keep all the state local to the component, when the user submits and the server returns a 20X, I just store the required data to vuex using an action; if the server throws an error, I prompt the user about the errors. 

Since form data isn't meant to be persistent, I don't see the need to use vuex. Am I missing something, or is it standard practise to use Vuex for everything?"
2016-12-31 00:00:45;Responsive, mobile-friendly Vue.js carousel;Nice, but none of the [examples](https://ssense.github.io/vue-carousel/examples/) work for me!
2016-12-30 22:13:50;Vue.delete object by index;"Shouldn't vanilla JavaScript be fine? Use [splice](http://stackoverflow.com/questions/5767325/how-to-remove-a-particular-element-from-an-array-in-javascript).If you want to lol up a specific attribute by a property in JavaScript, try Lodash or underscore. 

_.find(this.data.array, {is: 4})

Once found, try deleting it or doing a new array with without. try

```stuff.$remove(stuff[0])```You can use splice as others have suggested, or just a basic filter:

    const position = 0;
    this.stuff = this.stuff.filter((thing, index) => index !== position);

Up to you which way to do it!"
2016-12-30 21:23:44;Tracking data changes on already-created JS objects?;"why not declare hex inside vue's data object? so

    data: {
        message: 'Hello Vue!',
        hex: {
            turn_phase: 'unit_placement'
        }
        
and that will make it reactive."
2016-12-30 18:45:25;How to Make Cross-Origin Requests with Vue-Axios;"are you passing in your API key? I looked at the [example from google](https://developers.google.com/maps/documentation/javascript/adding-a-google-map), and it seems to be part of their query string.

    <script async defer
    src=""https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap"">
    </script>

Then again, I've never tried loading a js file through a request with Axios.The key bit of that error code is ""not present on the requested resource"". This means that on the _server side_ the thing you're trying to access has not been marked as accessible from your domain. 

So unless you have access to the server you're talking to (which in this case I doubt) accessing it is impossible. 

I haven't looked into the Google maps stuff, but I would suggest you are going about this the wrong way. Definitely look into the official ways to access that API, and the libraries mentioned in the other comment. Good luck!The problem is you are trying to return a file that isn't meant to be fetched. 

I don't understand what you are trying to do? If you want to defer the load of the API... 
    
    function loadAPI() {
        let script = document.createElement('script');
        script.onload = function() {
          alert(""Script loaded and ready"");
        };
        script.src = ""https://maps.googleapis.com/maps/api/js"";
        document.getElementsByTagName('head')[0].appendChild(script);
    }

Then you can use `loadAPI()` when you are ready.

I think you are using the external gmaps library now for vue but please remember the reason your original wasn't working.

**EDIT** 

If anyone cares to know I checked the source of `vue-google-maps` and they are doing something very similar to my example above [source file](https://github.com/GuillaumeLeclerc/vue-google-maps/blob/master/src/manager.js)
 "
2017-01-07 21:31:17;What are some features you wish Vue had?;"My problem is that I'm not really sure of what third party things are available for Vue, and especially not what is 2.0 compatible. There's [awesome-vue](https://github.com/vuejs/awesome-vue) but it is near impossible to find anything in it, unless you know *exactly* what you're after.

I'd like to browse a site of vue plugins where I can:

 * Search
 * Filter by category/tag (e.g. ""2.0 support"", ""bootstrap"")
 * Results should show:
  * Name
  * A short description
  * Link to github, project homepage, npm
  * A link to the demo
  * Categories (e.g. ""bootstrap"", ""material design"")

Other features that might be cool but not necessary would be to see last commit date and Github stars.If someone is wondering about Web Components's Custom Elements support, there's my PR for Vue-element - https://github.com/vuejs/vue-element/pull/9

It will allow for cool stuff and new possibilities to do with Vue components like no need for user to manually init Vue component or use Vue components in Angular, React, plain JS or other Vue components. CRUD resource interface. There is [vue-resource](https://github.com/pagekit/vue-resource), but currently it's not a part of vue.js software.Socket.io support.v-for support for the new collections: Map and Set."
2017-01-07 13:38:43;vuejs version of x-editable;"Haven't heard of that before but it looks really slick.  Something we could definitely use.  Doesn't look like there is a vue version of it though. It's on my list of packages I wan't to try to create.

But it will have to wait a few months. Tell me if you find anything that does the job well enough.Yeah ok, maybe i'll do it."
2017-01-07 04:57:14;How to get form data from button click?;"v-model.

vuejs.org/v2/guide/forms.html[deleted]Have you tried reading the docs?"
2017-01-07 04:23:27;How to define and call function within .Vue template file?;"you need a `methods` property that contains your function.

https://vuejs.org/v2/guide/events.html#Method-Event-Handlers"
2017-01-06 22:28:51;Calling data within an event handler's function?;"An [ES6 Arrow Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions) would fix this, as it doesn't bind a `this` context to the function scope, so `this` would remain the component instance.

    Event.$on('update', data => this.issues = data)"
2017-01-14 11:22:25;Filters were extremely handy. Why were they removed in 2.0?;"[deleted]Well there were removed, because they put too much logic into the templates.

However you can still define your own filters or use computed properties.Someone remade them https://github.com/freearhey/vue2-filters"
2017-01-14 00:59:27;Communicating between two child components;"http://andrewhfarmer.com/component-communication/I would really look into something like Vuex ( https://github.com/vuejs/vuex ) for this. Events are not bad but once your app starts growing in size you'll want to have your state managed somewhere and Vuex is a great way to do that. It does require a slight shift in thinking, but once you've got that, you'll be on your way. For example, instead of listening to an event to toggle your sidebar open, your sidebar would take it's open/closed state from Vuex. Then you'd click the header button and that would change the state to open which would flow through to your sidebar and voila. Sidebar open.Depending on your layout, you could do something like this.

https://jsfiddle.net/u960oj6h/

Assuming they are siblings. The header component is using a slot so you can add in some content from your primary component that holds these children. In this case, these children are siblings of each other.

there is a ref put on <sidebar> and then the button calls a method that accesses the sidebar ref, and the toggle method in the sidebar component. This should give you a general idea of how to do this.

This is not a Bus event system, or a store system, however, you could use those methods to do something similiar.You either want events, and have a broadcast instance of Vue to have them speak to each other. 

Or, my preference, is use vue-stash to store something globally accessible. You could have a sidebar ""state"" variable, that can be changed by anything and read by your sidebar. "
2017-01-13 15:58:42;Two player Pong reinvented using Vue.js and Rails w/ Action Cable;"very cool, is it preferable to use rails action cable over for example socket.io ?
If yes, do you plan on making a guide/tutorial for it?"
2017-01-13 15:32:21;How do I use a websocket in multiple components?;"You'd need a higher level component to manage the websocket connection.  Each time it gets an event, it sends it to the appropriate child component.  Or, you could use something like Vuex to manage it for you. I would consider using the [plugin](https://vuejs.org/v2/guide/plugins.html) system so that you can pass initial options in and access the methods in all vue instances. Take a look at [vue-remote](https://github.com/MacArthurJustin/vue-remote) for how this might be done. When I met same situation, I did a quite simple thing.

First, you need a structure. Every websocket event have to have an event name. E.g. server is sending you json-packed data, so there have to be a field with event name, like ""event"":""new post"" or ""event"":""friend request"".

Second, you need some kind of manager, receiving all that websoket traffic. It's a simple code. It have to look at ""event"" field and call all functions, who want to get this event. Once again it's simle. =) You need to store somewhere all functions according events they want to receive. You just need to create a code like that:

    var eventHandlers = {};
    function subscribe (event, func) {
        if (eventHandlers[event] === undefined) {
            eventHandlers[event] = [];
        }
        eventHandlers[event].push(func);
    }


After that when you receive an event, you just need to call all that functions in cycle and pass en event data to them.

    function websocket_handler (websocket_string) {
      jsonObj = JSON.parse(websocket_string);
      if (jsonObj.event === undefined) {
        // it's not our stuff
        return false;
      }
      if (eventHandlers[jsonObj.event] !== undefined && eventHandlers[jsonObj.event].length > 0) {
        for (var i = 0; i < eventHandlers[jsonObj.event].length; i++) {
          // calling all functions in that array and passing event to them with all its data
          eventHandlers[jsonObj.event][i](jsonObj);
        }
      }
    }

I wrote that code just now, didn't tested or even tried to run it. But I suppose, you can clearly see the idea.

PS: I recommend to google on how to call a func in a proper way."
2017-01-13 02:35:15;Help with: vue-youtube-embed Can't detect end of video;Ive actually run across this issue before where alert() doesn't work in vue. Not sure why, but that's where i'd start researching if I were you
2017-01-21 19:56:39;Vuex and LocalStorage;"I've used https://github.com/robinvdvleuten/vuex-persistedstate with pretty good success. I think this is pretty straightforward. Just create a Vuex plugin that gets the localStorage string and does `replaceState` when it runs for the first time (i.e. just in the plugin main function), and set up a subscription to mutations and set the localStorage string there.Why not simply do a check before your API request is there is already some data available in the local storage? Then instead of storing the result of your API request in the Vuex store, you simply retrieve the data from local storage and put it in the Vuex store. That's how I did with my app.

If you can do something with three lines of code, I don't see the added benefit of using an external library.I'd love to see what you come up with. Please post back once you figure it out."
2017-01-21 17:42:40;v-for and v-f template help;"From what I can see you are going in the right direction. I wouldn't use v-else-if(never used or seen it used) and never seen or used the colons for v-if. 

From my experience it's

<template v-if=""card.type == cardA"">
     Do this
</template>

....now if you have only one other option use this:
<template v-else>
    Do this
</template>

....if you have multiple ifs
Then continue with the v-if
<template v-if=""card.type==cardB"">
   Do this
</template>

Hope this helps. Ahhh. At least it's working now. You can always download the Vue plugin for chrome and I believe it shows you what is outputted, if not, console log the output in your return and it should help you with the variable types. "
2017-01-21 15:49:33;Sprite animation with vue;Wow what a cool little demo :)Just a heads up if anyone sees this, this was built with Vue 1 and not Vue 2. Some of vue specific concepts wouldnt work.Change ready() by mounted() and it should work 
2017-01-21 08:26:21;vue-multiselect is for those in need of Select2 without the jQuery hassle;"Probably one of the most useful vue components out there. I love it. Feels nicer than select2 tooI love it. I did a PR that adds some features a while ago. Unfortunately it's not merged yet. 

Other than that. Awesome component. Beautiful thing. Thank you.Nice!"
2017-01-21 05:58:34;What really is Object {__ob__: Observer} ?;I'm not sure why you're not able to get the data without decoding it.  I'm pretty sure that's the proxy object Vue uses to update the dom when your data changes.
2017-01-28 21:14:46;Conditionals based on route?;"This is my nav:
    
    <ul class=""nav navbar-nav"">
        <li v-for=""item in menuItems"" :class=""{active: route == item.url}"">
            <router-link :to=""item.url"">{{item.name}}</router-link>
        </li>
    </ul>

This is my computed property ""route"":

    computed: {
        route: function() {
            let route = this.$route.path.split('/')[1]
            return '/' + route
        }
    }

These are my nav menu items:

    data() {
        return {
            menuItems: [{
                name: 'Dashboard',
                url: '/dashboard'
            }, {
                name: 'Sample page',
                url: '/sample'
            }, {
                name: 'Admin',
                url: '/admin'
            }]
        }
    }

Does this help?"
2017-01-27 19:43:41;Help with v-bind:src;"With v-bind, anything inside of the double quotes is treated like JS.

Because of that, you'll need to add + signs around your *card.team2_name* reference like normal string concatenation.

    <img class=""Jersey"" v-bind:src="" '../img/Jerseys/' + card.team2_name + '.png' "">If you use ES6 features, you can also write

    <img class=""Jersey"" :src=""`../img/Jerseys/${card.team2_name}.png`"">"
2017-01-27 16:09:50;Can't figure out what these errors are.;"First thing I see is your `data` property needs to be a function instead of an object, change:
    
    // not correct
    data: { ... }
    // correct
    data() { return { ... } }

I'm not sure that is what is causing the error, but it will eventually cause one.Since in your code, the only thing accessing an index of 0, is in your computed property ""question"", that leads me to believe that you're overflowing in the array. Your questionNumber is going beyond the amount in the array. If you only have 3 elements in the array, your valid questionNumber can only be 0,1,2. The moment you try to access the 4th index (3) it errors out.

You'll have to make sure you dont overflow past your array.

and as the user cutety mentioned.  Your data proprety should be a function, that returns an object."
2017-01-27 08:06:26;Vue-router v2.2.0 released!;"Damn... I was wondering why those ""params as props"" detailed in the docs did not work yesterday... I guess they updated the docs before the actual release. Not cool guys.Awesome! I really didn't like $route there.Really great usability changes in this release!

The new *beforeRouteUpdate* component hook is a great idea.  I've had to set up a watcher on *$route* before to watch for query param changes, and it felt a bit hacky."
2017-01-27 01:14:10;Best way to structure layout components?;"Why would you not also do your navbar and routing in vue? 

What you're proposing is fine (essentially have vue manage only a single section of the page) but more typically would be just to have a single div in your HTML that vue binds to and renders the whole interface. "
2017-02-04 17:05:06;making a web app. Use vue cli or just load script and a main.js file with vue obj?;"You can do whichever you prefer, but single file components are one of the reasons vue is such a joy to work with.I'm building a bigger webapp using vuejs for months now and in a team.
There are a few things that are really beneficial when having the webpack vue setup over html files.

- You have template, javascript and css/sass in one file. That means you don't have to find everything until you understand what's going on. You'll find out in seconds even if you haven't looked at the code for months. 

- You have linting, so you know quickly if you have misspelled something or made mistakes while quickly prototyping something.

- You have a test setup. You can start writing tests for your components from day 1. 

- Vue's webpack setup comes with hot reloading. Pretty cool if you have 2 screens.

These are the benefits I see when building an app line you have mentionend.

But there are also valid reasons why not to have this kind of setup.

E.g. if you want to write a widget that enhances your wordpress website a bit.

For building web apps I would strongly recommend to use vue-cli to start a new project.

Hope that answers your question. Let me know if you have any other concerns. I've just start using vuejs since a couple of week so I'm no expert, but I' ve tried vue-cli and I feel like not using it make you loose a lot of functionality of vue. But then it also depends of how big your app is...it's not relevant to whether use vue-cli or not, it's relevant to whether use a module system and a bundler."
2017-02-03 18:41:06;Free Video Tutorial: Vue.js 2 & Vue-Resource – Real-World Vue Application With External API Access;"Thanks for sharing. Great stuff! 

I'd like a video on unit testing + mocking with vue.js if that's possibleisnt vue-resource retired?"
2017-02-03 17:01:22;vuejs crash course?;"https://laracasts.com/series/learn-vue-2-step-by-step

Last updated episode was the 12th of Jan. Jeffrey Way is a good dude.https://www.udemy.com/vuejs-2-the-complete-guide/

This one is really good. It might show $190 if you're not logged in, but it is actually on sale for $15 right now (and pretty much every other week). You may just need to log in to see the sale price.I really liked this guy's video : https://www.youtube.com/shared?ci=Ur1B2xGo8B4I'm creating a VueJS course now. I'm in the process now of understanding what students will need to get the most value out of my course. I'd love to have a 20 minute Skype call if you're up to it? I found it easiest to pick up by going through the docs and looking at their simpleish example projects "
2017-02-03 04:31:43;vuejs integration in laravel 5.4 project on homestead vagrant machine;You installed laravel with npm?what do you mean one application? laravel is a back-end and vue is a front-end. it's 2 different applications.
2017-02-02 23:13:47;'toggle' not working with vue-router;"Not sure why you're using this.$refs. Why not render your nav based on some component variables and change the value of the variables in your event handler? That would be the Vue way of doing it.

Also, I would name my event simply 'click'. It makes your code more readable and it makes more sense imo.

I can't help you any further because your component structure is lacking.Core team member here.

Likely, what happened is that the element or component that your `$ref.leftSideNav` points to got replaced (likely with a new copy) during the change of the route.

Your event callback uses a closure to refer to the element/component as it existed at the moment of the `created()` hook - which doesn't exist anymore after the route change.

Why exactly that happens is hard to say without seeing the relevant code.

Generally, this is another example of  why I feel that event busses are hugely over-used (not to say: abused). It's not a pattern we  recommend using in most cases. It's only really useful in a handful of edge cases.

You will probably be much better of using  central store, be it a simple object as exmplained [here](https://vuejs.org/v2/guide/state-management.html#Simple-State-Management-from-Scratch) or a more sophisticated solution like [vuex](https://github.com/vuejs/vuex).

Edit: I will try to improve the docs about the event bus to stress that it should only be used if really necessary."
2017-02-11 18:01:40;vuejs @scroll;"is it a typo that you put parenthesis in your eventListener while making this post?

this.scrolledHandler()  ?

but besides that, since I cant see the rest of your component code, is ""this.scrolled"" a defined reactive property in your components data() or props? Or are you just randomly assigning it?"
2017-02-11 17:08:44;Testing Single-File Vue Components in Node;
2017-02-11 10:11:49;Building a Simple EventBus in Vue.js;Interesting read.  Thanks
2017-02-10 20:12:34;Webpack configure proxy on dev server [help];"Why do you need a proxy? this sounds like a COORS related thing.
I would read up on how to enable cross origin requests on your WAMP setup"
2017-02-10 17:46:53;3rd Party Libs / Shared Instances;"I'd accomplish this with some dependency injection magic.

https://github.com/jackmellis/vue-inject"
2017-02-18 17:16:33;A CSS media query component for Vue.js;
2017-02-18 16:03:32;Building a JSON Tree View Component in Vue.js from Scratch in Six Steps;
2017-02-18 15:05:48;First VueJS app not working older browsers (Chrome 45, IE11, etc.);"Try including babel-polyfill 

Also that user summary component is pretty big, you can probably break it down a bit Looks great! Did you use a CSS framework? If so, which? Let's put that shit to the frontpage !I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/dataisbeautiful] [Reddit User Analyser - Your own Reddit data - X-Post r\/vuejs from u\/spryes](https://np.reddit.com/r/dataisbeautiful/comments/5uts9n/reddit_user_analyser_your_own_reddit_data_xpost/)

[](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*

[](#bot)It's says my kindness is at 77%.

It should be at 17%, lmfaoreally nice app!I can't help you with your actual problem, but I would encourage you to do what's needed so that if I enter two or three or five names I can go backward and forward to the differing analyses of them without having to redo the analysis.Can you help me understand, 

Is this a ""single page app"" front end app interacting with Reddit's API but in my browser?

Is there a backend app running somewhere? If so where, and is the backend code in the code you posted at github?Just don't even bother building for anything but the latest browsers. You can also just 'test and warn' for old browsers. You could also just have a static site... it would probably be easier just to make a static interface than test for browser edge cases. "
2017-02-17 12:11:53;Visual Studio Code - activate style lang support (sass);"Check this extension https://marketplace.visualstudio.com/items?itemName=octref.veturcannot be done. I found it better to extract js and css stuff in separate files by:

    <style src=""./component.scss"" />
    <script src=""./component.js"" />
    <template></template>

In this case you would have intellisense working for both css and js"
2017-02-17 05:53:13;Nodejs/Expressjs authentication with vue/vue-router and vuex;"I'm not sure what kind of authentication are you using, but this is what I have in my app which uses authentication with JWT Token.

1) Upon login server sends a token to a user and it is saved in Vuex and localStorage.

2) beforeEach route checks if route requires authentication and redirects to login page if token is not present in Vuex.

3) Vuex initial state is set to to a localStorage data if it is present, like this:

     const {name, token, id} = {...JSON.parse(localStorage.getItem('u'))};

     const state = {
         user: {
             name: name || null,
             id: id || null,
             token: token || null
         },
        message: null,
        error: null
     };

So if token is present (no matter if it is valid), user is allowed to visit router links.

4) If user tries to make any changes, the app sends request with the token in auth header and authentication middleware verifies the token, therefore accepting changes or throwing authentication error.

I may have solved this problem. Or rather, someone else who made a NPM package solved this problem.

I simply installed the npm package `vuex-persistedstate` which will persist the Vuex state with localStorage:

https://www.npmjs.com/package/vuex-persistedstate
"
2017-02-25 17:59:27;scrolltop, windowheight, documentheight in Vue?;"Hello,

I think the easiest way to get what you want is to use 

- Document height: document.body.scrollHeight
- Window height: window.innerHeight
- Scrolltop: document.body.scrollTop

and you add an event listener to your created method and remove it in your destroyed method

	<script>
	export default {
		name: somecomponent
		created: function () {
			window.addEventListener('scroll', this.foo);
		},
		destroyed: function () {
			window.removeEventListener('scroll', this.foo);
		},
		methods: {
			foo: function () {
				if (document.body.scrollHeight - window.innerHeight - document.body.scrollTop === 0) {
					// Do what you want when you are at the bottom of the page
				}
			}
		}
	}
	</script>"
2017-02-25 17:33:14;Started learning Vue. How do you organize your code?;"You should look into : 

- [vue cli](https://github.com/vuejs/vue-cli)
- [components](https://vuejs.org/v2/guide/components.html)
- [single file components](https://vuejs.org/v2/guide/single-file-components.html#ad)Use Vue CLI to create a project and follow the structure with your single file components.Some people will say it's not necessary, but I don't think the Vue experience is complete without 'vuex'.

At some point you will want to share data or state between two components who are sibling components, or who are several parent child relationships away.

Vuex is truly a thing of beauty, and will force you to write better code.  The need for emitting events becomes virtually 0, and you can drive your entire application from a centralized data store.

If you learn one new thing next week, make it vuex.Look into componentsTake some time and learn single file components along with the multiple ways of transmitting information between them (events, event hubs, vuex stores). Those are the most important (and complex?) things you'll need to know.Also, try nuxt.js.I am following [this example](https://github.com/vuejs/vue-hackernews-2.0)Check out https://github.com/vuejs-templates/webpackYou can have multiple vue instances, a ""cheap"" state management solution (small-medium sized app where you don't want vuex) is to use a new vue instance as an event bus.

Definitely look at vue-cli and [single file components](https://vuejs.org/v2/guide/single-file-components.html) for organization.

Since you're new, I can't recommend this [Vue 2 course enough on Udemy](https://www.udemy.com/vuejs-2-the-complete-guide/), but wait for it to go on sale.  I picked it up for $10, Udemy courses go on sale all the time.  Seriously, watch this course and grab it when it goes on sale."
2017-02-25 17:15:02;ESLint configuration for Vue.js app;
2017-02-24 21:47:53;Local database as a plugin?;"Is this project going to run in a browser or something like electron?A mixin sounds like what you'd want for your app.

If you use a mixin at the base, all components used in the app will have access to it.

The following is just off the top of my head, haven't ran or tested it. But it should be close to the real deal.

Make a file where you setup the DB and export:

    const db = require('nedb')

    // setup goes here

    module.exports = {
    install(vue){
            vue.prototype.$db = db
        }
    }


In the main:

    const Vue = require('vue')
    const DB = require('./db.js')
    Vue.use(DB)


Then in any component in the project

` this.$db.insert( /* stuff */) `

The good thing is your solution will probably be agnostic of the fact your project uses Vue. 

What sort of database is it? There are tons of database access plugins on npm. "
2017-02-24 17:07:21;Very simple pagination example;Take a look at http://stackoverflow.com/questions/35596389/vuejs-how-to-make-pagination-with-limiter-and-range/35706926#35706926
2017-03-04 18:01:03;Using vuefire and receiving errors.;"> https://my-firebase-url net::ERR_NAME_NOT_RESOLVED

Are you sure the URL is correct?"
2017-03-03 16:23:34;@input, call a method, but with debounce?;"Try:

    runOnInput: _.debounce(() => {
        //Do stuff here
    }, 500)"
2017-03-03 15:49:30;Data from API to component;"I would suggest using a store. This way, other components will have acces to the data, too.

https://vuejs.org/v2/guide/state-management.html`this.items = compData`Maybe I'm completely misunderstanding exactly what you are doing here... But why can't you just feed the data into the component through a prop?

So instead of having items in data, have it in props:

props:['items'],

Then feed your result into that prop within the components tag in your html:

 <item-list :items=""apiData""></item-list>

You should then be able to access it through this.items within the component."
2017-03-03 11:05:33;Announcing Vue School;"great guys!
this i like to see:
* building reusable components (modals,alerts)
* integrating third party packages from npm (sweetalert,moment..etc)
* handling state with/without vuexTesting, especially testing components with Vuex.Great!

- When to use computed properties vs watchers

- Vuejs and firebase

- Best practices to leave jQuery behind (especially on event handling, and window binding)

- In deep explanation on the Vue instance process; how to properly use beforeCreate, created, beforeMount, mounted, beforeUpdate, updated, beforeDestroy, destroyed.
I'd like to see project-based videos. Topic-based videos are fine, but I think they are less helpful if you know how it works and just want guided practice.Observables, Async, Testing, building an example project w json-server to mock data

What I often miss on such platforms is how one would setup a proper Vue project. File organization, using single file components with webpack, and so on.

And working with promises (already saw Axios mentioned somewhere in the comments)I would like to have a really opinionated point of view on authentication for SPA and good practice related to the use of vue-resource (or similar)I'd love to see some server-side rendering stuff and when/why to use it.

Unrelated- Is there any ETA on the Majesty of Vue 2 being completed?How to test single file components with Ava or anything related would be great. The thing I find lacking in most Vue tutorials is a really good *reason* to use Vue. I want to see stronger use-cases. At the moment for me it's just something that ""might be nice"" to learn... I somehow want to find something that makes me say ""I *must* learn this"".


Thank you guys for the feedback. We will try to cover most of the topics you mentioned.I find anything scopes very confusing, especially the new slot scopes with parent/child stuff. BTW I also own the excellent Majesty of Vue.js book.I'd be interested in Vue/Vuex with TypeScriptHow to make your Vue site WCAG 2.0 and section 508 compliant would be a huge help in selling Vue to my management I'd be interested in a large, multi area application with routes. Most examples are pretty simple, but having a best practice on how to organize components, Vuex objects, and how to do lazy loading with routes are the areas I'm starting to tackle now.Vuex, please."
2017-03-03 07:56:24;why the emit signal isn't caught?;"Your are emitting and listening for an event on the same component. I assume the idea is to listen for an event on parent component:

      <Message header=""head 2"" content=""content 2"" v-on:close=""close"">

[Vue.js docs](https://vuejs.org/v2/guide/components.html#Using-v-on-with-Custom-Events) on it.Because it's inside a different Vue Instance entirely.

$emit same level components.
$broadcast child components
$dispatch parent components.

But that's still based on if you're using vue 1 not vue 2 as they've got rid of events.

I've never had a reason to attempt to write an event that gets picked up by another instance, I don't know if its possible.Also you need a watcher to check if event has been fired, I'm about to drive to work so I'll give you a code pen in the next hour

But your watcher will need to check if event has fired then run the method[Codepen Link](http://codepen.io/anon/pen/PpNeaL)


Hopefully that explains it a bit better."
2017-03-11 14:02:05;Loop question (newbie);"    arrayChecker(item) {
  				for (var i = 0; i < this.cart.length; i++){
  					if (this.cart[i].price == item.price){
  						return true; // problem!
  					}else{
  					    return false;  // problem!
  					}
  				}

  			}

You are running a loop inside a function, and you have a return statement on both true and false for every iteration. Returning inside a function means the rest of the code is not executed, so that means if the item is in the cart but at position #2, this will always return false - because we have already exited after the first iteration. 

If you want to see it in action, put a console.log just before each of the return statements and you'll see it never passes the first iteration of the loop.



Here's the code for what you were intending:

    arrayChecker(item) {
  				for (var i = 0; i < this.cart.length; i++){
  					if (this.cart[i].price == item.price){
  						return true; // only return true if it was detected
  					}
  				}
                                  
                return false;  // we have run through the whole loop and found nothing

  			}
Could you add your template or rest of your component to the fiddle plz. The issue could be in how you're invoking the function.

Also, I would suggest changing the for-loop to using the .forEach Array method.You would need to call arrayChecker using ""this.arrayChecker(item)""

And since it returns a Boolean, you don't need the ""== true"".   You can just say ""if (this.arrayChecker(item))""I would suggest using more descriptive names for your functions. ""arrayChecker"" is not very descriptive. What does it mean? I don't know. And you won't either in a week or two."
2017-03-10 20:16:26;quick question, simple vue issue;"You should post your code because I think you've got a structure problem.

Check this link out
https://jsfiddle.net/Robodude/ae1wxjhf/"
2017-03-10 19:21:28;Bootstrap 4 Components For Vue.js 2;"I'm still learning. Can you explain how this differs from including bootstrap from the official documentation?There are issues with using Regular Bootstrap in Vue that I've encountered.  

Modals:
I was having issues with bootstrap rendering the modal as a child of body rather than inline. This was not allowing my components to wrap the modal and respond to events. I took the modal from the Vue examples and modified it to work just like the bootstrap one (and using the same CSS), but with the addition of some slots and other Vue bindings for stuff I needed. 

Dropdowns (and other things that need a Ref):
I'm still using the bootstrap jquery to control the dropdown, but I wrapped a uuid generator so I don't have to name the dropdown, I can just use it inline wherever I need in my Vue template. 

Most other Bootstrap components work without issue. The pragmatic approach (IMO) is to use the jquery versions until there is some issue, only then look for a better solution. 


To contrast... I tried using the Element UI library and performance was terrible. I ripped out Element, reverted to mostly jquery Bootstrap, and my app has never been faster. "
2017-03-10 16:18:26;Plugin for simple authorization of VueJS apps. More features will be coming;
2017-03-09 14:44:16;VueConf 2017 | Tickets are now available!;"Do you know if talks are going to be available on YouTube or other after?
lol... Poland. Couldn't possibly have chosen a worse place for it."
2017-03-18 22:32:02;vue-cli Webpack template - How to put an API key in the process.env ? How to connect to Node/Express/SQLite backend ?;"Check out how we're doing it for the gist API key in Gustavo: https://github.com/eggplanetio/gustavo/blob/master/api/content.jsInternally, the template loads a node server which parses the configuration files. Unlike the frontend code you write, server javascript must be 'hard reloaded' for them to have effect. So restarting the server would have your `process.ENV.API_KEY` available.

As to where to use it, I usually use `main.js` to set all app-wide things, which this sounds like it would be.

I'm not sure why you would want it in the store, but if you must, it's available everywhere through `process.env.API_KEY`

"
2017-03-18 08:58:27;Reactivity In Vue.js (And It's Pitfalls);Hardly news. This behaviour is well documented in the [official guide](https://vuejs.org/v2/guide/reactivity.html).
2017-03-18 05:21:18;Gustavo: a (mostly) headless blogging platform built atop Nuxt & Gist.;
2017-03-17 12:06:06;Strange problem with Vue and Cordova (UIWebView);Are you by chance using any widget libraries? Reason I ask is that I had a very similiar problem about 2 weeks ago. Similiar stack. We were doing a Cordova app with Vue 2 and Onsen UI. There were a couple places where either our scrolling was wonky... or it just wouldn't scroll. Only on iOS. It ended up being in any type of modal or overlay. There was a bug with Onsen that caused that modal not to actually register as the scrollable area. We ended up having to rip Onsen out and switch to something else, and then everything worked swimmingly. Make sure that when you try to swipe, pinch, or any of that jazz, it's not thinking your trying to do it on whatever is underneath what you're looking at.
2017-03-16 21:52:16;Vue resource to run GET as soon as backend changes;"I think you would want to hook in to the Wordpress lifecycle hooks and communicate to the client via a websocket that the data has changed. Or just take the 'easy' way out and continuously poll the API every X seconds.I believe that what you are trying to do is called ""push notifications"" and the most used framework to get this going in the backend is socket.io. It uses websockets and falls back to long polling if not available. I've never tried it myselft but I often read about it.As a sidenote. vue-resource is shit, and even Vuejs recommends not using it. 

Try axios instead, which is much better. I personally noticed the difference instantly. Even a single request is much faster.

https://github.com/mzabriskie/axios

Evan You (Vuejs creator) telling you not to use Vue-Resource:

https://medium.com/the-vue-point/retiring-vue-resource-871a82880af4#.oxbwf9y82"
2017-03-25 21:25:58;How write template with deep json;"Have a computed property that returns the nested prop. These are Bad Ideas that will lead to pain and suffering and really fast prototyping:

1) Destructuring in attributes is a thing:

    <div v-for=""{ prop } in items"">
        {{ prop }}
    </div>

2) This is just silly, but absolutely a thing:

    <div v-for=""{prop: {prop: { propa, propb }}} in items"">
        {{ propa }}, {{ propb }}
    </div>

3) If you register _.get as a filter, you'll be able to do this:

    <div v-for=""item in items"">
        {{ item | get(""prop.prop.propa"") }}
    </div>
"
2017-03-25 16:45:22;Do you have to use vue-loader if you want to use Vue in a project wherein you're using Webpack?;No. You only need to use vue-loader if you want to use single file components (.vue files). Hey if you are interested check out my webpack setup for my simple todo app https://github.com/Slegrib/vue-todo
2017-03-25 14:17:29;Intro to Vue;
2017-03-25 05:55:35;What are some common Vue stacks?;"Vue + Node.js has the advantage of being the only stack that can be a universal app with server-side rendering. It's the default option, I guess.

Vue + Laravel is pretty popular because Laravel officially recommends Vue as a Javascript UI library and includes it in project scaffold. And Laravel is pretty great.Vue SPA + Phoenix/Elixir works pretty good. But I guess there are not a lot of us out there (yet).Vue and go here. But beginner in bothI've been using vue with flask/python. I need Numpy and pandas for numerical stuff. Vue with Rails 5.1 and the Webpacker gem. It's kind of a new set up but it's been working really well, huge speed improvements over standard Rails apps.Not sure about common but just because Im comfortable,

VueJs + DjangorestframeworkI use Vue.js with Django Rest, Nginx, Redis and Postgres. I'm considering to try out Django channels soon too, I did the tutorial and it was so sick.

I also use the vue-cli webpack setup and axios for my http lib since it's recommended in the docs.Not sure why anyone hasn't said this yet, but Vue / Laravel.I'm using Vue + Yesod, but I don't think it's very popularI use vue + spring boot"
2017-03-24 20:29:51;Usage of Vue.js has grown by more than 600% in the last year. [X-POST from r/javascript];
2017-04-01 20:24:06;vue-router makes a request to root path for every <router-link> , normal?;"It is the default mode. You have to set mode: history in your router. No, that is not normal, and probably had nothing to do with vue-router.

Depending on your setup (backend API on a different (sub)domain?), these extra requests could be CORS preflight requests made by your browser, for example, or a dozen other things."
2017-04-01 15:17:15;Methods, Computed or Watch?;"Methods allow you to perfom an action when an event occurs

    methods:{
        displayAlert(){
            alert(""You clicked"")
        }
    }
    <button on:click=""displayAlert"" value=""Click me"" />

Computed methods are variables but you can apply logic to them, it's a sort of dynamic value

    computed: {
        warningName(){
            if(!this.name) return ""You must enter a name""
            else if(this.name.length < 6) return ""The name is too short""
            else return ""Hi "" + this.name
        }
    }
    <input type=""text"" v-model=""name"" />
    <div>{{watningName}}</div>
    
And finally watch allows you to track a variable and perform actions when the value of the variable changes

    watch:{
        name(){
            if(this.name === 'Mufasa'){
                alert(""WAT"")
            }
        }
    }
    <input type=""text"" v-model=""name"" />Computed properties: Unlike methods, they don't accept any arguments, but they do have access to existing state. They're built for performance and track/cache their own dependencies so they're great for creating derived data from your state.

Methods: Unlike computed properties, methods can take arguments, however, the method will not track its dependencies or cache any of the data passed to it. 

Watchers: These are particularly for reacting to a change in state that Vue itself won't do automatically (like update the DOM). I try and use watchers very sparingly, but they do have their uses. One instance I sometimes find myself needing is to reapply a jQuery plugin to a set of DOM els whenever data changes. That's just one example.

Edit - Further reading that may help clarify: https://vuejs.org/v2/guide/computed.html#ad"
2017-04-01 11:26:51;Need Help & Feedback;"I decided to take a 2nd look at some of my older projects and this seemed like a good opportunity to try Vue. 

The main problem with the app for now is that the quote and author are not updated after the click. Any idea why? everything seems fine after looking at the official docs."
2017-04-01 00:31:56;Subreddit Style Update;"Nice!y'all probably already saw this but: https://www.reddit.com/r/modnews/comments/66q4is/the_web_redesign_css_and_mod_tools/Thanks for updated design. Nice to see vuejs subreddit development. But.

Up to me it's pretty hard to read such light gray color on the white background.

Code listings (gray on gray) are just unreadable.

I'm not old. I'm not blind. My laptop have IPS screen. But honestly I would like to add more contrast.How does the custom design look?Thank you!I just tried to register form this subreddit and this it what happens: the captcha is shown *below* the register dialog - when I click the captcha area, the register dialog disappears - no registration possible from this subreddit. This does not happen on the main reddit page, whe I then registered. Tried multiple times, it always happens. Chromium Browser on OSX. "
2017-03-31 22:02:38;Cool todo app I made;Thanks for sharing this, I'm interested to dig in on the code!If you need any help understanding it just let me know in the issues or something! glad someone is interested hahaLooks interesting, but it would be good if it used the latest versions in the dependencies. Currently it uses for example webpack 1 and node 6. 
2017-04-08 20:13:40;Vue + Rest AP;"You can build your API with whatever technology you want. Vue has nothing to do with a DB directly. All you can do are XHR calls.If you're a Java Developer use Spring boot for your framework and you can use VueJS for you front end. I'd stay away from a JS backened as a Java Developer myself I found way too many things about it frustrating.

If you're comming from a Java background this is probly the best route for you :)

[Getting Started With Spring Boot](https://spring.io/guides/gs/spring-boot/)

[Spring Boot + Vue JS Boilerplate Project](https://github.com/kucharzyk/vuejs-java-starter)Vue is mostly strictly front-end, basically UI elements and user interaction logic. It's typical that it communicates with the back-end via an API, and the API has the interaction logic to the DB. 

That setup is basically typical with most web stacks, front-end to back-end to database. Vue just gives you a good framework to structure your front end for ease of development and easy maintenance. There is a repo called vue-awesome on github.  It has TONS of vue 'plugins' that are amazing at getting things moving.

In your case, to make http requests to your DB, I'd go for vue-resource.  

I wrote a [blog post](https://medium.com/@adwilson0286/access-control-allow-origin-fury-7053938f929a?source=linkShare-5c1de52c7af7-1491743748)  about proxy servers on medium.  It's not a how to, just a quick explanation of the benefits of using a proxy server.


Disclaimer: it has nothing to do with Vue, only your specific situation of needing to request assets from the client / browser."
2017-04-08 17:46:20;Free Video Tutorial - Vue.js 2 State Management With Vuex - Introduction;"This is a great course on Udemy covering vuex, [Vue JS 2 - The Complete Guide (incl. Vuex)](https://www.udemy.com/vuejs-2-the-complete-guide/), by Maximilian Schwarzmüller.

Wait for it to go on sale for $19, though. Courses on udemy go on sale all the time, so keep it open in a browser tab and check it every day.

It's really a good course, I can't recommend it enough if you're looking to learn vue 2 and vuex."
2017-04-08 16:02:29;Importing in component vs main.js with lazy loading;"It would bundle lodash in both components unless you configured otherwise in the commonChunksPlugin settings. 

You can also set a minChunks to automatically extract things that have been imported X times. 

Im still a novice at webpack but have had success cherry picking only the lodash functions I need in a specific component. 

I would experiment and see what works best for each situation 

"
2017-04-07 23:09:37;@click.stop not working properly;"The problem is not that the click event is propagating but that the click handler on the input tag is calling the `closeInputs` method. Thus when you click on an input, all inputs close. This then causes your `@blur` handler to fire which toggles the `s` value on the current item which makes the input render again, hence the weird stutter when you click on an input.

If you change `@click.stop=""closeInputs` to simply `@click.stop` without a handler, that will effectively stop the event from propagating without calling any handler function: http://codepen.io/anon/pen/WpqdNv

I'd probably simplify the design a bit and use a data key `editing` to track the current cell you're editing. This gets rid of a bunch of the event handling which makes it easier to follow what's happening. http://codepen.io/anon/pen/QpXabjDon't do it that way. Display all list items as readonly inputs and remove the read-only attribute on click. Much easier to style and a lot more accessible. 

Also is there a reason why you are adding two @click attributes to the span, instead of just one combined? That alone just doesn't seem to be best practice, but maybe it just confuses me because that wouldn't even work in vanilla JS."
2017-04-07 17:09:23;Hierarchical data in a table;"I hate tables for things like this but perhaps something like this?

https://jsfiddle.net/p9jgzkhm/2/"
2017-04-15 21:04:38;Creating inbox App- Google Apis;"[Vue props.](https://vuejs.org/v2/guide/components.html) 

Retrieve the data from Google with express, and pass that data as JSON to your .pug views. In your .pug views you then pass that JSON to Vue components. For example, let's do this with contacts:

Make a request to Google to retrieve the contacts and store them in:

**ExpressJS**

    let contacts = [] // list of your contacts retrieved from Google 
    res.render('pages/contacts/list', { contacts: contacts}) // pass the contacts to the .pug view



**Contacts.pug**
    
    // Iterate through contacts to check they are ok
    ul
      each contact in contacts
        li = contact.name

    // Pass contacts as a JSON object to view component 
    contactsList(:contacts=contacts)

**Vue component** 

    export default = {
      props: ['contacts'],
      mounted(){
        console.log(this.contacts) // should log your contacts list when the component mounted
      }
    }

Hope this helps. If you want I can help you out if you can share your code.

Edit: just logged in on desktop and noticed the formatting was terrible. Fixed it now hopefully makes more sense now."
2017-04-15 12:25:36;GraphCMS - GraphQL based Headless Content Management System;
2017-04-14 14:11:27;FunBook: Writing books, novels, docs and blogs using Vue.js;
2017-04-14 14:01:45;VMS - a Vue.js 2.0 Content Management System;"This is exciting. Looking forward to getting back to my machine to try it out. Will report back with details. 

EDIT: Unfortunately, the set up seems to be a bit over my head. All of the issues are in Chinese so I'm not really sure where to go or how to get started with this. The documentation makes some assumptions about general knowledge that I simply don't possess. Would love to give this a shot though. If anyone feels like taking the time to write up a guide on how to get it set up, it would be greatly appreciated."
2017-04-14 13:40:25;v-click-outside - Vue directive to react on clicks outside of an element without stopping the event propagation. Great for closing dialogues, drawers menus among other things;"Looks like a good implementation. I have run into an issue with a click-outside directives like this in the past that might be useful to share here so that others don't waste any time with it.

I had the following setup:

- @click handler which opens some container
- the element with the @click handler is outside of the container it opens
- the container that is opened has a `v-click-outside` handler which closes the container

For a while I could not figure out why my container wouldn't open. You probably guessed it, but the v-click-outside directive on the container will actually add its event listener to the document before the original click event which opened it bubbles. The container will open, then the click-outside directive's event listener will fire and detect that the target of the original click event was outside of its element, which will cause the handler that closes the container to fire.

Lesson learned: be sure to stop propagation on the click event that opens your container. Throwing a simple `.stop` on the @click directive does nicely.I've been using [vue-clickaway](https://github.com/simplesmiler/vue-clickaway) for this and it has worked reasonably well for my use cases. Does storing the callback on the directive mean I cannot have two of these at the same time?"
2017-04-22 21:16:03;Github Fight;
2017-04-22 20:44:34;"How to change ""base url"" for Vue project? (Webpack build)";"I had this same issue a few months ago.  I ended up changing 
assetsPublicPath: '/',
in dist/index.js to 
assetsPublicPath: '/my-sub-folder/',

This worked but I didn't feel like it was a great solution since the build is so specific to that server."
2017-04-22 19:26:46;How do i use conditional scoped css?;"Using scoped CSS does not change the CSS class names. It changes the HTML elements and changes the selectors to target only those elements. See here for an example:

https://vue-loader.vuejs.org/en/features/scoped-css.htmlHow about:
    :class=""someConditionIsTrue ? $style.someclass : null"""
2017-04-22 17:25:41;Having trouble importing scss, undefined.;"Try adding ~, like this.

@import '~renderer/var.scss';Didn't you just have this problem but with JS? 

https://www.reddit.com/r/vuejs/comments/65rxse/one_alias_works_and_one_maybe_does_not_cant/

Your SCSS file looks like it is in src, not renderer, which is why it can't find it in renderer. Can you try `@import './../var.scss';`?"
2017-04-22 15:32:03;Anyone Using Jekyll with Vue?;https://github.com/cschweda/jekyll-vue-boilerplateI suggest you try [nuxtjs](https://nuxtjs.org/), you can build a static site with it.
2017-04-29 18:26:39;Vuejs with .NET?;"I wrote and article about this a while ago. It's for version 1.x but I think the general idea stays the same. 

http://www.lambdatwist.com/dot-net-vuejs/

The repo linked to the article has been updated to use v2

I've done this, it's pretty easy. I'm on mobile and can't look through your repo but all you need to do is include the Vue and Vue router js files like you would normally and set up url rewriting to send your client side routes to the right page.We just started a new project using Vue 2, ASP MVC Core, and VS2017 and I love it. Although, in my opinion you really should leverage TypeScript and WebPack too. Any  reason why  you're avoiding Node? How are you getting dependencies from NPM?"
2017-04-29 13:21:38;Is there a simple way to render the actual name/path of the data element being used for the data in a template? Example...;"You could have a prop ""debug"" that would show the span with the key that is being used.

You could also use the Vue dev tools to see what your components are rendering. "
2017-04-29 09:26:05;"What's the deal with ""goes well with Laravel""?";"Few things :

 * Vue is proposed (not forced) by default in Laravel 5.3+
   Some see this as Laravel endorse Vue
 * Vue creator went to some Laracon
 * Both share a same simple, get shit done, can go full best practice once needed mentality
 * Laravel mix (the webpack wrapper) was what made a lot of us get into modern front end. The js tooling is overwhelming.


But you are right, one is backend, the other frontend.
The only crossing point is Laravel mix.
Vue can also be used to enhance backend-rendered views, like you would use jQuery to add some improved interactivity.

Vue is lightweight so can be used in this context.[deleted]"
2017-04-29 05:14:36;Any way to pass data from the beforeEnter guard in vue-router, to the data() property in a component?;"beforeEnter's `next` callback takes an argument which is a function to be called once the component instance is ready. This function, when called, will receive your component instance as its argument. 

So you could do something like this in your beforeEnter:

`next($vm => $vm.someData = true);`Is there a specific reason you're avoiding Vuex?"
2017-04-29 05:01:29;QR code component for Vue.js.;
2017-05-06 20:00:59;Admin dashboard for Vue;Is this officially part of Creative Tim? 
2017-05-06 18:07:06;Vue.js component styleguide generator;Very cool. Super useful. I tried it out however I'm missing some key things like default prop values, code formatting and so on. Is this going to be supported/further developed ? I see that there is not too much activity on it lately
2017-05-06 11:07:47;All instances is affected;"Looks like the 'editing' variable is scoped to your component which means clicking any button will toggle it and all the v-if's will evaluate identically

I would create an array of editable subjects. The toggle method should take in the subject as the parameter and check if the array contains the subject. If so, remove it otherwise add it.  Then in your v-if, change the condition based on whether the current subject is in the arrayI'm not at my computer but this happens more often than you think. 

One thing im sure about is that when you call the method, youre able to pass through the $event variable, 

Which'll allow you to access that particular instance by using the index in the $event variable

Scratch that, check out the best answer: https://laracasts.com/discuss/channels/vue/click-within-v-for"
2017-05-06 08:01:22;ParsleyJS with VueJS;"> Parsley relies on jQuery (>= 1.8), and it will need to be included before including Parsley.

Kind of defeats the point don't you think?

If you're using old school techniques with components I would guess that you're not grokking the fundamental reasons they exist, nor the software patterns they use.

I'd suggest reading up a bit more on the topic, specifically the fundamentals and how they work at a level deeper than just one of the many frameworks that enable this style of development until you reach that awesome a-ha! moment :)

Just my 2¢Use some vue plugin: https://github.com/logaretm/vee-validate"
2017-05-06 04:23:26;Correct way to init jquery component dynamicly;"Put the init code inside [Vue.nextTick()](https://vuejs.org/v2/api/#Vue-nextTick) to ensure that the new elements have been inserted into the DOM before the jquery stuff runs: https://jsfiddle.net/kkeav6fj/
I dont understand why people use jquery with vue, You can achieve everything in Vue like in jquery but better, simplier wayIf it were me I would make a separate component for the `<tr>`s, and handle the the jQuery inside that child component via `mounted` + `Vue.nextTick` and `beforeDestroy` (don't forget to destroy jquery crap)"
2017-05-13 17:48:28;Handling Dynamic Created Buttons?;"Create a child component with local colour data and create one for each item. Define your method as toggle(event), event will be the element that you clicked. Do with it whatever you want.

Source: [docs](https://vuejs.org/v2/guide/events.html#Method-Event-Handlers)"
2017-05-12 22:39:55;AdonisJS - A NodeJS framework heavily influenced by Laravel. - There's even a NuxtJS starter template. I think I just found my preferred stack for VueJS development.;"I'm halfway through building a fairly big site with adonis. I'm very impressed and would definitely recommend it.I don't understand how Nuxt communicates with Adonis when Nuxt needs to do an api call. I mean, obviously it wouldn't do an actual http request when it's rendering serverside, right?> AdonisJs ORM ( Lucid ) is an implementation of Active Record. Leave your traditional SQL queries behind and make use of shiny data models.

You guys are either too young to remember the fall of Rails and its active records, or you have a short memory.Same here, I have been using Adonisjs for a while and it feels refreshing It's brilliantLooks really interesting! Does it have most of the features of laravel? For example can it run commands through cronjobs? Wow interesting. Have been using Express for so long, am looking forward to trying out something new. Especially if it makes developing CRUD apps faster. curious about learning adonis, what blog tutorial did you work through?"
2017-05-12 21:37:53;The Vue.js v-model explained (screencast);
2017-05-12 20:01:20;JSON Schema Editor, built with Vue.js and Firebase;
2017-05-12 17:36:05;Vuejs as the frontend to direct access a 3rd party REST API?;"It depends on the use case. If you need authentication as in TheMovieDB I would create my own endpoints to avoid exposing the key. If not I would just do it on the client.To belabor the point /u/NaNpx made, assume anything in your client is publicly accessible. If you have an API key that is supposed to be secret you absolutely need to proxy requests through your backend to avoid exposing your key. Note that some APIs (Algolia, for example) will give you keys intended for client side usage.

You don't need to cache responses, but it may not be a bad idea depending on API specific details. If the API is mostly just exposing infrequently changing data (like TheMovieDB) then it doesn't make sense to always hit that API.

[Check out  the Vue Hackernews demo](https://github.com/vuejs/vue-hackernews-2.0/), both the [client](https://github.com/vuejs/vue-hackernews-2.0/blob/master/src/api/create-api-client.js) and the [server](https://github.com/vuejs/vue-hackernews-2.0/blob/master/src/api/create-api-server.js) hit Hackernews' Firebase [API](https://github.com/vuejs/vue-hackernews-2.0/blob/master/src/api/index.js).Hi: Vue.js is a great javascript library for front-end browser clients and developers who insist on functional reactive programming. I use it now exclusively everyday where I work! It has a vast ecosystem of development tools, and if you're familiar with webpack then you can get support for the latest esnext syntax.

You can see an example of using a vue client to consume a wordpress api by taking a look at [this dockerized wordpress server](https://github.com/brngdsn/chamaeleon) and [this vuejs front-end](https://github.com/brngdsn/yoshi-ui). Keep in mind these are novel most viable products.

Such architecture is typical of a stack whose authority belongs to the developer. Where as in other case you may need to write a server middleware that will make the api calls for your browser client, like in the case where a target server api has a strict cross-origin resource sharing policy.

You can also see a neat example of using vuejs, vuex, vue-router, vue-resource, and bulma to consume the nasa api (nasa api requires api key) [in this repository](https://github.com/brngdsn/vue-nasa)."
2017-05-20 16:27:00;New to vue js, want feedback;"Yea with the amount of jQuery and static HTML content you have in there, you might as well go full jQuery.

Thing about frameworks like Vue or React is that they are intended for when you have a single data object as a source of truth and all UI manipulation is based off that.

So really the only body markup you should have in your html file is:

    <div id=""app""></div>

And the rest of the html goes under the template property of your Vue instance (or in <template></template> tags if you're running a build system.

Then for things like events, in jQuery you might have something like:

    $('.btn').on('click', function() { $('.thing').hide() })

The same in Vue is gonna be:

    Template:
    <button v-on:click=""toggle_thing = !toggle_thing""></button>
    <div v-show=""toggle_thing"" class=""thing""></div>
    
    Data object:
    data() {
        return {
            toggle_thing: false
        }
    }

I understand you're just starting out, however, and learning to think and build in a certain way is part of the challenge of a new framework. But once you get the whole thing down, it's quite powerful and fun and you'll wonder how you could possibly use anything else.You're using a lot of jQuery. Leaning on jQuery usually means you're not using something Vue offers built-in; thus you're probably doing it the 'wrong' way (or at least maybe not the cleanest implementation).

So as it is, to someone who writes Vue every day, you're taking the long way around on things.

Example:

```
close: function(e) {
      $(""#modal"").modal(""hide"");
    }
```

You just asked jQuery to search the whole DOM for `#modal`, then act on that. You're already _inside_ the modal component, so you have access to it and all its children through `this` - e.g. `this.$el`."
2017-05-20 15:09:42;Newbie here, I have a few basic questions about Vue.;"Regarding auth, it depends on whether you're building a SPA or not. If you're serving up individual pages then you can handle the auth in Express, and if you need to authenticate your API calls then look at https://jwt.io/ .

If you're asking about auth on the client side you can look into something like https://github.com/JiriChara/vue-kindergarten or use a client side JWT library to build something yourself within the router handlers.

Using single-file components is much nicer and the https://github.com/vuejs-templates/webpack-simple setup will get you using them with almost no effort or knowledge of the parts. If you're going in this direction then you're going to need to start using Webpack eventually, no reason to put it off and its less complex than it seems at first. Plus you'll get to use some nice ES6 syntax.

Most libs have a Vue version because they use vanilla JS or jQuery to manipulate the DOM; the Vue versions do the same thing but use Vue so they're either smaller or remove the need for jQuery. Also, if you're not using a Vue version you might need to make a custom directive to get the lib to load correctly. Finally, if you want the lib (like a date picker) to communicate with your own Vue components then it's much easier if they're built as Vue components as well. (I don't see any benefit to something like Vue Font Awesome though, sometimes people do things just because they can.)

Other advice: Read through the full Vue guide, it's quite short. I really like writing Vue in VS Code using the Vetur plugin, and with the Chrome Vue debugger plugin. Don't bother with veux until you know that you need it, you may never need it.



Vue Router can do middleware stuff. The security is only as good as anything client side, so you'll still want to enforce server side. 

Some plugins are useful, others not as much. Font awesome I agree doesn't need a plugin. 

Checkout the HackerNews demo. It has almost everything you'd need. "
2017-05-20 05:53:08;create-vue-app is PWA by default now;It'd be interesting to know how exactly it differs from vue-cli
2017-05-20 05:23:56;Request: A tutorial on building vue-hackernews-2.0;I'm down for making a video tutorial if someone is willing to help with the video editing.
2017-05-19 23:19:09;How to achieve reactive update?;"You'll need to use something like WebSockets on the backend to get this sort of functionalityEither websockets , or you have ajax polling every X seconds for what's changed (ew, but works).If you are in the same browser you can use the local storage to update all tabs. 

You even have an event that notifies the tabs on storage change. 


If you want to use multiple browsers and multiple devices maybe even go and use something such 
Firebase Cloud Messaging. Short answer is one computer sends an update to the server and the other gets it from the server almost instantly. The two big ways of doing this is either by refreshing the data repeatedly at a set interval. Sending requests like this will work. The other way is with a real time message passing technology like websockets. Socket.io is a great library for this. I'm using it in a chat application right now and it works beautifully.

I don't know why gitlab decided this page needed to update in real time, but if I were them I'd probably be using socket.io to inform the client of state changes, and potentially even sending the updated data over itself. 

Sending regular repeated requests is probably simpler to implement but it might flood you with requests when you start getting a lot of users, so it doesn't scale great.Use a real-time database like firebase. It works very good for synchronizing between clients."
2017-05-27 23:30:45;Does anyone have a vagrant box that works with nuxt?;"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/adonisjs] [Xpost \/r\/vuejs - vagrant box that works with Adonis and nuxt js?](https://np.reddit.com/r/adonisjs/comments/6dqqv4/xpost_rvuejs_vagrant_box_that_works_with_adonis/)

[](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*

[](#bot)"
2017-05-27 09:24:59;Selenium failures in VueJS;Your suspicion is correct.  Stackoverflow is your friend - https://stackoverflow.com/questions/10720325/selenium-webdriver-wait-for-complex-page-with-javascriptjs-to-load
2017-05-27 08:03:23;Django Rest Framework and VueJS Server Side Render;"[Only Node.js is currently capable of running vue-server-renderer](https://github.com/vuejs/vue/issues/4101#issuecomment-258194824) so you'll need to run a parallel instance of that to do the server rendering.I'm on the same boat.
I'll share some  - hopefully - helpful links:

https://github.com/janoliver/DjangoVue
https://github.com/ezhome/django-webpack-loader"
2017-05-27 02:23:41;Help understanding Vue Components, why we use methods in both the component & the vue instance?;" - Components need a single root element, so wrap everything inside a `div`.
 - `props` are for passing data into a component, but you are declaring all your data inside the component so they all return `undefined`. `props` overrides `data` so to set a default value you need to use the [object syntax. ](https://vuejs.org/v2/guide/components.html#Prop-Validation)
 - Your second Vue instance `#app2` has a text input that references `name`, but you have only declared `name` on the child component.

Have a look at your dev tools console some time; Vue is usually pretty easy to debug. Try adding the component to the instance, not the html. So in other words:

    new Vue({
        el: '#app',
        template: '<SomeComponent></SomeComponent>'
    })

Also, no need for a data object in the component if you're already passing the data you need as props from the instance.

Finally, while you may not wanna do .vue files, keep in mind that using them in a build system is by far the superior implementation, especially if you're trying to go single-page with routes.

Without them, you'll have to escape all the newlines and some quotes in your 'template:', since using backticks is es6 that isn't fully supported yet.

Also with .vue files you get scoped CSS/SASS right out of the box, which is awesome. Plus a number of other features.Here's a fork of your fiddle that may be clearer: https://jsfiddle.net/j546k3t2/"
2017-05-27 00:52:33;Issues with global contamination since Vue 2.3;"I'm actually using [Ream](https://ream.js.org/#/) for the build, which also handles the SSR details.

At the moment I'm just adding checks in the code for the properties of the global object, but I feel like there should be a better way. Also, I can't actually see the offending data in the global object, so I'm not sure what's going on."
2017-06-03 22:17:40;"Can VueJS have ""skinnable"" components?";"Why does vue complicate things for people?

Build a component. Build it with some base styles. Use a set of CSS classes to manipulate it visually, like a theme. 

When you want to theme it, adjust those classes/replace that file. 


It doesn't need to be a prop, or a js event or anything. It's just different CSS, load it as such. Maybe using new CSS Variables that can be manipulated with javascript. Just an idea.

Update: ok here an little example hope it helps

https://jsfiddle.net/0znwpptw/Make styles a part of your model. The storage should be pretty straight forward, use vuex for it and maybe have some server side data for having them elsewhere.

I would parametrize some of the style data at the app level and pass down to ""customizable"" components. Maybe use mixin to manage the levels of applicable behavior.I don't see any way of doing the css part without decoupling things a bit. Here's what I would do:

* Compromise the coupling part by importing a stylesheet into the main vue file of each section of your website. For instance User.vue would have user.scss and would be responsible for loading every part of the user pages

* Handle styles themselves via sass/less variables on each css file

Perhaps there's a better way of doing this sort of workflow though...Just have different classes for the different skins and apply the different classes based off the skin chosen.Are your users supplying a theme file, or selecting from a variety of theme options? If the latter you could have a some simple class bindings for simple things like color changes and some if's to change html layout.If you're using vue-loader you could use CSS Modules to have the same component use different styles.

I do this and just use a prop to switch between ""skins"".

https://vue-loader.vuejs.org/en/features/css-modules.htmlVue material has themes you can apply."
2017-06-03 19:22:55;Vue Portlets?;I would say that that use of `data-whatever` might not be idiomatic in a pure Vue project, but only you know what constraints you are working under and there isn't enough context to give real feedback. But nothing looks glaringly wrong. Vue is very flexible and easy to work with (outside of learning the template dsl i suppose) so it's hard to fuck stuff up. my coworkers still manage tho
2017-06-03 17:35:04;SEO and one page for content website.;If you can, you should consider server side rendering or pre rendering. Maybe look into nuxt, a vue based framework that deals with this kind of issues
2017-06-03 10:24:23;vue-cli webpack template: where does the server code go?;"If your client is a single page app, then it is a good idea to create separate projects.
Vue is a framework for user interfaces. There is no backend. If you need one, take whatever you like to use, NPM, PHP, Ruby, whatever you like!Did you use `webpack-simple`? If not, it sounds like that might be a better fit for you.

Otherwise, I'm not sure what you mean by 'separate', you seem to have already separated things by moving them into a folder called `client`. And it sounds like you're just serving an API and not doing SSR or something, so how are things getting mixed up for you?"
2017-06-03 08:41:00;What is the safest naming convention to use?;"Yeah I had the same thing.  I can't even recall reading anything explaining that anywhere in any of the docs/tuts but I could have just missed it.  It just dawned on me one day.

Personally, naming JavaScript variables and objects in snake case would bother me a hell of a lot more than just using the two standard conventions alongside each other. YMMV."
2017-06-10 19:18:30;Free Introduction To Server Rendered Vue.js Apps With Nuxt;
2017-06-10 18:50:53;How do I use Vuex actions with ES5?;"These things are _much_ easier to diagnose and fix with a codepen or something instead of random code snippets.

Store is usually available at `this.$store`, I'm pretty sure that still applies here.I usually pull items from state via a getter and computed property: 
[JSFiddle](https://jsfiddle.net/o3etsgd7/14/)"
2017-06-10 17:49:36;What happens when you do/don't detach listeners;"Typically, your ""app"" will leak memory, in some cases it may lead to weird glitches that might leave you thinking you've been overrun by gremlins."
2017-06-10 09:28:59;A tiny tab component for Vue.js;"Cool. I might look into this. I ended up rolling my own small implementation after none of the vue-tabs components appealed to me.

Keep up the good work, I use your VuePack :)"
2017-06-10 08:43:22;WordPress Core Discussion - React vs. Vue;I'd rather see the Wordpress core getting some decent refactoring and a move to a reliable framework.  I don't really get why WordPress needs to pick sides. Why not facilitate both and leave adoption to the users? They're very similar.Who exactly will be deciding this issue? Matt? If that's the case, there really isn't much point in arguing over which is better, React or Vue. 
2017-06-17 23:35:41;From Kendo UI to Vue.js;"I'm going to add in [vue-tables-2](https://github.com/matfish2/vue-tables-2). I'm not the author but it covered our needs perfectly. You can look also over awesome-vue since there isn't get something 100% established on the widget sideThere aren't as many UI libraries as for Angular and React. This is probably one of the biggest problems with Vue at the moment. I've even considered building a commercial one.

You can check these one:

https://github.com/vue-bulma (a set of components for Bulma CSS for to build [Vue Admin](https://admin.vuebulma.com/) )

http://element.eleme.io/#/en-US (and a [data table](https://github.com/njleonzhang/vue-data-tables) for Element)

https://github.com/ramakrishnamundru/vue-materialize-datatable

In my current gig we are using [bootstrap vue](https://github.com/bootstrap-vue/bootstrap-vue) and just making our own data table with filters and so on.Check out Uikit. Very pro vuejs, Even their homepage is built with vue.For my own reference, I'm adding https://github.com/spatie/vue-table-component"
2017-06-17 19:14:44;Image galleries using custom directive (usage example);
2017-06-17 10:37:27;A chat community for Vue users on Discord.;
2017-06-17 01:14:30;Help on Refactoring;"If you have control over the api `'/api/device/'` you should consider responding with a 404 when device isn't found, like so:

js

    var searchDevice = new Vue({
        el: '#searchDevice',
        data: {
            serialNumberQuery: '',
            searchResult: null,
            searchError: null,
        },
        methods: {
            searchDevice: function() {
                this.$http.get('/api/device/' + this.serialNumberQuery)
                    .then(function(res) {
                        this.searchResult = res.data;
                    })
                    .catch(function(err) {
                        this.searchError = err.code; // 404, 500, whatever
                    });
            }
        }
    })

template

    <div v-if=""searchResult"">
        {{ searchResult }}
    </div>

    <div class=""text-center alert alert-danger"" role=""alert"" v-else-if=""searchError === 404"">
        Device not found
    </div>

    <div class=""text-center alert alert-danger"" role=""alert"" v-else-if=""searchError"">
        Service Unavailable
    </div>

I would recommend removing your if(!res.data) logic and just assign searchResult to res.data in all cases.

    this.$http.get('/api/device/' + this.serialNumberQuery)
                    .then(function(res) {
                        this.$set(this, 'searchResult', res.data);
                    })

Then you would have something like this:

    <div v-if=""searchResult !== null"">
        {{searchResult}}
    </div>
    <div v-else class=""text-center alert alert-danger"" role=""alert"">
        Device not found
    </div>Also consider denounce to not DDoS Api"
2017-06-16 18:14:30;How to build an Android app using Cordova and VueJS;i would just use quasar framework
2017-06-24 18:04:00;How to stub file dependencies in Vue unit tests;
2017-06-24 15:29:07;5 Great Talks From VueConf 2017, The First Vue.js Conference;Been looking forward to the videos! Hopefully they come on YouTube soon. Thanks for thisVue is the amazing baby of React + Angular, I ****ing love this framework. 
2017-06-24 14:10:09;Implementing Vue for big webshop;"I don't have any experience with implementing a large scale e-commerce website myself, but I've seen people do that. 
The biggest food ordering service ele.me used vue to implement their website, Alibaba also used vue for some of their projects. So it is definitely possible.The question is fairly broad, but one thing that stands out in your list is how you would implement dynamic 'CMS-able' routes. I'm not sure how that would b done with vue.. would love to know actually.

And I would also consider SSR or prerendering (like prerender-spa-app)Hey, I have been developing a starter project for medium/big applications that could go for your requirements, I have been finishing it up a little bit (that's why I am not advertising it yet) but there you go: https://github.com/crisbal/vue-webpack-ssr-fully-featured

It is a boilerplate/starter project but there are examples for localization, backend data fetching, SSR, multilingual URIs should be easy enough to implement, there is support for meta tags and much more. It should be pretty easy to extend it to your needs, especially because I wrote some docs that explain how everything works.

Also if I did things right you should not have to mess with Webpack at all, since everything should be configurable elsewhere. 

Let me know what you (or anyone else) think about this.No SSR === No SEOYou could use [snipcart](https://snipcart.com/)"
2017-06-24 07:57:16;Best books & resources to learn Vue.js;"there's a good free course on laracasts; https://laracasts.com/series/learn-vue-2-step-by-stepI'm working through the lynda.com course right now and it's not badMax Schwarzmüller's course on Udemy is the best I've come across.

https://www.udemy.com/vuejs-2-the-complete-guideHere's some of the best [VueJS courses & books](https://reactdom.com/blog/vuejs-books)."
2017-06-24 01:16:27;HTML elements generated with v-for disappear on refresh.;"You should not modify arrays like that, use streamers.push(your data) instead. Or this.$set()

Docs: https://vuejs.org/v2/guide/list.html#Caveats"
2017-07-01 18:08:03;Getting frustrated! Trying to create a basic CRUD application in vue.js with a router, bootstrap and Firebase and not using NPM.;"Npm is not a program that runs on your application. It is a program to install dependencies that will run on your application. 
Use npm to install the axios, and vue-axios. Then use axios to send the proper http requestHere's something you can look at - I used this a while back when first doing firebase with vue - Good luck!  

[Beer Vue Firebase](https://github.com/zerostatic/vuejs-firebase)
"
2017-06-30 16:50:16;Minimalist notification component;
2017-06-30 16:47:03;My subreddit newsletter created with Vue;excellent, pretty good idea... can you share us the repository of this?
2017-06-30 14:31:25;Help: How to use css variables in vue?;"Use SCSS/Sass:

    <style lang=""scss"">...</style>

Also add this to your webpack config rules:

    {
        test: /\.s[a|c]ss$/,
        loader: 'sass-loader'
    }

I don't have more time right now - if this doesn't help google ""vue scss"" and you'll find lots of infos about it!Use post-css If you defined you css :root (means global ), you can put your css variables into an css file names const.css or whatever you want to name and link it in index.html."
2017-06-30 13:41:01;A Progressive Web Application with Vue JS, Webpack & Material Design [Part 3] : Offline experience with Service Workers;
2017-07-08 23:08:15;What is your preferred database you use for projects?;PostgresPostgres if I need relational stuff. RethinkDB if for some reason I want changefeeds. If it's even simpler than that, NeDB.Kind of depends on the project. MySQL, MongoDB or SQLite on occasion. PostgreSQLPostgresql Mongodb. Three main reasons: 1) I don't have to jump around between different syntax in my head, 2) I can change schemas quickly while in development, and 3) can't beat how fast you get up and running with complex relationships. Second place would be Postgres.  mysql 
2017-07-08 18:15:25;Vue-cli + Webpack 3 + HMR;There's currently a known bug with HMR for templates (not code) in vue files. We already have a PR aiming to fix it, but it's not done yet.
2017-07-08 15:27:45;Expose any props you pass to be used in provide/inject.;
2017-07-08 14:33:12;Using more than one UI library in vuejs project;"Element usually does not conflict too much with other stuff since it's css is using BEM and encapsulates pretty much everything in specific class names starting with `el-`
 
Nevertheless, one library can be big in size, but 2 even bigger so I would partially import the components to assure I don't bring 2 libraries all together. 
There is always the possibility that you'll have some css conflicts, but that will be obvious and you could work around it. I recommend you stick with one as your main library and import individual components from the other as needed."
2017-07-08 11:05:23;VueJS 101: A todolist in Vue - Scrimba screencast;
2017-07-15 14:50:43;Css style is different in production;"There might be very different reasons for that, depending on what exactly ""is not the same"". Good idea is to go through the code and find what is missing or different in production.

First thing that comes to my mind is different bundling configurations for dev and prod. It is only likely if you've set up webpack yourself (or whatever bundler you are using).

Second is - if you are using any ui libraries, such as vuetify or vue-material and not using version locking (e.g. `npm shrinkwrap`, you may have slightly different versions of packages installed on local and production environment. These kind of libraries are updated quite often and may change components layout or syntax.

I'd suggest run a production build locally. This will exclude bundler configuration. After that run development build remotely, this will exclude packages versions mismatch."
2017-07-15 11:04:44;4 Important Changes In Vue.js 2.4.0;"Anyone eager to quickly describe ""Scope hoisting is one of the key features of the recently released Webpack 3. Without going into too much detail, in Webpack 1 and 2, bundled modules would be wrapped in individual function closures. These wrapper functions are slow to execute in the browser compared to this new scope hoisting method, which is made possible by the new ES2015 module syntax."" paragraph?

I haven't followed changes introduced in Webpack 3 yet."
2017-07-15 03:28:44;Tutorial or example for sharing data between Components (non parent-child);"two words to google: event busOn a Vue application, you actually have a few options when it comes to store and retrieve information between your different components.

 * **Vuex**  for informations on your web application that is usually used by a lot of different components. After [creating a new store](https://alligator.io/vuejs/intro-to-vuex/), add a new state attribute, mutator and getters to manipulate the information, and call them inside your component methods.

 * **Local Storage** is a [HTML5 solution to store informations at browser level](https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API). This has the benefit of surviving after a page reload or even browser closing (which Vuex has not). I usually store non-critical information that will be commonly used everytime my user comes back to the application. If you want your code to be cleaner, you can as well mix this with Vuex, making it that when the application is loaded, it sets into Vuex localStorage data. Then in your Vue Component you just access Vuex normally. [This might come handy](https://github.com/robinvdvleuten/vuex-persistedstate)

 * **Emit / On** [Vue API](https://vuejs.org/v2/api/#Instance-Methods-Events) to communicate between two components. Usually use this when sharing information between Parent / Child components. [Event Bus](https://alligator.io/vuejs/global-event-bus/) is a good example of how to implement this. You might as well want to take a look at the brand new [Inherited attributes](http://vuejsdevelopers.com/2017/07/17/vue-js-2-4-important-features) features (since Vue 2.4.0) which offer $attributes and $listeners API to pass [props](https://vuejs.org/v2/guide/components.html#Props) down and up

 * **Persisted data** (Database, Firebase, RethinkDB...) : If the information need to be permanently persisted, or / and will be shared between users. If you don't want a backend, [Firebase](https://github.com/vuejs/vuefire) can do the trick.

Its a lot to digest, so i really recommend you to test things out gradually...First start with passing a prop between two components. Then use Vuex to have a global store. After you can try and persist your store with the localStorage. And maybe in the end test Firebase (or another persistence layer) on top of it.
Play with things and you will learn how and when to use them.You can use Event Bus then emit the event globally, so other components can listen $on it

Example: https://alligator.io/vuejs/global-event-bus/Yes you should use Vuex: https://vuex.vuejs.org/en/getting-started.html"
2017-07-14 12:59:48;Make Advanced blog with Laravel + VueJS2;If you want to make it advanced I would use expressjs or graphql, and just stick to node, why mix php into it
2017-07-14 11:33:59;Yet Another TypeScript Book on GitBook;"I know this isn't about Vue, but thought it would be interesting to the community given it can be a part of the toolchain.

This is book I just ""published"" on the TypeScript programming language last week. It tries to be a good introduction and includes about 15 integrated videos supporting the various chapters.

I hope this is useful to you all.
"
2017-07-22 22:57:37;A Vuex plugin to save the store to localStorage/cookie (or your own storage mechanism) - with Typescript support;Sweet. I have been hacking this together by using general mutations for LocalStorage but this seems more robust. Test it https://github.com/championswimmer/vuex-persist
2017-07-22 20:47:39;Weex Projects?;"does this help?

https://github.com/joggerplus/awesome-weex

there are lot of things searching github, I can't handle all the chinese, I have too much problems in my life already :P, I tryed to google but i can't find anything :0"
2017-07-22 18:01:31;Retrospective on my first experience with Vue.js;
2017-07-22 16:45:04;obecność, VueJS and Django app for amateur football/esport etc. teams to help in selecting dates for training and matches.;
2017-07-22 03:22:30;Getting Started With Vue.js;As a warning, this seems to be based on Vue 1.x, so it's likely fairly out of date.
2017-07-29 15:13:01;Infinite loop using updated();"I would forget about `updated()`.

Why dont you just call the fetchAllJobs immediately after your add job api call finishes?There are a few ways you could do this.

1. Use Vuex (probably too much for this project, not sure of the scope)
2. Use a Global Event Bus: https://alligator.io/vuejs/global-event-bus/

Honestly, it sounds like you should start with #2. In the success response from the API request, you'll just do something like 
    
    EventBus.$emit('job-added', jobDetails); 

and then you'll want to use the following in the created() in the ViewJobs component:
    
    EventBus.$on('job-added', (job) => { doStuff(); };"
2017-07-29 12:31:23;Tutorial: Integrating and customising Bootstrap 4 in Vue.js;This is great. Would be cool if the end product was in like a boilerplate github repo.
2017-07-29 01:29:15;Hi guys! Why would one choose Vue Resource over Native Fetch API;"Disadvantage: vue-resource is deprecated.

Edit: just to add a bit of flavour, I prefer superagent to axios.Use whatever suits you best.
Also, VR was deprecated ;).
See following post by Evan You: https://medium.com/the-vue-point/retiring-vue-resource-871a82880af4Axios is recommended by the Vue devs. Vue resource has been deprecated.Thanks Guys :) I'm currently using axios and it's awesome!"
2017-07-28 20:45:45;Global Event's bus or VueX;"I find all these vuex tutorials really silly in the sense that they show it works, but the apps they create are so small it is pointless to bring in vuex. 

It can't always do the job. I have a very complex front end app where multiple states needed to be updated and inferred from the states and computed properties of the other. The $store from vuex solved. 

That being said, if I don't need vuex I don't bring it in because it introduces so much complexity.Vuex is really more for managing application state. In other words the application's shared data.

 The event bus is used more for communication between isolated components. So in the event that you needed two sibling components to communicate with each other via emitting events and then listening for them. Events that don't necessarily mutate state or application data. IMO only use vuex if you have data that you share across multiple components or it's a waste of effort It might be easier to integrate it but in the long run its going to become a hell to maintain/debug all these event listeners. 

I inherited an app written in Angular 1. Unlike VueJS, angular 1 doesn't have any out of the box solution for the state management. So this app is massive and its reactivity is based on these event emitters/listeners. To be honest, its such a pain to trace/debug it. 

Say, some user changes his first name and it dispatches an event (we are using sockets.io) to every component that needs to be aware of the change, and there are like 10 components to propagate this change to. It would've been so much easier to update it in one place (store) which all these components are listening to...I've just been creating a second Vue() and storing all my shared data and shared computed inside that.

Is that wrong?

But if I'm building an SPA... Can't I just have all my shared data an root level? Then every component can just get it from $root.shareddata ??The upside of Vuex is that it makes you really think about how your application is structured. Because it enforces architectural constraints around how your data is stored, accessed and mutated it promotes some sound practices and forces you to work with events and data in a consistent way.

I personally combine the use of Vuex and an event bus using Vue's native $emit and $on methods depending on the task. Most of the time, I will use Vuex because I find its consistency makes for better testability (which is where Vuex really shines). But there are situations where a global event bus makes sense, I use one for showing/hiding a loading indicator.

TL;DR you can have both, an event emitter and Vuex.Hi,

These are the main advantages imo:

- Time-travel debugging
- Out-of-the box async
- Quite modular (for a centralised state mgmt system)

I find the integration quite simple tbh, care to elaborate how you think makes Vuex that complicated?

It can be a bit more verbose in some situations but... no free meals yadayadayada.
"
2017-07-28 18:14:45;Deploy Vue.js — SSR(Vuetify) on Production with Pm2 and Nginx;
2017-08-05 21:22:17;Handling Image Uploads;"Base 64 encoding it is going to be your best route.If sending the data as json is not necessary and you can use form data, send it as `multipart/form-data`. That way you can send the files with the form. I believe you'll have to create the in-memory form manually if you're sending it ajax style to the server.

The other option is you upload the images separately (eg , as soon as they drag/drop them into the area) and move them to some temp location with a temp name, then have the response return the image name in the response, attach that to the JSON request and then move it to the correct area on the server. Why I say move to a temp location is in case the user abandons the form.  There are more moving parts in this one and it's more error prone but if you handle them you'll be ok. 

If the images are large, base64 is going to be horrible unless you live in a place with good internet (not Australia :(((  ) because it inflates file sizes quite a bit. "
2017-08-05 13:08:55;Can you setTimeout on a computed property?;"That's because your returning of true is happening within a callback. inputDisabled() itself is not the one returning true.

Your best bet is to store inputDisabled as data, and update that after the instance's been mounted (sorry I'm on my phone otherwise this'd look prettier):

    data(){
      return {
        inputDisabled: true // initial value
      }
    },
    mounted(){ // after the component instance has been mounted,
      setTimeout(
        _ => this.inputDisabled = false, // enable the input
        1000 // after 1 second
      )
    }      Do you want the timeout based on an event or after the component is loaded? 

I think your best bet would be to use a watcher or mounted that sets the timeout, like the other commenter suggested. 

Watch: {
someProp() {
  setTimeout(() => {this.disabled = false}, 1000)
} 
} 

Sorry if formatting is messy, on mobile "
2017-08-05 01:01:18;Any job sites with lots of vue.js jobs?;"I see that indeed.com shows some results, but most posts ask for react and angular as well.

I don't know why they'd need you to use all at once, maybe they're consulting jobs, but they could basically just ask for advanced JavaScript.My agency client is looking for a lead dev to take over node/express backend vue2 frontend projects once we complete the mvp (any day now).  Pm me If you know PHP, look for Laravel jobs. Laravel ships with Vue as the default front end framework. Laravel is pretty straightforward and they have their own site for teaching it at Laracasts.comMy company is looking to hire a remote contract position for 20-40 hours a week. Laravel + VueJS. Primarily looking for someone to do enhancements, bug fixes, and add new functionality to pre-existing platforms."
2017-08-04 22:12:43;"v-bind, v-on vs. shorthand "":"" and ""@""";"Shorthand, always. I'm a lazy programmer, the fewer characters I have to type the better!Shorthand! It's just as expressive as the longhand version:

@ - ""at"" is a preposition just like ""on""

: - In the same way you set JavaScript object properties with a colon, {key: property}, Vue component properties are also set with a colon   I use to write v-bind and v-on all the time to try to be more 'explicit' and make my code more readable but I just grew tired of typing it all the time so I just switched to short hand style and never looked back.I prefer the shorthand version. I use to write it out when I was using netbeans because I didn't like seeing error highlights in the editor, but I switched to atom ide and using webpack, the shorthand just looks cleaner longhand 4 life!I find that the "":"" doesn't always work in an in-line template, as of 2.1. 

Eloquent, and Razor syntax seems to be going in a similar direction, using ""@"" so it seems like a good idea for Vue to use "":"" to tell the difference. "
2017-08-04 19:25:05;Avoid This Common Anti-Pattern In Full-Stack Vue/Laravel Apps (x-post r/laravel);
2017-08-12 18:40:22;Vuex Practical Use;"> There is no point to use Vuex when getting all the forum topics and posts because that data is dynamic and always changes. You will alway be fetching the collection of posts via a server call to see if new posts were created.

Vue core team member gere. I have to strongly disagree with this.

> So what I want to know is how we can optimize this practice to minimize server calls. When the user logs in should Vuejs grab all the topics and posts initially. And when a user clicks on a topic on the main screen the vue router sends the neccessary data based on topic id and load the topic component without sending another server call to get that topic, since gathering all the data was done in the previous step. 

Vuex was designed to solve *precisely this problem* (amongst others).  It goes a little like this:

* Component A dispatches action `'GET_TOPICS_LIST'`, which stores the result in the store
* Component A uses the list from the store to show the list of topics
* User navigates to `/topic/353632`, which renders component B
* Component B dispatches action `'GET_TOPIC', $route.params.id`
* That action checks to see if that topic is in the previously fetched list in the store. If it isn't, it fetches it from the server.
* That action then sets that topic as the ""currentTopic"" in the store.
* Component B uses that field from the store to display that topic.

> However, when the user is going from another website to a specific topic on your website your going to need to do a server call regardless.

As explained above, `'GET_TOPIC'` can take care of that scenario.

> Furthermore, the store won't be up to date as users constantly post new topics and posts. One solution would be to have a timer to refresh the store data however that would be expensive as large amount of data is transfer.

That's not a problem of vuex specifically, that's a problem of all apps that deal with rapidly changing data on the backend, and there exist many strategies to deal with that, from polling the API regularly with a timer to using websockets  to listen to updates or using something like Firebase as a realtime backend (for which [vuex bindings](https://github.com/posva/vuexfire) exist, for example).

Vuex is fine for all of that.

> In the end, Vuex is only useful on storing static data that doesnt change too often such as User data and settings for the user.

On the contrary, vuex is a *very good* building block* to create a solution that deals with fluctuating data. 

If you have any questions about it, feel free to ask and I'll try and answer them.

----
*: I say ""building block"" because in the end, it's only job is to manage global state, and to work with your API, realtime data and so on, you still have to bring in other technologies/packages etc.
You could keep it all client-side but only call getters every 30 or 60 seconds and on component mounting.

You could also organize it as multiple calls. I've seen forums where only the latest active post is highlighted on the top level, in which case you're only getting a small amount of data - not every topic. Once somebody clicks a subforum, you ping your API for that level of your posts.

If you want all the posts displayed on one paged, you could do paginated loading.

Everything you described on here can be optimally handled with Vuex.I usually use vuex this way, let's say I have a the main.vue file, that will have the vuex of user, the I have another page but with children routes that share the same parent.vue, usually this will maintain another state for whatever that parent.vue is the same for all the children routes. Then on children routes, any action that affects the state of whatever state the parent.vue holds, will be updated by the children if whatever server side calls return the updated values, and so on.Could use vuex and a pub/sub system (e.g. redis)? (That's what I'm doing)I personally use VueX to keep track of all of the properties of my components, so I can get the information out of components the user has modified whenever I need them.

Examples: 

* Individual count of how many of each type of component the user has created.
* Current state of each component (in my application components can change 'channels' whenever so it's nice to have one place I can go to grab the current channel
* Arrays of components of each type, for any operations that might need to be performed on any one type of component, or for easier searching for a specific value

Some types of web applications might not need to store as much current session information as others and that's okay. 

VueX can be useful for information that the application needs to reference often, like RAM but in the browser, to minimize server calls. Take reddit's recently viewed threads feature, that's a silly thing to send back to the database and store but it can be interesting to see what you've recently viewed if you want to go back. So you could store the last 5 or so forum posts there.

Maybe online friends as well, that would be a value that only needs to change if someone logs on or off and otherwise could be static, and would save server calls for any actions requiring knowledge of friends."
2017-08-11 16:35:55;Video Series by Academind: Vue.js + Vuetify + Firebase Project;[deleted]Awesome! I just started a project with this stack a couple weeks ago and I'm starting to wonder what the best practices are. There goes my weekend!I love Max's instructional style - his Udemy course is a fantastic resource for learning Vue 2.x, even at full price. If he hasn't already, it would be great if he could do some Vuetify Q&A segments since it's such a young framework. I've been using it for a project and I've found help difficult to get.
2017-08-11 14:33:38;Vue.js (Video) - How I Setup My Development Machine;Didn't know about DejaVue, thx :)
2017-08-11 13:17:53;Vuex Tutorial Example From Scratch;
2017-08-11 06:00:17;creating only some parts of server-side rendered app with vuejs;"No, it's not a problem. You can have multiple Vue instances on the same page. But figure out how you'll manage talking between them, if you need to do that. For example, you might have a login form Vue app, and a recover form Vue app. Something you do in the login form might trigger the login form to be replaced with a recovery form, and the e-mail field migrated from the data of one Vue app to the other. This kind of stuff leads to tight coupling which will be a problem in the longer run, that's why it's more often that people advocate/practice single-instance (self contained) apps. If you can achieve the same with different vue components, so they are independent from each-other, you're set. :)For a project I'm working, we created the backend (admin section) in plain PHP, and only after that did we decide to use Vue.js for the frontend.  Later on, I came back to the admin section and needed to spruce it up.  I was going to throw in some jquery, but then remembered that you can just throw in Vue without having to compile it or anything.  I mainly use it for just simple reactive components (checkboxes, etc), but it works super well.

Just throwing that out there."
2017-08-19 12:27:38;"I made my first Vue web-app - a read-along phonetic alphabet assistant for spelling over the phone; feedback appreciated! (x-post /r/webdev)";
2017-08-19 11:34:13;Vuex - easier way to call multiple mutations inside a method?;"Don't set mutations manually. Call actions that in turn call mutations in Vuex. 

Use ...mapActions as you state and you can do:

this.myAction(payload) in your methods. I like to follow the same design pattern and never call mutations directly. Even if it seems too verbose when the action is basically just committing the mutation, chances are I will later need to bind some logic to it so I never really need to refactor.

If you follow the same guidelines, you can mapActions and call them via this.myAction(params) as usual, and all your commits will stay inside the action. I mostly use actions for mutations in an asynchronous callback, but I will also use them when I need to do multiple mutations at once even if it's not async. 

Also, look at the mapMutations helper since that will at least make the syntax in your components a bit cleaner.If you don't want to introduce actions, you can at least dry up what you have a bit

        methods: {
            someMethod() {
                [
                    'mutation1',
                    'mutation2',
                    'mutation3',
                    'mutation4',
                    'mutation5',
                    'mutation6',
                    'mutation7',
                ].forEach(m => this.$store.commit(m));
            },
        },
"
2017-08-19 09:31:26;Vue JSX now supports v-model, event modifiers, function components;
2017-08-19 09:26:22;Tutorial: How to add ESLint to your Vue.js project;"> I recommend you also install ESLint globally, this way can also trigger linting from the command line.

This is not recommended, as it introduces the opportunity for a version mismatch between the local module and the global module. For running eslint directly on the CLI, there are a few good approaches, 

1. npm version 5.2 introduced a binary called `npx` which has your `node_modules/.bin` directory in its path. So from your project dir you can now just run `npx eslint`. 
2. Add it to your scripts in package.json (keeping in mind that node_modules/.bin is in the path for scripts), and then run `npm run eslint`. 
3. If you have a version of npm < 5.2, run the command directly: `./node_modules/.bin/eslint` or do something like `$(npm bin)/eslint`
The webpack template isn't intimidating. Just don't peek outside the src directory if you don't need to. I highly recommend the vue-cli templates. "
2017-08-19 00:50:14;Consider re-licensing to AL v2.0, as RocksDB has just done · Issue #10191 (closed);
2017-08-26 21:33:33;Simplifying Vue.js development;
2017-08-26 17:13:20;What will be the best backend framework if I use vuejs as frontend?;"The decision simply shouldn't matter as long as you just use your backend to serve up an API for your content :)

All backends can create JSON for your front end to parse. Node JS version of Laravel: https://adonisjs.com/SPA? I would say NodeJS with express, lookup loopback framework from IBM for rest apis, and give it a try, incredibly fast for developers and well is node and express in the end.

Why node? If you’re developing both front and back, why would you not want JavaScript as a language for everything?

Otherwise I see a lot of people using Laravel with it, but I would suggest go full js on your stack.

Edit: typoLook into firebase also.Can recommend go, very easy to create high performance api's which can be consumed by vue. I personally really love Node + Express. It's very simple and no-nonsense, yet very powerful. If anyone has a better idea, please share, but so far I'm not planning to get off this boat.Asp net core 2 in C#. Very powerful. It depends on the application. Though personally I find writing REST Apis can quickly become a daunting task if you go the standard SQL->ORM->JSON serialization path. For smaller apps I'd definitely look into NoSQL with some sort of schema validation.

use koa2"
2017-08-26 15:19:58;Can't figure out how to design my app's nav layout with the vue-router;"I think you are making things a bit too complex. Vue-router should primarily be used to control navigation between 'pages', which is why it's easy for you to get that basic functionality working.

On your page, you could have a sub-nav component, and its content would be contingent on which route you are currently on. Same goes for a sub-sub-nav. Does that make sense? I think you're looking for nested routes... Assuming that your sub-nav is related to your main-nav such as ""users"" and sub-nav relates to ""users"" details... Here is the documentation for doing nested routes. https://router.vuejs.org/en/essentials/nested-routes.html"
2017-08-25 18:44:03;I need a mixin to import another mixin and can't get it to work. Any advice?;"Check the import on your TableMixin.js.  With DataMixin being inside the { }, I believe it's looking for that as a name.  Without the braces, it should grab the default.I think the other person is right about the import, however if you can't get it to work for whatever reason after you fix that, you could probably just merge the objects instead. If you have access to object spread it would be as easy as 
    
    import { DataMixin } from './DataMixin';
    export default {
      ...DataMixin
      // the rest of your stuff here
    }"
2017-08-25 18:35:19;How to manage state for a large application;"For medium-sized projects you can use a [global event bus](https://alligator.io/vuejs/global-event-bus/) - when components change, they can tell the event bus to emit a named event, and can pass the bus a payload of data that is emitted with the event. Other components can listen to bus events, pick up the payload and update their own state with it.

For larger projects there's a state management pattern/package, [Vuex](https://vuex.vuejs.org/en/intro.html). I'm only just getting my head around it (just because I'm new to it and not an ultradeveloper) but it acts as a Vue plugin, and allows you to centralise state for your whole application.

And I think you can use other state management packages too, maybe Redux? But you've definitely got options at two or three tiers of sophistication.

"
2017-09-02 15:59:56;I made a web site for people without twitter to spectate Melee tournaments!;Not crazy about the interface, but this looks really good for a student... and for some professionals for that matter.  Nice work.
2017-09-02 13:26:53;Crituque please!;"It doesn't work for me unfortunately.

It says NaN"
2017-09-02 12:56:14;Vue.js London Conference;Is there somewhere where we can get a bit more information about the event itself? Date(s), location, speakers and or themes, ... ?
2017-09-02 10:52:42;Vue and Vuex are reacting to data change differently;"looks like Linus has covered it out 

>Dont mutate state within render, computed or getter functionI have posted this in the Vue forum too and just added a comment with more explanation. [Link](https://forum.vuejs.org/t/vue-and-vuex-are-reacting-to-data-change-differently/16902)"
2017-09-01 20:40:59;Moving from Angular to Vue.js – Devgurus – Medium;
2017-09-09 18:45:05;Tips for a React dev learning Vue?;"The docs are really good. Also http://vuecasts.com/Just jump in and try stuff, if you're from React it's going to be a breeze. The only thing that might take some getting used to is Vuex, but the docs for everything in Vue Core is super solid so just jump in.Install vue-cli (`npm i -g vue-cli`) , create single file component (component.vue) like [here](https://vuejs.org/v2/guide/single-file-components.html) and run `vue build component.vue` Enjoy :)flux -> vuex

singlefile componenet -> .vue files


i would recommend playing with something like quasar framework to see how all the pieces mesh."
2017-09-09 16:24:51;Favourite test framework for webpack?;"Have a look at this: 

https://www.reddit.com/comments/6yurv5

One of our contributors explaining how to get rolling with jest and vue. 

It's a brand new article so you might ha r misses it.Call me a bad dev. I dont write unit tests. I do only Acceptance tests with phantomjs and casper.js. Everything I need.I was looking into jest a while back and liked what I saw. 

Recently I was recommended Ava for nuxt testing. I guess it has to be karma?"
2017-09-09 13:21:09;Tutorial: Introduction to two way binding in Vue.js;Two way binding is not there for vue not because it is hard to implement..because its a really really really bad idea to do it at all. 
2017-09-08 20:17:23;Help with vuex and async load of data from APIs;">Mutations Follow Vue's Reactivity Rules

It looks like you're appending new properties to your state.  It may be better if you do something like this in your mutator:

     UPDATE_TUNNEL: (state, { key, tunnel }) => {
        Vue.set(state,key,tunnel);
     }

"
2017-09-08 16:25:48;Learn Vue.js in 2017 from these books & tutorials.;Found the cookbook on safaribooks.
2017-09-16 23:51:43;"How to make an ""input"" component, and how to use it with vuex?";"[This](https://vuejs.org/v2/guide/components.html#Form-Input-Components-using-Custom-Events) can give you a better idea on how to solve problem 1.  You'll want to emit an input event.  So, you'll end up putting something like this in your handler methods:

    decrement: function(){
        this.$emit(""input"", this.value - 1);
    }

vuex allows ou to access and mutate variables in state.

In the parent componet, you get the vuex variable using a getter.

if you then pass that to child component, you can mutate the variable using a mutation.

you will get an erroe if you try to change the property inside the child component.

You should look at the helper functions:

    mapGetter, mapMutations, mapActions"
2017-09-16 22:56:38;Choosing the JavaScript Framework for Gutenberg (~WordPress) · Issue #2733 · WordPress/gutenberg;"Woha. It's quite nice to see so much support for Vue in the WordPress community!

I think it may have a lot to do with Laravel...?He also started a [poll](https://twitter.com/MrAhmadAwais/status/908551927264305152) on Twitter that Vue crushed.

"
2017-09-16 19:22:50;Just started learning Vue.js...;Sounds like you want to use vue-router and make a SPA.
2017-09-16 17:33:38;Undefined data when assigning;"Your `response.data` is an array, so it doesn't have an attribute `id` or `total_amount`.

You can get an array of the ids using `map`:

    this.labels = response.data.map(x => { return x.id })

To get the total amount you would need to loop through the array and total up the amounts from each item."
2017-09-16 13:43:42;New to Vue and Js frameworks. How do people avoid rendering delays on page load when all data comes though an Ajax request?;"Generally folks will give the user some indication that data is loading via loader.  It may also be possible to draw attention away from the fact that it's loading, but it's kinda hard to describe how you might do that in your case.  It could be done by using an attractive or funny loader.  If you have TOS that the user needs to agree to, it's a good time to have them agree as well.  The joy of the frontend frameworks tends to be the speed after they first load at the cost of a heavier load up front.  SSR could come into this conversation, but I'm not sure you'd have the setup for that.SSR or Prerendering. :)

Check out NuxtJs. Since you want to avoid the initial AJAX request at the page load, the obvious answer is to bundle the result of that initial AJAX request in the HTML.

The trick that I often use to do it, it simply to put the data you would get from the initial request into a hidden field in json format. Then when I intialize my Vue application, I just retrieve that json and put it into my Vue.$data object.

Sure, you can complicate your life with Server Side Rendering (SSR) or Prerendering, but why!? The technique above will generally give you good enough result and will work flawlessly with your python backend without needing to install node on your server. The one time that I would go with SSR is to improve my SEO results. So the final answer depends if you care about SEO for this page.This article covers a possible solution: https://vuejsdevelopers.com/2017/08/06/vue-js-laravel-full-stack-ajax/There are three different ways to handle this.

1. Use a loading indicator
2. Pre-render the state inserted into the HTML (improved page load speed, not great for SEO)
3. Server-side rendering (bit of a pain to set up, but in the end it is very nice as your backend and frontend will use the same codebase for rendering). This is great for SEO.Make sure your ""bare"" page has headers, branding, most colors, etc. so that it looks like a web page when it starts loading. You want it to fill in, like an updating data screen in an airport or on a news channel-- not ""draw down"" (ugh) or ""render"". If this part is challenging to you, then you should consider how you are serving and caching static content like outer/master page templates. You can also spend lots of time with decision logic that decides such things as-- if you can re-use an existing context menu html, or if you ~really really~ have to re-compose it against templates and data. Wherever you can use static or cached content, obviously do it. Cache what markup you can in localstorage, if you reuse it enough-- and that includes not just tiny areas, but the big ungainly skeletons which are filled in by the tiny areas. People fell very hard in love with pre-compiled, separated markup templates, for this reason. You'd be amazed what you can store on your app's little javascript heap. Cheat whenever you can. Render visible, editable panels first, and hidden context menus last-- you'll be amazed how long a pushed button will appear to pause before a fetched, icon-bulleted, collapsing, scrolling menu with data badges suddenly pops into view after fetch success, like it was there all along. You can fetch two ""graphical"" menus in the time in takes for a user to get up there and mash teh hamburger.

If you have panel headers on loading panels, show them in collapsed form before they're populated, with their own small loading spinners or animations. The effect you desire is to IMPRESS your client with the high-tech magic going on as the screen fills in. Each appearing part should be complete. Not even the tiniest of sections should look like it's slow-drawing-- just pop them all in. boom. Not hard to do on the modern web. One slow-drawing graphic an inch wide can make a work-of-genius look like crap.

Imagine when you start a new solitaire game or mahjong game on a computer screen. There is an expected moment at the start of a new game, when the board or table ""fills in"". It's an expected part of the experience. Now cut that imagined time down to about 1/3 or 1/4 or 1/6. That's the same effect I want when I hit a portfolio detail page, and I have thrown the Name(s) and other details into the header first-thing, and the client watches impressed as the wonderful buffet of data populates her working/clicking space. Oh my god, she is so busy, but she clicked and then she survived 500ms and now she can work again. Wow she is impressive. Your history/back or ""new-render"" functions should lead with small objects or light data-- important data-- so that the headers and important information load quickly. It helps if I'm waiting on a page, to have a name or title telling me what I just clicked on, and what I'm waiting for.

tl;dr: Your skeleton should have the color and the branding, and be static-served or cached, and generally data-populated/readable with app-level global data plus a small handful of passed data (which kicked off your ajax minions). That way, there's always something to start with. Your new renders should be prioritized by visibility (don't worry about events at this stage) and not even the smallest piece should look like it's drawing down. Don't destroy ~anything~ resembling usable markup until it's being replaced and must be re-rendered."
2017-09-23 22:10:31;#vueconf USA is coming! March 2018;Wait so it's not in Poland this year? Dammit, my boss approved my trip to Poland and was really looking forward to traveling there.Anyone have any idea on cost estimate? I have to give budget requests to my boss way in advance, and since this is in the continental 48 I have better than a snowballs chance of being able to beg. 
2017-09-22 13:53:28;Vue.js 3 and other top news from Q&A event with core Vue devs;Vue3 dropping support for IE, does that mean what I think it does?I've updated these paragraphs a bit to be more clear based on the questions here. Thanks for the feedback. Personally I'm very happy with both Vue 3 and continuous support for Vue 2. 
2017-09-22 09:22:24;A Vue.js boilerplate for Eclipse Vert.x projects;
2017-09-22 07:32:06;Publish vue components to npm easily;This is great.  Other templates are geared more towards actual apps.  Thanks for the contribution.
2017-09-22 06:22:38;Markdown to Vue component loader for Webpack.;
2017-09-30 23:49:45;Getting a static value from an observable?;"You should probably provide a full example so people can see exactly what you are talking about. Considering you are giving two different properties a ref to the same object, it's not surprising that they are both changing and probably has nothing to do with vue's reactivity system. You should deep clone it first. 

Anyway, if it is Vue issue, you can just use [Object.freeze](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze) on something before you hand it over to the vue component and then it won't get all the getter and setters and whatnot on added to it. "
2017-09-30 17:52:19;Vue official style guide;"This is good.  
I like this a lot.  
I don't like the amount of re-writing stuff I'm gonna have to do, but I think I'll like the outcome!I'm really looking forward to VueJS eslint config to go along with this. Hopefully it will build on top of the airbnb config as most of these things are similar.Nice! Hope we'll quickly see an eslint plugin so I don't have to remember all the rules. They all sound very sensible.Wow. This is great. I need to change up some of the style I write. This is fantastic. I like that, upfront, the document states the semicolons and quotes do not really matter, there are more important aspects to consider first. This is good. Already failing two of the first three priority A rules, lol.I write data as an arrow function: 
    
    data()=>({
        something: 10
    })

I thought that would be better?A lot less opinionated than I was expecting.  The capitalization for file names was a little surprising, but everything else seems to be consistent with tips throughout the guide and good practices.  Anyhow, it'll be good to have a standard for open projects.Very nice. I kind of disagree with some points but the tips are very handy because a lot of people ask these questions again and again. 

For example these [namings here](https://vuejs.org/v2/style-guide/#Single-instance-component-names-strongly-recommended) seema bit too opnionated and are placed under strong recommendations.  I don't think they know what the fry meme means"
2017-09-30 16:53:14;Parsing tags from JSON;"The `is` attribute is for dynamic components, you can't use it to generate arbitrary HTML like that.

Your best bet is probably to just put together an HTML string from the data in your object, and then bind it to an element with `v-html`.Example of your JSON, please.

But I'm guessing your problem is that you're trying to bind HTML, which isn't allowed unless you use v-bind-html:

https://vuejs.org/v2/guide/syntax.html#Raw-HTML"
2017-09-30 14:31:28;What choices are available to Vuejs developers for building mobile apps?;"Checkout Framework7.  [Cordova by Apache](https://cordova.apache.org)

You can bundle any kind of JS app into a mobile app, be it Vue, React, Angular, or anything else.[Weex](https://weex.incubator.apache.org) is the most developed solution so far. [Native Script for Vue](https://www.nativescript.org/blog/a-new-vue-for-nativescript) may developed further in the future as well. 

If you ideally want to share code between, or have a single overarching library for you web app code and native app code, right now Vue may not be the best option.I don’t think a Vue native solution is anywhere near ready. 

Quasar is more similar to ionic. 

Framework7 is pretty easy to integrate into a Vue-cli webpack template project. I’ve used it on multiple projects and it’s worked out great for me. does it need to be an app?  can it be a ""mobile friendly"" web page?Make it a progressive web app.  "
2017-09-30 13:39:43;iView reached 2.4 and added jsFiddle demos to all code examples;wow, it looks pretty solidThey just added a twitter account for updates: https://twitter.com/iViewUI
2017-10-07 22:39:53;Pointers and tips on how to make a i18n module?;"I'd suggest using an existing package if you can, but if nothing suits your needs or you're determined to roll your own:

An i18n system is, at its core, a dictionary lookup: imagine a big object with text in the original language as values, and text in the target language as keys. You need:

1. A way to populate that object
2. A function that does the lookup
3. An easy way to call that function from a Vue template

There are standard file formats for translations, and I think there are js libraries to parse them. To call your function from a template, you'll probably want to create a Vue filter: https://vuejs.org/v2/guide/filters.html

Does that help?"
2017-10-07 20:01:58;Is this the best way to create hrefs from v-for loop?;"You can't use the `{{ }}` inside the quotes, in the same way you can't use the `{{ }}` inside the `<script>` area. As a third option, you could use [template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals):

    <li v-for=""(cust, idx) in customers"">
        <a :href=""`/customer/${idx}`"">{{ cust }}</a>
    </li>Don't you use the router-links?"
2017-10-07 19:54:52;Introducing Tamiat: Vue.js and Firebase based CMS;Did they mean to name it Tiamat?
2017-10-07 12:33:31;vue-chartjs or vue-echarts?;"I'm using a vuejs package for highcharts. Im not home so can't lookup the name. Highcharts was the only one that provided me the advanced charting I needed like candlesticks mixed with everything else and handle dynamic frequent updatesFor my charts I've use c3.  Being SVG, no sizing issues.  Easy to write your own components.I've used echarts with Vue at work, but I looked at the source of the github linked and kind of copied it over to create my own component from the main docs' examples and this plugin. I housed that chart component in a parent that would feed it a computed ""options"" object prop based using the data to display.  

Echarts is simple enough, but note that it's from Baidu, so you might find the English API docs a little wonky at times. There was only one occasion where I had to check the Chinese original for clarity. Formatter functions for labels are a little confusing until you've used them. My strongest complaint about them is the nature of the API options limit your ability to customize their appearance and labeling--but that may be the price you pay for their being easy to use for a good-looking result. This might not be an issue if your design is less strict. Take a look at the echarts demo page and play around before you make a decision.Did you look at D3?"
2017-10-07 11:01:44;Loading Vue/webpack from another url;
2017-10-14 16:29:30;Thinking of trying TypeScript or FlowType;"Hey there! I'm on the TS team and would be interested to hear about your experience with either one if you try it. I'll try to leave some answers.

> but also because it has type inference, so you don't have to declare everything to get type saftey

TypeScript has type inference too, but it tends to be more local. We've taken this stance because it makes reasoning about error messages easier in the long run, but there's occasionally a tradeoff. The way this is developing in the future is that our team is adding some tooling to automatically infer types for you (think of this as a supervised type inference), and the Flow team has expressed interest in improving error message reporting in general. I think both products will get better in this respect over time.

> Does anyone know if the new type declarations added for TypeScript extend to FlowType as well?

Since I was the one who recently worked on the Vue type declarations, I'll just mention that it was...very complicated :D. We did pretty specific work in TypeScript 2.3 to enable APIs like Vue's to give a well-typed experience (i.e. actually getting validation on using `data`, `props`, `methods`, etc.). To get it all working, you'll need stricter flags (specifically `noImplicitThis`) to be turned on. It's been brought up on their issue tracker, so I think the Flow team could potentially add some of the same support down the line, but at this time it doesn't look like you'll be able to just port the improvements over.

Finally, there are still places we're planning to improve, but we're hoping we've enabled Vue users to get a typed experience that will only get better.Typescript also has type inference, and a setting that will warn your when the type cannot be infered. (no implicit any)> Also, it's just a Babel extension, so it would fit better with my existing Laravel Mix setup.

This is the main reason that I prefer flow. It makes fewer assumptions and imposes fewer restrictions on your build process, which is usually fairly brittle in JS.I’m using it with typescript and it’s realy working well "
2017-10-14 14:05:54;Not sure how to get the value from this axios promise;"You should really use vuex for this if you want to keep it clean. Computer property just pulls the data from the store, and action calls axios, mutation does the heavy work in the for loop. 

It will end up being a lot cleaner in the end It's because you're running a for loop inside your result. It's most likely returning the data before the loop has finished.Because the function is async you need to either return a promise, which could return the result of the for loop or use the newer async await await syntax if you can. If I understand correctly, you can't have the enclosing function return the value from the async callback.  You'll have to ""do"" something with the result, e.g. call another function:



    axios.get(URL)
    .then((response) => {
      var invoices = response.data
      for (var i = 0; i < invoices.length; i++) {
        if (typeof this.date !== 'undefined') {
          comparisonDate = moment(date)
        }

        // if the invoice's due_date is today, or earlier then it's an outstanding invoice. 
        if (moment(invoices[i].due_date).isSameOrBefore(comparisonDate)) {
          tot = sfCalcs.sfSum(tot, invoices[i].amtos)
        }
      }
      doSomethingWithThisValue( sfCalcs.sfDisplayVal(tot) )
    })


I wouldn't call the function directly in the template. You are correct in assuming that you shouldn't be trying display promises in the template. In fact you should try and avoid calling functions at all in templates if you can avoid it. Instead do something like below. 
Template:

    {{ accountsReceivable }}  
Vue Ctor Options:  

    {
      ...
      data () {
        return {
          accountsReceivable: '' // or some other sensible default value
        }
      }
      ...
    }

Then you can call the function and set the `accountsReceivable` property. You might want to watch some other property or call the function when the instance is created. Not sure when you need it.  

Somewhere else:  

    accountsReceivable (fund, date) {
      // Basic idea is to sum up a bunch of unpaid invoices, and inject that total into the template
      var tot = 0
      var comparisonDate = moment() // start off with today's date, and reassign below if a date is provided
      var URL = 'invoices/?fund=' + fund
      axios.get(URL)
      .then((response) => {
        var invoices = response.data
        for (var i = 0; i < invoices.length; i++) {
          if (typeof this.date !== 'undefined') {
            comparisonDate = moment(date)
          }
    
          // if the invoice's due_date is today, or earlier then it's an outstanding invoice. 
          if (moment(invoices[i].due_date).isSameOrBefore(comparisonDate)) {
            tot = sfCalcs.sfSum(tot, invoices[i].amtos)
          }
        }
        
        // This returns a promise that resolves to the value of whatever you return.
        // return sfCalcs.sfDisplayVal(tot)

        // This should update the Vue instance - how you get the vue instance is up to you.
        // In this case I just made the assumption it's a method of the vue instance.
        this.accountsReceivable = sfCalcs.sfDisplayVal(tot)
      })
    }

The reason you're not seeing anything is because you're returning a promise - even if you use the new async/await syntax you're going to get back a promise and not an actual value."
2017-10-14 10:41:58;Behavior of v-model on middle-click on refresh page button on Firefox.;"I've made a Github issue about the problem:

https://github.com/vuejs/vue/issues/6816"
2017-10-13 20:04:19;Nuxt js and loading data into a component from the store;"Might have something to do with the action being async and the fetch method is not waiting on it to respond before rendering the page for the first time. 

https://vuex.vuejs.org/en/actions.html ( have a look at the async part )  
https://nuxtjs.org/api/pages-fetch ( have a look at the async part also )  

Didn't have the time to test the code here, so it's a shot in the dark. "
2017-10-13 14:36:56;Alibaba Weex Ui;"A rich interaction, lightweight, high performance UI library based on Weex.You can find more examples here. Write once and support iOS / Android / Html5 right now!


Github：https://github.com/alibaba/weex-ui

Demo：https://h5.m.taobao.com/trip/weex-ui/index.html?_wx_tpl=https%3A%2F%2Fh5.m.taobao.com%2Ftrip%2Fweex-ui%2Fdemo%2Findex.native-min.js
is weex stable yet?"
2017-10-21 14:42:23;CSS3 Perspective Playground made with Vue ✨;
2017-10-21 08:09:48;Vue.JS Top 10 Articles (Oct 2017);"Did this list include itself?

Could this post not simply have been a text post of the list?Number 3 is pretty solid!"
2017-10-21 03:17:47;The future of Vuetify--Full time maintainer--Courses--Please Support;
2017-10-20 19:30:09;Force re-rendering Kendo template DOM elements into Vue components;"Good to know . I have a kendo sub and was looking to use it so this kinda sucks.  Going to try vuetifyI''ve never used Kendo, but assuming it's like jQuery

https://vuejsdevelopers.com/2017/05/20/vue-js-safely-jquery-plugin/Didn’t Progress just release vue wrappers for kendo? Pretty sure they did Haha, do you work with me? We have a lot of Kendo wrapped by Vue as well.Seems like angular was their bet and I don’t think it was a good one . React and vue are , in my mind, the better frameworks and putting lipstick on the jqueru pig isn’t what I’m looking for"
2017-10-20 18:26:30;Modularity for Vue Components;"If you want to build individual JS files for your vue components and their dependencies and include them individually as needed you need to do the following:
// webpack config

    entry: {
      module_A: ['./src/module_A.js'],
      modeule_B: ['./src/module_B.js'],
      ...
    },
    output: {
      path: 'js',
      filename: '[name].js'
    }

"
2017-10-28 23:53:19;Is there a good example of Vue JS with Firebase AND Sendgrid or similar to send email notifications from the app anywhere?;"This is what essentially what you want. https://github.com/firebase/functions-samples/tree/master/email-confirmation

1. vue sets data in firebase 
1. cloud function is trigged by the data change at that location
1. cloud function sends email based on that data

All your vue app has to do is set the data in firebase in the right spot (step 1). The rest is written in firebase. 

Also dont forget to set firebase rules for this feature e.g. only let authorized users write to that firebase key and thus trigger the email. 
"
2017-10-28 23:06:35;Using v-bind:src with Pug templating engine;"use `img.bookPic(v-bind:src=""article.img"")`
"
2017-10-28 22:36:49;Need help at troubleshooting my first Vue.js Project;"The first error is, I think, located in line 10 of App.vue

You are declaring a default value for textFormat in your textview component, but when you use the component you give it an empty object as a prop, the error is correct: {} doesn't contain any property.

Just remove 

    :textFormat=""textFormat""

or asign it a proper object with what you need.    <p v-html=pastebinText
       v-bind:style=""{ fontSize: textFormat.textSize/2 + 'px',
                       paddingLeft: textFormat.columnSize + '%',
                       paddingRight: textFormat.columnSize + '%',
                       backgroundColor: textFormat.colorsBackground.hex,
                       color: textFormat.colorsText.hex
                        }""></p>

Bad style. Make computed property getStyle() returning this object and change template to <p v-html=pastebinText :style=""getStyle""></p>"
2017-10-28 15:43:49;Form handling;"I think that [vee-validate](https://github.com/baianat/vee-validate) is best for validating. Also, you can find information at [awesome-vue](https://github.com/vuejs/awesome-vue#form-1). Right below that is more info on forms. > Css framework agnostic or that can be used with bulma and or semantic

[buefy](https://buefy.github.io/#/) is very good and quite complete. Still in beta though, so some changes and breaks. I use it today in one of my app. Never had more than half a day of work to upgrade, and most of the releases don't need you to do anything."
2017-10-28 09:57:08;Struggling to piece together my understanding to apply to my node.js project.;I would not think that server-side rendering would matter all that much in this case. I would skip it until it becomes necessary. As far as sharing code, I'd abstract the methods that you want to share into a utility module or class depending on their role/purpose. I think the whole point of a component structure is that you can abstract out shared pieces into their own components and load them as necessary. If you find that you need HTML/methods in multiple places, those should likely be their own components.
