date;submission_text;comments_text
2012-02-22 00:05:20;Playing with Ember.js;
2012-03-02 14:36:33;Quick Notes is a small example to showcase some of the capabilities of sproutcore-statechart and sproutcore-routing in Ember.js;
2012-03-02 14:33:55;Ember.js - Model, View, StateMachine?;
2012-02-29 03:26:16;Submitting your first patch to Ember.js docs;
2012-02-29 03:23:41;A simple Rails app for testing CRUD with Ember Data.;
2012-02-28 19:30:35;Video: Tom Dale talks about debugging Ember.js apps [58min];
2012-03-08 17:39:03;Useful Ember.js Functions;
2012-03-06 22:22:10;IRC log viewer using Hubot, CouchDB and Ember.js;
2012-03-06 16:06:29;Understanding Ember.Object;
2012-03-15 14:19:40;Backbone Events vs. Ember Bindings: A Benchmark;And the HN thread: http://news.ycombinator.com/item?id=3616820
2012-03-22 14:30:07;Ember.js: Rich Web Applications Done Right;
2012-03-27 18:09:25;Advanced Ember.js Bindings;
2012-04-06 22:03:25;Difference between {{bind}} and {{bindAttr}};
2012-04-06 14:54:27;An Extremely Gentle Introduction to Ember.js - Part 1;
2012-04-05 14:08:51;Unit Testing Ember.js, How I Learned to Stop Worrying and Love the Runloop;
2012-04-05 06:49:18;Square - Ember and D3: Building responsive analytics;
2012-04-01 20:36:58;Changes in Ember.js v0.9.6;
2012-04-11 13:01:25;Flame.js: UI Widgets for Ember.js;
2012-04-09 17:06:26;Ember.js Naming Conventions;
2012-04-08 22:57:46;Eight Ember.js gotchas with workarounds;
2012-04-07 19:25:46;Ember.js Dashboard - Overview of Ember.js community activity on Twitter, GitHub, StackOverflow and Reddit;
2012-04-19 17:28:31;Why Ember.js doesn't use property descriptors;
2012-04-17 15:42:51;The Emberist: Two Way Binding to the DOM;
2012-04-24 15:54:12;Ember.js - Routing with States;
2012-04-30 17:56:40;Absolute Paths in Classes;
2012-05-15 17:35:51;Flame on! A beginner's guide to Ember.js;
2012-05-30 14:04:14;What's new in EmberJS (weekly wrap-up #4 for May 29);
2012-06-11 17:14:02;Ember.js: Implementing text fields with save buttons;
2012-06-26 14:36:22;What's new in Ember.js, June 18 edition;There's also a more recent update (June 25) on the same site.
2012-08-28 13:39:32;DRY up your templates with bound Handlebars helpers;
2012-08-27 20:16:52;Ember.js Routing - The Director's Cut;
2012-08-27 20:06:32;What's new in EmberJS #13;
2012-10-05 19:17:35;Ember Noob: A journey of Ember.js exploration and discovery, with occasional visits to Rails-land.;"Mostly added this because I was tired of seeing the top result in the Reddit column of the Ember.js Dashboard (http://code418.com/ember.js-dashboard/) say ""1 month ago"".  Let's see some new stuff."
2012-10-17 16:19:58;ember-data presentation from PragueJS;
2012-10-17 16:03:49;Breaking up your routes in Ember.js;
2012-10-17 15:52:16;What's new in EmberJS #16 15 Oct 2012;
2012-10-27 02:53:17;My first contribution to the EmberJS community just got accepted!;It's just a change to the docs, but I'm proud to see it committed in!Good job. This definitely confused me when I went to grab the 1.0pre, so it should definitely be in there.
2012-11-07 10:37:45;JavaScript Jabber Podcast: 034 JSJ Ember.js;
2012-11-05 16:40:22;Ember Movember.. anyone?;
2012-12-04 14:26:45;Thoughts on trying to use ember.js for the first time;"After trying to make heads or tails of what's out there, this is exactly how I feel. Combine the fact that the ember-rails gem is out of date and doesn't support CoffeeScript and you've got me no longer very interested.

I guess I'll check back in once more of the dust has settled.I have a sample app called neptunejs on github. I am using ember for four different sites I have built in the last four months. The code base I have up there is rather simple but gives a good structure to it. I really enjoy it and have not had any pain points in using the ember way. This was my sentiment as well. I have a data-heavy project that I am currently using jQuery for DOM manipulation and Handlebars for templating the JSON data. Two down, one to go right? Ember ties it all together, right? So why is it so hard to take that next step?

Not sure if the ""I love ToDo list examples"" was tongue-in-cheek. I get no good information out of a tutorial like this. I need something more substantial. Something with more data than some text (todo items) and conditions (done/not done). "
2012-12-14 02:12:25;"Would love some feedback: ""Your Ember app is a click away from home""";"Good read, might want to check out the new router for ember http://emberjs.com/guides/routing/ 

The docs arent particularly great yet but there is a lot of good stuff on StackOverflow."
2012-12-23 16:13:36;Write Ember.js App With Middleman;
2013-01-03 20:23:16;Getters and Setters in Ember.js;
2013-01-17 19:13:14;Using Rails & Devise with Ember.js;
2013-01-13 01:39:28;Intermediate rundown on Ember's Run Loop;
2013-01-25 07:23:30;Fire Up Ember.js | PeepCode Screencasts;Fantastic, just in time for the new clusterfuck of a router. I really hope this is the missing link in my learning Ember. Knowing PeepCode, I think it may be. i am excited to watch this.I loled when I saw the name of the demo app. Ordr: Rstaurant Mnu Systm.
2013-01-22 16:49:07;5 Useful Tips for Ember.js Developers;
2013-01-19 01:48:40;Building a login workflow with Ember.js – is this useful? How can it be better?;
2013-01-28 13:58:48;Ember.js Live - Learn the basics of Ember.js live over the Internets!;Looks like a great idea. I've been wanting to learn more about Ember. I'm looking forward to the Q&A time.
2013-02-03 21:23:31;Ember.js Router and Template Naming Convention;
2013-02-14 11:50:34;Any guides for migrating from Backbone to Ember?;"I don't know of any specific migration guides, probably because in some cases the exact pattern for expressing something in Ember might not have a perfect translation for how you'd express it in Backbone. If I were you I'd recommend reading through the emberjs.com guides, which should be pretty up to date at this point, and just absorbing some of the different patterns, how bindings and computed properties and auto-updating templates work, and start thinking in terms of Ember conventions, which will save you a lot of boilerplate in the long run if you've given your brain time to let the concepts sink in. 

Also, might be worth hiring a consultant to assist in the process if it's complex enough. A rewrite in Ember.js is more than likely the by-far most simple solution.  Much of your code logic/rendering/ etc is not done at all the same way and you will find more pain in thinking in terms of ""conversion"" and rather consider a full re-write.  That being said, in the long haul if you have that many models and views you probably should be using Ember unless you're really married to the low-level objects made available by BB because you are doing some novel things w/ the rest of the app.  Ember has a nasty learning curve initially but the tutorials available are just getting better and better which really helps smooth this out.
"
2013-02-13 15:51:22;Getting Started With Ember.js;Actual permalink: http://twbrandt.github.com/2013/02/11/Ember-Quick_Start_Guide/index.html
2013-02-12 04:03:51;Why Discourse uses Ember.js;This is a great article. And discourse is really is proof of the validity of ember as a platform. I read this a couple of days ago in /r/learnjavascript.  Good article.
2013-02-10 05:49:02;Emblem.js - indentation-based template language, compiles to Handlebars, full compatibility with Ember.js, sexy syntax;This is a fantastic project - I had used Hamlbars previously but that felt incomplete and didn't support simple things like indenting an if statement without calling a helper. Emblem.js is awesome!Im interested to see where this goes, but not sure how I feel about it just yet.
2013-02-10 02:33:28;Ember.js and Rails - Intro;
2013-02-21 20:29:54;.htaccess for Ember?;
2013-02-16 08:49:04;Ember.js 1.0 RC1 released;
2013-02-26 19:45:17;Speaking With the Ember.js Core Team;
2013-02-25 01:47:03;Ember-data for read only site?;
2013-02-24 23:28:44;Ember Query - a querystring library for Ember.js;
2013-02-24 06:32:47;"How to assign manually created instances to the ""auto""-created views/etc?";"I believe that the router is promise aware, in that if your model returns an object that responds to a ""then"" method it will understand how to deal with that. Example:

    MyApp.FooRoute = Em.Route.extend({
      model: function(params) {
        return $.getJSON(""http://jsonip.com"");
      }
    });

(I haven't tested this, I just looked at the source code [here](https://github.com/emberjs/ember.js/blob/9059729584e582cb787601a5c84727fcffc8e181/packages/ember-routing/lib/vendor/router.js#L379))

As a side note, you _may_ find using ember data even for read only uses makes your life easier. Or you may find it makes your life a lot harder. So far I have only used it for read-only data, and found it to be very useful in terms of being able to efficiently load lots of related records. With added magic. YMMV :)"
2013-02-23 22:18:04;Testing controllers in Ember.js RC1;
2013-03-05 15:53:40;Introduction to Ember.js on Railscast.com!;Anyone able to compare to the Peepcode screencast?
2013-03-03 19:50:03;Ember Skeleton V8: Brunch, Ember, Ember-Data basic project quickstart;
2013-03-15 15:51:10;NetTuts.com Getting Into Ember.js;
2013-03-13 01:12:41;Intro to Ember Part 2 (Railscast);
2013-03-12 21:25:11;Someone experienced with Ember coding ? Need some quick assistance on a project, will pay 50-100 dollars. Shouldn't take long for an experienced coder. (Ember-based Drum Sequencer);
2013-03-19 21:40:12;My Week in Ember - Naming Conventions, Routing, And Ember Camp Videos;
2013-03-18 22:50:38;ParadigmShift - Ember.js RC1 introduction screencast;
2013-03-16 14:04:14;Grunt.js-Ember-Boilerplate. Up and running Emberjs with Coffeescript, CommonJS modules, Ember-Data, and Grunt 0.4x!;
2013-04-05 13:49:39;Getting into Ember.js: The Next Steps [tutorial];
2013-04-02 14:22:24;EmberJS 1.0 rc2 released. Spoiler alert: now with non-breaking changes;
2013-03-30 17:51:31;Tom Dale on Building an App with Ember.js;
2013-04-12 17:03:44;Animated Outlet Demo;
2013-04-10 00:09:20;EmberWatch: A collection of great Ember.js resources;
2013-04-07 07:08:09;EmberScript: Ember.js-Infused CoffeeScript;
2013-04-18 21:33:24;Hi, everybody. We recently launched /r/LearnJavaScript, and it's turning into a pretty good community. We'd love it if you stopped by!;The mods said this was OK, btw.
2013-04-18 07:55:18;Getting Into Ember.js: Part 3;
2013-04-14 20:58:08;RESTless: A Robust, Simplified Alternative to Ember Data;I'm new to Ember.js but I'm curious, why would the developer do this instead of contributing or extending Ember Data? 
2013-04-26 01:24:52;Ember101: Series of Free Screencasts;
2013-04-21 00:26:59;Chapter 1 of Ember.js In Action (PDF Warning);
2013-05-03 19:37:09;Run the Ember.js Basic Adapter Demo on RedHat's OpenShift. (I like dogs!);
2013-04-29 18:32:43;A no coffeescript version of Grunt.js-Ember-Boilerplate. Also includes JSHint, Bootstrap and some other changes.;
2013-05-09 18:09:43;Ember at Embedly Tutorial IV: Models and Ember Data;
2013-05-08 10:40:50;Learning Ember.js with Rails;"Best resource for getting started with ember in my opinion is the [peepcode screencast](https://peepcode.com/products/emberjs) - not free and also not rails specific. Peepcode also has great rails resources too.Sorry for the late response.  Hopefully you're well on your way by this point, but if not, here's what I can offer.

The PeepCode cast is definitely good.  Tom Dale's cast is also good, building a blog engine in about half an hour:
http://www.youtube.com/watch?v=Ga99hMi7wfY

Ember's too young, and only hit base API stability a little while ago, so don't kill yourself looking for useful books.  Your best bet is to look at materials put out by the Ember team, to show how it's intended to be used.  The PeepCode cast was put together with a lot of input from them, and Tom Dale is an Ember team member, which is why those two are so good.

Integrating the tools can be tricky, if you're not starting from scratch.  Definitely look at the Ember-Rails gem, and ActiveModel Serializers.  If you want to use Ember Data, that should be the most painless way to go, but Ember Data is a little bit of a mess right now, so it will probably be painful regardless.  Notably missing is support for nested routes.  It's kind of depressing.

But if you're not trying to adapt an existing data API, you can sidestep a lot of the problems with Ember Data by designing explicitly for it.  There are other solutions for bridging your data from the server, but if I had to guess, I think building for Ember Data will save you the most time in terms of maintenance in the long run.
"
2013-05-07 15:14:06;New way to scaffold ember project;
2013-05-04 18:27:01;Ember.js - Ember Data Progress Update;
2013-05-20 13:48:22;Ember.js Screencasts;
2013-05-19 17:37:50;Hacking with Ember.js;It's great to see such hack days happening. Would love to have something like that in Amsterdam or Utrecht. Any Dutch people here that would also be interested?
2013-05-29 02:48:19;Ember.js - Ember Data 0.13;
2013-05-29 02:38:19;Ember.js - Ember 1.0 RC4;
2013-06-04 18:02:05;My Top Go-To Ember.js Resources;"I find the discussion forum (http://discuss.emberjs.com/) and IRC channel (#emberjs on Freenode) to be quite helpful as well. >Render, Control, Partial, View, Template

>Ember has a few different helpers for getting templates into your page. They each work differently in subtle ways. It's important to know which to use when, and this post does a great job differentiating them.

Which post are you referring to here? I don't see a link."
2013-06-02 14:55:45;Ember.js - Ember 1.0 RC5;
2013-06-14 20:50:19;Getting Started with Ember.js;
2013-06-14 02:52:59;Backbone and Ember Workshop [video series];
2013-06-20 22:22:46;[eBook] Up and running with Ember.js;
2013-06-19 15:41:10;An AutoSave Pattern for Ember and Ember Data;
2013-06-17 21:44:57;A nice intro/overview of EmberJs with Rails;
2013-06-27 19:23:23;Ember 1.0.0 RC6;Updated the post with the official blog post about it.
2013-06-26 15:42:50;Client Side IDs with Ember Data;
2013-06-25 02:12:37;Custom models in Ember.js without Ember-Data;
2013-07-03 17:38:41;Intermediate Ember Controller Concepts;
2013-06-29 03:40:33;"Tom Dale, Peter Cooper and Rob Conery; Cage Match - EmberJS vs. Angular";The last part about adding the second row to the table made me lol This was really fun to watch. Those guys seemed to be having a good time on stage, while also showing us interesting stuff. Recommended watch!
2013-07-11 23:08:16;Get started with ember.js in 5 minutes.;
2013-07-19 20:08:44;"More ""getting started"" style tutorials?";"http://www.youtube.com/watch?v=Ga99hMi7wfY

http://ember101.com/

The peepcode video is pretty good too.The Tom Dale video on the guides page where he builds a blog engine in about half an hour is good also, and will reinforce the ideas from the PeepCode video (which is very good), but if you want to really learn, start trying to build something.  

When you're making the decisions yourself, you're really forced to learn, rather than just watching stuff, where you can't really tell if it's sticking.  Start small, where you don't have to get into the agony of Ember Data, and go from there.  It'll probably take a couple false starts before you really get your footing and are doing your architecture right, but the sooner you make those mistakes, the sooner you can be fluent."
2013-07-19 14:03:08;tuts+ Course on Ember.js;
2013-07-16 18:35:23;Ember transitions + touch gestures, iOS-style;
2013-07-15 13:46:49;Integration Testing;
2013-07-26 18:18:26;Does Ember.js fit my project?;"You're correct that the typical workflow with the ember router doesn't really apply to what you're trying to do, but there are many other primitives that you can make use of to achieve a desktop appearance/interaction. You'll almost certainly be making use of the `ContainerView` to dynamically add / remove child views to the desktop view, for instance.

edit: sorry, accidental early post"
2013-07-26 17:56:13;Ember.js Routing and Rendering Simplified;
2013-07-26 13:54:21;Ember security update release. Read & update.;
2013-07-26 12:44:12;Current project is a huge mess of JS, Is it possible/feasible to gradually port over to Ember.js?;"[deleted]Ember feels like it's more of a start fresh type thing, backbone might slide in better.https://grouptalent.com/blog/migrating-from-rails-to-ember

This is server to client, but some of the ideas are the same.  It's probably more work to try to do it in place than it would be to start fresh.  There's some adage like, you write one to throw away."
2013-07-26 06:50:49;Can I use an array as a model property?;I haven't seen any array examples so I'm not sure if it's possible. An alternative method would be to use [one-to-many relationship](http://emberjs.com/guides/models/defining-models/#toc_one-to-many). It might even be cleaner solution if the items have more than one or two properties.
2013-08-01 23:54:06;"Another ""hasMany"" question. Creating new records?";
2013-07-31 19:04:28;Facebook-style responsive swipe menu nav with Ember.js and CSS3;So is there an approach similar to this that seamlessly combines normal desktop menu behavior with a fancy mobile-only one? How is the performance on Android?
2013-07-31 12:14:40;Ember.js data visualization experiment - sparkline + touch gestures;
2013-07-30 16:27:29;10 Things You Can Do With EPF (That You Can't Easily Do With Ember Data);Thanks for this, this might be enough to convince me to switch my app to EPF today. 
2013-07-28 07:55:30;Can someone help me wrap my head around hasMany and belongsTo?;"Are you ever going to have to persist changes to a server?

If not, you can vastly simplify your life by just using Ember.Object instead of DS.Model."
2013-08-09 13:44:49;Debounced and Throttled Observers;
2013-08-15 13:27:55;EmberUI is coming;"Is this affiliated with the Ember project in the same way jQueryUI is affiliated with jQuery?

---

Also, I take exception to this:

> when date widgets show the date as 2013/05/11 it isn’t because it is the best way to express the date to a human

Actually that approach neatly sidesteps the conflict between the US-style M/D/Y and the rest of the world's D/M/Y (or similar)

Check out http://en.wikipedia.org/wiki/Date_format_by_country - In every case where date representations start with a year, they follow Y/M/D format."
2013-08-14 17:33:53;Ember 1.0.0-rc.7;Does anyone know why there have been some many release candidates?  I understand that are constantly making changes and all, but 7 RC's?  That seems a bit ridiculous.
2013-08-11 14:56:50;Modern Web Dev workflow with EmberJS;"Personally, I've been having great success using the ember generator through Yeoman.

Complete dev server with compiled coffeescript templates, livereload, etc.

Has a production-ready build as well. I highly recommend checking out Yeoman as well as Brunch.Shameless plug. I have a very similar project also based on brunch https://github.com/gcollazo/brunch-with-ember-reloadedThis is funny. Just a couple days ago I forked another project that was a brunch template for ember. I made some improvements, customizaitons, and updates to the project that I forked. Here's mine: https://github.com/mrinterweb/brunch-with-ember-coffee-emblem-sass"
2013-08-23 13:56:02;EmberUI: Text Inputs, Checkboxes, and Radio Buttons designs;
2013-08-20 13:06:19;Ember.js Drum Machine;"This is awesome!

I think there's a little bug though... when I add multiple channels, they add additional lines that seem to be bound together.  So, for example, I added a cowbell (I NEED MORE COWBELL) and maracas.  Both now have two lines, and when I add a note to the maracas, it also gets added to the cowbell.

Regardless, this is quite cool, and an awesome use of ember :)Seems to only work in Chrome. Did not work in FF 23.https://github.com/GavinJoyce/ember-beats/blob/master/app/models/channel.js

Was just looking at this, and I'm confused.  Why reopen an Object immediately after its definition?"
2013-08-19 15:49:34;EmberUI Default Buttons (explaining design decisions);
2013-08-17 05:09:43;Sovolve is looking for Ember.js consultants! (Our stack is ember, literal coffeescript, handlebars, brunch, scss, bootstrap, and phonegap.) Hit me up if you can help! (xpost from coffeescript);Talk to Brian at DockYard.com
2013-08-30 06:07:59;I integrated Sails and Ember in a small demo app - feedback appreciated!;I may be missing something, but I can't actually find the app!
2013-08-29 15:14:47;Ember.js - Ember 1.0 RC8 Released;
2013-08-29 14:40:28;Tom and Yehuda on Ember 1.0, Skylight and Tilde [podcast];
2013-08-28 20:27:07;Simple visual way to detect unnecessary renders;Awesome.  I didn't know you could do this.  so the domChanged element selector is just created by browsers automatically?
2013-08-26 14:50:39;Swag: a growing collection of helpers for Handlebars.js.;Some of these seem great.  Some seem like a bad idea.  Handlebars is mostly logicless on purpose.
2013-09-06 16:58:16;EmberUI: Select and Select Date;
2013-09-05 08:15:58;Lipsum generator in markdown with Ember;Pretty cool is the code up somewhere?
2013-09-04 10:18:04;[help] testing - Yeoman: how to include `app/` files in tests?;An update for whoever drops by: I did remove the question at SO because it ended out pointless as I chose Karma to do my tests. Check it out at http://karma-runner.github.io
2013-09-01 09:40:33;Ember 1.0 Released;
2013-09-13 10:46:22;Ember.js demo app #1: Poe;
2013-09-10 16:31:29;Upgrading your old Ember.js application.;
2013-09-18 21:47:30;How do I have separate handlebars files instead of a single html page?;"Are you using Rails as backend. You can skip the read if its not the case.
We use EmberJS for our product https://beta.bondable.com and the best part of EmberJS is the way we are able to modularize the code.
Yes you can split your handlebars into separate files. 

This is how your Gemfile has to look like
gem 'handlebars-source', '1.0.0.rc4' # or the version you need
gem 'ember-rails', :github => ""emberjs/ember-rails""

If you define your handlebars in a HTML/HAML/ERB you would be enclosing them in a script tag <script data-template-name=""SOMENAME""  type=""text/x-handlebars""> </script>


With Rails asset pipeline you can actually add handlebars in a file with extension
You can enable this by adding configuration in application.rb

Something like this,
config.handlebars.templates_root = 'app/templates'
config.handlebars.templates_path_separator = '/'

And an handlebar_initializer.rb

HandlebarsAssets::Config.ember = true if defined? HandlebarsAssets
if defined?(HandlebarsAssets)
  HandlebarsAssets::Config.ember = true
end

So all handlebars are converted into a compiled asset.
You can see them loaded in a hash variable Ember.TEMPLATES when your page loads on browser.

Actually we go to another extent, we have split our modules into smaller units and we scatter our model, view, controller, route and template files into each folder.
It makes my asset compile faster on reload of new code push on production server and in general I can control on the load times by loading assets partially.

Templates also support {{partial}}, {{view}}, {{template}} handlebar helpers to segment a single template into several templates.

I hope my answer is of some use.

"
2013-09-18 01:25:49;HOWTO: Build Reusable Component Libraries for Ember;
2013-09-14 08:37:15;As someone new to Ember, what's the best resource for jumping in?;"Do you know about http://emberwatch.com/ ?

I found some resources there that really helped me starting. I hope it helps.If you're a video learner:  Peepcode tutorial ($10) and the free tutsplus tutorial are both quite good.The official guides are great.  Read them front to back.I am the original author of the Tuts+ course on Ember. Perhaps you'd like to take a look at it? It helped other people I know.

http://freecourses.tutsplus.com/lets-learn-ember/This is a list of my favorite getting started resources.

http://elweb.co/want-to-learn-ember-js-start-here/really digging book 4 here: http://www.noelrappin.com/"
2013-09-23 00:50:37;Crowd Interactive Tech Blog :: Upgrading your old Ember.js application.;Good summary of annoying changes like when you need to use which case conventions.
2013-09-23 00:27:12;Want to Learn Ember.js? Start Here;
2013-09-22 17:53:26;Ember Falling Blocks - an idiomatic Ember 1.0 game written in Ember App Kit;
2013-09-30 12:07:10;A tale of two MVC's by Yehuda Katz;
2013-09-29 06:31:53;Ember Data 1.0 beta 3 released;After upgrading from version 0.13 (was kind of a pain to upgrade.. they changed EVERYTHING) I love all of the changes. I've been using it since release, for the most part. The fact that everything returns promises makes everything SO much better.yeaaaaaaaaaaaaah
2013-10-08 14:17:41;Ember.js Concepts for Rails Developers;
2013-10-08 07:18:34;Some questions for Emberjs pros;"2. AJAX POST requests should be made in the controller, or in the adapter coupled to a Store. You're best to essentially treat the MVC backend as an API, albeit a non-RESTful one. Calls from Ember are usually made as JSON, but you can adapt it on the client or server end (via the adapter or serializers respectively) to XML if you need to.

Ember works well when you think from the UI upwards, and have an idea of your data structure. That's how I try to work (I'm the lead dev for a web agency). The intricacy is in the Views and Controllers. So if you're trying to build towards a 'project' model, with attributes of 'name', 'description' and 'budget', and want a form to create a new one, you'd scaffold (say via the excellent Ember-Tools (https://github.com/rpflorence/ember-tools) like so:

controllers--projects--new.js, edit.js, show.js, index.js
views--projects--new.js, edit.js, show.js, index.js
model--project.js
templates--projects--new.hbs, edit.hbs, show.hbs, index.hbs
app.js

(assuming you're using JavaScript and Handlebars, and not pre-processing with CoffeeScript or Emblem etc.).

App contains the create code for your app and Store, and the router with a single 'projects' resource, with the routes for /new, /show/_:id (the _:id is a dynamic segment that can show one particular model, found by its ID), edit/_:id and /index ('/').

Your project.js model contains the code to set up a model, which communicates with your adapter by extending a packaged model designed to work with that adapter. For instance - not so useful in your case, I'm sorry, but hopefully useful for the concept - the DS.Model is a model designed to be used with the DS.RESTAdapter, which packages data to be communicated with a server endpoint (as a REST API, essentially) as JSON. Models in an Ember app that uses a DS.RESTAdapter usually extend from DS.Model in this way:

App.Model = DS.Model.extend({
//properties here, as property = DS.attr('propertytype'),
});

Your controllers and views are where you can handle complex model manipulation (controllers) and complex UI manipulation (views). Your AJAX call is a complex model manipulation, possibly, so it could happen in the controller. The controller (and hence the View, which can access the controller) automatically inherits the model that is attached to the route, and Ember will attach these based on their name (i.e. project to projectsRoute, projectsController (index), projectsNewController (new), etc. for the other controllers, as well as the views, and the views (via templateName: 'template') their templates.

In the templates, you can use Handlebars helpers to render the inputs:

{{view Ember.Textfield valueBinding='property'}}

will give you a text entry field bound to the controller's 'property' property, which is inherited from the model's property. If you change the property in the textfield, it will change in the controller. When you save the model in the UI - say by pressing the 'submit' button on the form - your view will call 'save' on the controller (by using .send('save') along with the target controller name. The controller will have a function, called 'save', that will call a transaction on the Store, committing its own model over that of the Store's. The Store will accept, the adapters pick up the change and fire to the server endpoint for that kind of change (i.e. a POST request to a controller endpoint on an API for the creation of a new database entry).

In your case, you can omit the adapters, and fire the AJAX call for 'save' from the controller directly. Creation would be something like:

save: function() {
 var controller = this;
 this.$()ajax({
  type: ""POST"",
  url: 'your url endpoint',
  data: //the controller's inherited model
  success: success,
  dataType: dataType
});
//other controller methods

If you'd like to know more, PM me. If I've gotten anything wrong, please excuse me. Else, come hang out on #emberjs on IRC!This is kind of a lot to cover, and probably more than you want to be asking all at once.  First, you should really just read all the guides on the Ember site (http://emberjs.com/guides/).

1) I think the nettuts Ember stuff is outdated.  Ember had its 1.0 release at the beginning of September, and anything before that won't be up to date, especially if it has anything to do with Ember Data.  That said, the guides section titled ""The Object Model"" should answer your questions. http://emberjs.com/guides/object-model/what-do-i-use-when/

2 & 3) The AJAX should probably exist on a ProjectController, and your Project model is too tightly coupled to your UI.  Your createNew method should just take the arguments it needs, and your form's controller can call it with the validated data from its inputs.  

You can create a template for the new program form, and a define a corresponding controller, and just use the render helper to put the form wherever you need it.  Make sure to look at input helpers: http://emberjs.com/guides/templates/input-helpers/

The template should have an action that fires on submit, which the form's controller can handle, where it can run the validation and then pass the data to the ProjectController's createNew method if it passes.

4) I'm not entirely clear on your intention from your description, but it would just be something like:

    {{#each thing in listOfThings}}
         <button {{action 'add' thing}}>Add</button> {{name}}
    {{/each}}

And an 'add' action handler on whatever appropriate controller, or the route."
2013-10-06 17:21:21;Setting up an Ember App with a Rails Backend;This article explains the question that I always had when watching and reading EmberJS tutorials.Author here. Just now saw that this got posted. Let me know if you have any questions. thanks for posting this!
2013-10-16 12:58:44;Using Ember for a voting and vote display mechanism in a Rails app?;"If you want a live experience when other people vote etc... Then you will need a socket connection or sse's as well.

Ember would work well for this, sure you could do it in jquery but a well written ember app would likely be cleaner and easier to extend in the future.

I made a reddit client in ember a while back fooling around and with more work it would be a pretty nice user experience.I would highly recommend going through a couple of Ember tutorials. Be careful with ones you pick, though, as Ember 1.0 just dropped a month or two back, so tutorials/guides prior to that will be slightly different from the current version.

If you are able to build a REST API into your backend, building an Ember frontend should be pretty straightforward, actually. That is, once you've learned ""The Ember Way"". Ember relies very heavily on convention over configuration. That is, if you name things correctly, it will largely ""just work"", and when it does, it works very well. (Note: You can also configure things. It just takes a bit more knowledge and effort)

One thing to keep in mind when learning and working with Ember: If what you're doing seems difficult (in a ""lots of things to juggle/manage"" sort of way), you're probably doing it wrong, or at the very least, not the ""Ember Way"". My 2c: If you want to do this, you should make either the whole app in Ember/Angular or none of the app in Ember/Angular.Honestly, I feel that Ember would be a bit of overkill for that purpose; you could do the ""live, real time feel"" pretty simply in regular javascript/jQuery. The equivalent in Ember would be to create a voting view, but you'd have to implement a whole Ember app just for that one piece of functionality.

At least from my experience, Ember excels as a front-end application, where the back-end focuses on handling ajax requests, database access, and various data manipulations while Ember handles everything user-facing. I would say make your app with Rails + Javascript, or with Ember (with a minimal Rails back-end), but not with both.

Hope that helps!"
2013-10-16 00:28:41;I am trying to get a list of resources to repopulate once I create a new resource. Any thoughts?;
2013-10-12 18:33:58;Ember App Kit: Full featured starting point for building ember front ends;I know what I'll be doing after dinner tonight. 
2013-10-25 19:39:36;SpyGlass -- simple search with Ember (o19s/Spyglass · GitHub);"Oooo!

Looking forward to trying this out!"
2013-10-24 17:40:07;Taming Computed Properties;
2013-10-22 17:46:33;Announcing Firebase Bindings for EmberJS;
2013-10-22 12:40:09;Ember.js 1.1.0 Released;
2013-10-31 17:45:19;Tutorial: Real Time Chat with Laravel 4 and EmberJS;
2013-10-28 21:21:13;Tom Dale talks Ember at the Austin JS/Ember Meetup;Thanks for posting this! I wasn't able to go.Thanks!
2013-11-07 20:37:49;In depth introduction to Ember.js [x-post from javascript];
2013-11-05 19:10:08;Understanding Nesting in Ember.js;"This is a common pattern that should probably be documented better.  I see people struggle with this a lot.>NOTE: If you define a resource using this.resource and do not supply a function, then the implicit resource.index route is not created. In that case, /resource will only use the ResourceRoute, ResourceController, and resource template.

I understand how this works, but can someone explain the reason why the router works this way? I think it would help to understand the logic behind this functionality."
2013-11-12 20:54:48;Ember Components – Build a Star Rating Component;"Awesome thanksHmm doesnt seem like the ideal  solution to me and doesn't really show off the ember power. For one, you are going to end up with duplicate ids in the DOM because:

    {{bind-attr id=""star.index""}}        

Also the event handling seems odd. Why would you have the event handler on the whole component? Wouldn't it make sense to just have it on the individual star items? If you do that you dont have to juggle the jQuery stuff in the click even to figure out which star was clicked, you just pass it in as a parameter:

    <li style=""color: #FFD700;"" {{bind-attr class="":glyphicon star.empty:glyphicon-star-empty:glyphicon-star""}} {{action clickFunc star}}></li>

the click function just becomes:

    clickFunc: function(star){
        this.set('starRating', star.rating);
        this.sendAction('action',this.get('param'), star.rating);
    },

Last thing I would suggest is for something like this to just use valueBinding. Why send an action when all you do is pass an int to the action? The parent controller can then bind the selected rating value to whatever it wants in its controller like so:

    {{star-rating starRating=movie.starRating maxStars=movie.maxStarRating valueBinding=""starRating""}}

so the click func just becomes:

    clickFunc: function(star){
    this.set('value', star.rating);
},"
2013-11-12 03:43:23;Toolkit For Seeding An Ember Project Using Karma, RequireJs, Qunit, and TDD;
2013-11-11 13:33:12;Getting Started with Ember.js Video (Free w/CC Registration);You need a credit card to register.  Use promo code STIEGLITZ-13 for a 14 day free trail.  There are a few other videos that may interest you as well including Angular, Knockout, Bootstrap, etc.
2013-11-10 13:16:23;Manning: Ember.js in Action MEAP;I'm not sure if it is still available, but Manning was giving 50% off with the access code dotd1028cc. The book looks promising either way. Thanks for posting this.  They're having a 50% off sale today for JavaScript books: dotd1125.
2013-11-22 17:05:48;Angular.js vs Ember.js Star Rating Component Comparison;"Me again :-) jk. Second iteration of this looks good.

Only thing that feels a bit dirty is:

    .observes('starRating').on('didInsertElement')    

is the '.on('didInsertElement')' really necessary?

Lastly, what if you made stars a computed property? Just a suggestion but it kind of flexes a bit of the ember muscle.

    stars: function() {
        var stars = [];
        var starRating = this.get('starRating');
        for(var i = 0; i < this.get('maxStars'); i++){
            stars.pushObject(Em.Object.create({empty:i >= starRating, index:i+1}));
        }
        return stars;
    }.property('starRating')

Anyways, good post thanks for sharing."
2013-11-22 10:02:09;ng-embereño: AngularJS from the perspective of an Ember.js core team member;"It's so refreshing to see an unbiased comparison of the two ~~frameworks~~.  Thanks for sharing.Interesting comparison.  I'm less familiar with Ember, and this was informative to read.  There is one thing regarding the uniform access principle I want to point out.  The slideshow seems to suggest that you can't watch a computed property in Angular, because it limits itself to native JavaScript objects.  This is a fair complaint, but I do want to say that essentially this only really applies if you care about IE8.  For basically everyone else, Object.defineProperty should [fit the bill](http://kangax.github.io/es5-compat-table/#Object.defineProperty).

"
2013-11-20 19:40:27;Testing Ember.js applications with Konacha.;After playing with QUnit, this makes my RSpec heart flutter with joy.
2013-11-16 15:13:35;Ember.js NYC, October 2013;
2013-11-28 17:04:04;Ember.js NYC November 2013 - Includes Alex Matchneer's AngularJS from an Ember.js Perspective talk;
2013-11-24 11:38:25;I've started building a single page reddit client in ember. Pretty lean and simple, view page source to check it out.;"Very cool!

Glad to see you using loading substates in 1.2 (which just got released two days ago).

Couldn't you just write `CommentsTreeRoute#model` as 

    var url = ""http://api-dev.redditanalytics.com/comment_tree?id="";
    return Ember.RSVP.resolve($.ajax({
         url: url + params.comment_id
    }));Wow! This is pretty cool! Do you mind me asking what material you used to learn Ember?"
2013-11-23 22:28:53;Building Ember.js Applications for Production;"nice, going to come back and try this. using rakepipeline right now and it terribly slow.I've tried using grunt on three different projects and I guess I'm just not smart enough for it. I always felt like I was spending days trying to get the Gruntfile just right and never being happy with it. One was even pre-written by Yeoman and I still had to mess with it. I guess it's like a really sharp double-edged knife; really powerful in the hands of those who know how to wield it and dangerous for those who don't.

Brunch was like a breathe of fresh air after dealing with Grunt. I'm very happy with my Brunch setups. I was able to put together two awesome skeletons for my own use, and even get productive with a community provided ember skeleton within a day."
2013-12-05 16:14:42;Serialgraphy - Simple app written in Ember.js demonstrating loading state, pagination and filtering contents;
2013-12-09 03:35:14;I'm planning on doing a video series about building an ember app w/ ember-data. Have a look if interested!;"As a newer Ember user, I'm really looking forward to this series. Do you have a release schedule planned?

Also, as a suggestion, a lot of these kinds of tutorials have githubs setup with a branch for each episode (so viewers can follow a long).[Video Playlist](http://www.youtube.com/playlist?list=PLOC8geHGzkjbmN6OywvplZIAY9IfUY_RG)Great idea.  I think I've finally settled on Ember.  I like the 1.0 docs (and the fact that it's at 1.0 - here's looking at you meteor!).

Rails/js background.  Looking forward to it.Subscribed.  Thanks for doing this!can you explain the http://embercrmapi.com url?
Is that something you have setup in your hosts file?Hi David, great initiative. I tried to do the exact same thing as you are, I'm just not having the time to accomplish the task so great job so far!

I want to give you the suggestion of not having so many newlines, the code becomes less readable. Other than that, you're doing great! Keep it up."
2013-12-20 06:42:41;Example to use Mozilla Persona with ember and Django REST Framework;
2013-12-19 05:57:11;I started a library of simple Ember.js components. Just add CSS and customize to your needs. Let me know what you think!;
2013-12-18 20:50:42;EmberJS + Laravel 4 Todo App, just a basic port of the TodoMVC ember implementation using the RESTAdapter;
2013-12-18 06:55:20;My latest Ember.js project is a ccMixter JSON api powered music player, available on github (see comments).;"github repo here: https://github.com/go1dfish/dig.ccMixter


The whole project is static with no server build process and it can even be hosted directly from github pages: http://go1dfish.github.com/dig.ccMixter"
2013-12-17 20:22:39;What's Coming in Ember.js in 2014;some really exciting stuff here. HTMLBars is gonna be sweet.Well, I'm excited.
2013-12-21 10:01:24;AngularJS vs. Ember.js;This seems extremely biased. Angular has more pros than what is listed. That said, I do agree with the cons of Angular. Why is this written like a high school outline?
2014-01-03 10:32:23;Presentations for EmberFest now live;Thanks.
2014-01-07 21:17:37;Ember.js - Ember 1.3.0 and 1.4 Beta Released;
2014-01-06 18:35:54;Ember.js testing with Jasmine;
2014-01-06 18:02:47;EmberConf CFP is up!;
2014-01-05 01:54:17;Examples of new Ember.js query params API;We're replacing the old query params API that had been hanging out on Canary for months because it required a lot of manual stitching and boilerplate for common cases. I'm very happy with how this version turned out, and I'll be writing official docs shortly, but til then have a look see and let us know what you think.
2014-01-16 21:21:06;Full Ember.js course released today on Code School (w/ final 3 levels);"Has anyone here gone through their Ember course? I just did the first level, and it was fine. Just wondering if it's worth signing up (well, worth paying to sign up, that is). 

/edit: Went ahead and dropped the $30/mo. On level 3 so far. Pretty good for those new to Ember, I think. Good pacing, good examples. 

Side note: I tried the Tuts+ ""Hands-On Ember"" intro... terribad. Would *not* recommend. The teacher goes *way* too fast. He types stuff in his screencasts and hits enter before you can even see what he typed. Also, he
has custom git aliases set up, so you can’t follow along with what he’s doing unless you know what he’s doing and just do it yourself the normal way (or with your aliases).

Really, really bad. "
2014-01-15 13:53:24;Get rid of the URL '#' in your Ember.js app without breaking old links.;
2014-01-15 00:49:54;Ember.js - Security Releases - Ember 1.0.1, 1.1.3, 1.2.1, and 1.3.1;Be safe, everybody.
2014-01-11 20:21:14;Need more EmberJS posts over in /r/javascript;"This is just a natural consequence of the comparatively large surface area of Ember and the imposed structure.  It's less beginner friendly than something looser.  I think it's more an issue of people being novices than lack of exposure to Ember materials.

Go back a few months, every other post on /r/javascript was about Backbone.  Over time, people grew to understand that it was an incomplete solution for the day's problems, and it's fallen out of favor, in favor of something more comprehensive.

Personally, I think this will eventually happen with Angular as well, but if it doesn't, then I guess Angular was enough.  

When they've all had their feet shot for the tenth time by inappropriate dependency injection, their appreciation for something like Ember will grow naturally."
2014-01-24 15:01:15;Executing a model method;"Here's an updated one for you:

http://jsfiddle.net/tE28h/

I updated 3 small things:

1. for each route in your router, you can set a model, so I set one for the 'results' route. if you change a route's model, then the controller's 'content' automatically gets set to it.

2. I just changed the template to call 'content.q1' instead of 'q1', because 'content' is whatever model you gave it.

3. I changed the q1, q2, q3 to be 'number' and not 'string', and when setting the variable, I have to run parseInt() to turn whatever's in the form to an integer. In javascript if you add strings,  '1' + '2'  is '12'. Javascript is dumb like that, but if you make sure they're numbers, all the math works normal.

I've been using Ember for a long time and don't worry about the 'ember way' because that gets changed every 2 weeks :) Just make it work, come back to it later, and see if you can revamp things."
2014-01-23 00:22:31;Ember St. Louis - First meetup Feb. 6th!;
2014-01-22 01:29:54;Ember Detroit - 1st Meetup Feb 13th;Northville /= Detroit. 
2014-01-20 11:57:53;Learn Ember.js;
2014-01-18 06:08:04;Performance comparison for Backbone, React, Ember Canary with HTMLBars, and pure JS. By Erik Bryn;
2014-01-29 18:50:02;A Vice video viewer – Code for my first EmberJS app;"I followed the link to check out the implementation, and then spent way too long watching Vice videos.. thanks...?

Looks good!great job!Player looks good.  Commit messages make me want to cry.looks down atm"
2014-01-28 18:16:59;A Guide to Building Your First Ember.js App;
2014-01-26 10:27:13;It's too early to start developing with Emberjs+HTMLBars?;"HTMLBars is going to be backwards compatible; whatever you write today will continue to work once HTMLBars lands.

It's also not going to be in 1.4, but in some later version (it is a _major_ refactor to how things internally work in Ember and there are still some details it iron out); we're hoping to have it on Canary by EmberConf (end of March)."
2014-02-06 11:01:29;EmberFest Call for Speakers is open!;
2014-02-05 07:37:15;Ember.js NYC, January 2014, feat. Ember Run Loop, and Dependency Injection;
2014-02-03 12:53:38;EmberDump #1: animated-if component;"This was great! Very clear, concise, and something actually useful/fun.

Looking forward to seeing more. :)"
2014-02-01 21:45:20;What's the purpose of an javascript mvc framework?;"Well, for one, it can run in the browser...I would say that they have a number of purposes. 

1. Provide a structured way to build Single Page Applications. A single HTML page handles multiple routes, each of which displays a different set of content, where the end user experience is of navigating between multiple pages (MVC frameworks typically refer to these as routing and views)

2. Provide a structured way to think and reason about building an application using Javascript. Models, views, and controllers are a means of doing this, and MVC frameworks like BackboneJs, EmberJs, and AngularJs provide various means to achieve this without having to write a lot of cruft code. Namespace, dependency injection, wrapped objects, (two way) binding, etc.

3. Convention over configuration, and sensible defaults. These aid the speed with which you can get things up and running, as it gives you a common ground to compare or analyse code that you or other developers have written. Also reduces the amount of code that needs to be written. There exists a spectrum here,  from very opinionated like EmberJs to minimal like BackboneJs. 

All in all, if you are writing either a very specialised app that would not benefit from the above, or if you are writing a very simple app, Javascript MVC frameworks would make it easier to get something up and running, and more importantly, easier to maintain in the long run. 
Yehuda Katz does a pretty good job of explaining in depth:

http://www.youtube.com/watch?v=s1dhXamEAKQIt seems to me that this thread got off to the wrong direction.  JavaScript can be used to cut down requests to the server, thus making the app faster and a better user experience.  Rails can add JavaScript functionality, but a front-end MVC gives you a more structured way to do it.  I'm pretty new to this, so I'm sorry my answer's not the best.  Was this what you were asking? how you asked your question kinda implies that you don't really see the difference between frontend and backend.

js frameworks basically give you lots of best-practice stuff out of the box like routing and testing which helps you build faster and less error prone applications. also very helpful when working in a team.I think the fact that some people use the term ""mvc"" in the context of these modern libraries/frameworks (ember, angular, backbone, etc) is misleading you. They are not intended to do anything (outside of view rendering) that rails is meant to do. 

These tools are best described as mv* and that is actually the term I see used most often because there are also the mvvm libraries like knockout.js.

My point is, this is still web so traditional MVC is still what you generally are going to use but across your entire technology stack end to end. The issue is that with modern, rich web apps the view has come to encapsulate more layers than was true in tradional 3-tier apps. These help to organize and stabilize the architecture used to render and maintain in your state. 

In reality, most complex single page web apps have become two separate applications (server and client) that work with one another. You build up your backend as a RESTful service and deal with the complex data processing there (in whatever language you want). Then, on the front end you are creating a javascript application that leverages that backend service. Having the ideas of models, views and whatever else the tools you choose for the js application offers gives you the ability to keep that application more organized and stable in a space where (believe me) this has not always been so easy. The fact that backbone ties into your restful service with basically no work up front is a great testament to that. 

tl:dr neither of these things replace each other and they are intended to be used together. "
2014-02-14 19:13:49;Show r/ember: Phaser. It's Trello for software development, built in Ember.;Let me know what you think!
2014-02-14 01:26:26;EmberDump: Ember.get, POJOs, and magic, or the lack thereof;"Thanks for making these.It should be added: y and everything below it are POJOs in both sides of the example; Ember.Object.create does no excess magic there, in case anyone ever assumed that might be the case."
2014-02-13 10:55:23;Couple of questions: Redirecting if a model is empty and how to handle showing/hiding steps.;"You can use the afterModel hook on your results Route to do any validation on the model and redirect then.

http://emberjs.com/guides/routing/redirection/#toc_after-the-model-is-known

It might be easier to have it all on one route, or have a dedicated controller for collecting answers and handling validation, which you can include where necessary (possibly in your ApplicationController) with needs: http://emberjs.com/guides/controllers/dependencies-between-controllers/

Then in your afterModel hook, you can use this.controllerFor(""answers"").get(""isValid"") or something like that.

If you're trying to do things directly to the DOM outside of a View or Component, you're probably thinking about what you're doing the wrong way.  Without knowing more about your application, it's hard to recommend anything wholeheartedly, but worst case, you can just add a step number to the model of each of your step routes, and just put them into your template with a {{stepNumber}} or something.Surprised nobody has mentioned the redirect hook.

http://emberjs.com/guides/routing/redirection/#toc_after-the-model-is-known

It works the same as the afterModel hook, but semantically it's nice to put your redirect logic here.This submission has been randomly featured in /r/serendipity, a bot-driven subreddit discovery engine. More here: http://www.reddit.com/r/Serendipity/comments/1y7q2x/couple_of_questions_redirecting_if_a_model_is/"
2014-02-12 11:57:46;Wrapping my head around Ember App Kit -differences compared to working with plain Ember;"The naming conventions used are here:
http://iamstef.net/ember-app-kit/guides/naming-conventions.html

If there's anything unclear there, just say so, and I can take a look, try to clear it up and submit a pull request for the docs.

It's pretty much just changed from the DefaultResolver (where you define App.BlahController) to an ES6 one that uses filenames (where you make a file at app/controllers/blah.js and export the object).

You can read about the DefaultResolver here: http://emberjs.com/api/classes/Ember.DefaultResolver.html
"
2014-02-12 10:35:49;Ambitious Ember Applications – Comprehensive Ember.js Tutorial Book (with free sample available);any reviews for this yet?Does the book talk about Ember Data / RESTful API connections for data?
2014-02-17 20:44:43;What kind of apps are good for Emberjs?;"Big, front-end heavy apps.  The example that always comes to mind would be something like [Trello](https://trello.com/).  (*If you're curious what they actually used, [here is great write up](http://blog.fogcreek.com/the-trello-tech-stack/)*)

One of Ember's core strengths is its routing.  URL can easily be provided for all sorts of interactions, so people can share links to parts of a single page app.  This is critical for something like Trello, where simple sharing is critical.

Looking again at Trello, you see a pretty obvious view Hierarchy.  Boards have Lists which in turn have Cards.  Ember promotes the idea of UI nesting so you can easily nest different components into one another and bubble actions up to their containers.  

Trello also happens to be a great example of using multiple data sources to create real time applications.  Using Ember data, you can easily switch between different Adapters and Serializers to populate and update the same objects via different channels.  A Card should be a Card whether it came from a socket, an AJAX request or Local Storage.  

One other big thing that Ember grants you is a strict methodology for development.  Once you've settled on a general pattern for your pieces, it becomes obvious what needs to be done to add another piece.  If your app now needs a ```FooBar``` and ```BooFar``` resource, you'll know you need a ```{controller|view|component|route}``` or any combination depending on what the resource itself needs.  Combined with something like [Ember App Kit](https://github.com/stefanpenner/ember-app-kit) and you'll also now know where it needs to go too (as opposed to ""at the bottom of JQuery spaghetti but before the end of ```$(document).ready()```"").

Ember is a great tool kit for applications of any size, but it's a god send for apps with tons of pieces.   It's biggest strength isn't so much the code behind it in my eyes, but the structure and opinion it imposes on a code base.  > Obviously emberjs is overkill for blogs and newspaper apps

[I wouldn't be so sure.](http://www.bustle.com/)I think emberjs has great potential for single page applications wrapped in a phonegap wrapper. Using a hybrid of local storage via the phonegap APIs and ember-data to sync with the server, you could have an app that runs quickly and works offline. Honestly, I've yet to see a web project where ember.js is not a good choice from an implementation point of view…

The only ones with integration issues I've come across are where the server guys want to do everything (like evaluating the HTML templates), or you're relying on a very lightweight client side (both in download size and execution speed. Nothing beats a plain HTML page with no JavaScript there.). Also, if you have a fixed platform (like on iPad/iPhone), the native interface would be much better than a web interface, no matter what.

I'd say that even for blogs, it would work fine. I'm even using ember.js for the UI of my game at the moment (with [Coherent UI](http://coherent-labs.com/)). The other devs on the team were flabbergasted how fast I could implement all the various views needed for the game once I switched to this setup. The developer that joined my UI team afterwards discovered my terrible secret that all of those complicated UIs I boasted so much about were just a dozen lines of CoffeeScript, CSS and Handlebars :)Ember is useful for apps with REST JSON api's where you either/or create, read, update data (CRUD apps). It's also only useful when speed is not critical (mostly it isn't). It's really heavy and memory intensive. 

TBH I'm not sure it's **such** a good tradeoff compared to things like Backbone or Riot, but it has it's shining parts. "
2014-02-28 13:39:43;Has anyone taken the online tilde.io ember class?;"I've spent the last 4 months learning new javascript frameworks. I looked at backbone,  started building an app in angular, reviewed a plethora of other options via TodoMVC, and ended up falling in love with ember. The one thing I can say is that the ember docs are by far the best. Also, the constructs have seemed  much more natural. I've first hand experienced the beauty of being able to quickly refactor code into base classes or mixins that make sense and work. 

Angular felt  convoluted,  like the result of smart people trying to be too smart. Simple concepts complicated by uncommon terminology and out of the box patterns. IMHO, Ember solves the same problems more simply. 

One big thing to note is that although EmberData is prominently featured in the guides and documentation; you don't have to dig deep to realize that it's not ready for the real applications that Ember aims to enable. If you read detailed questions on Stack Overflow or the issues raised on github.. you will quickly realize the recommendation is not to use it yet. It's a super ambitious client side ORM that is awesome; but at this point simple Ember Objects extended by your own Api class make the most practical sense.

I would say.. you will learn the most from trying to build something. Ember App Kit is an awesome place to start; of course still not perfect.

Edit: just checked the tilde.io site and $1800 may not be a lot for what they offer.. but I'd most certainly try to learn everything you can first; unless you have the cash to spare. I'd wager... you'd opt not to take the course. Don't know much but the course itself, but the guys from Tilde are the creators of Ember, so if you're going to learn ember from anyone it probably ought to be them. "
2014-02-27 09:44:29;JWT based authentication with Ember.js and Rails;
2014-02-25 14:43:20;Know your routes in Ember.js;Even better than adding it to `beforeModel`, Routes actually have a `redirect` method that can be used instead. 
2014-02-23 16:56:54;Blanks being added to model data;"Ok, just following this up since I've sorta kinda fixed it.

    this.resource('client', { path: 'clients/:client_hash' }, function(){

This line did more than I thought. I thought it was more of a defining placeholder, like in Laravel. 

    Route::get('user/{id}', function($id)

The name used, whether it's {id} or {hash} or {poopypants} doesn't matter because it's being defined and used at that time.

I changed it to this:

    this.resource('client', { path: 'clients/:client_id' }, function(){

That lets the default link-to helpers work, rather than simply getting ""undefined"" like they were for everything else I tried.

With this done I was able to refactor the loop code slight, fixing the helper.

    {{#each item in model}}
      <tr>
        <td>{{#link-to 'client' item}}{{item.name}}{{/link-to}}</td>

This could also be refactored down more.

    {{#each}}
    <tr>
        <td>{{#link-to 'client' this}}{{name}}{{/link-to}}</td>

Note that `{{#link-to 'client' this}}` works, while `{{#link-to 'client' this.id}}` mostly works, but gets the bug stated in the OP. A bug that I believe has taken me three DAYS to fix."
2014-02-22 13:53:01;EmberDump: router transition error substates get the error as the model :);
2014-03-07 07:02:01;Can anyone help explain me through creating an app with this framework? I'm about ready to give up on it, but I heard it's an amazing framwork so I would rather get help.;"https://www.youtube.com/watch?v=1QHrlFlaXdIEmber is great but can be a real pain to learn at first. I mostly learned it with content found at http://emberwatch.com and searching stack overflow.Honestly I don't think that Ember is the right choice for this project. IMO it just sounds like overkill.

Ember is designed for large projects that connect to an API of some kind. Usually you have lots of data coming in and need to update your views dynamically. 

A blog is just pulling your data and displaying to the user. There isn't a whole lot of user interaction. Which is Embers strong suit.

I would suggest using something like Jekyll with GitHub pages, sorry for the lack of links I'm on my phone.

If you want to learn Ember my suggestion Google a code school free 2 day trial and run through the Getting Fired up with Ember course. It's pretty good.

Sorry for the wall of text

tl;dr Ember is not worth the effort for a blog."
2014-03-06 22:52:39;Combining EmberJs with another framework - yay or nay?;"Anything the manages the DOM e.g. isotope.js will be difficult.

I would think the answer is ""it depends"""
2014-03-04 04:28:31;A little app I hacked together to teach myself Ember.js...;"I coded this app last week to learn the basics of Ember.js. I've been a Rails engineer for about 2.5 years, and found myself writing more and more frontend / JavaScript code recently. 

I've written an app (for my employer) in Backbone.js before but found it quite lacking in some areas (data binding!). Ember.js seems like a more mature framework that's actually trying to give you the tools to build an entire app, and doesn't leave you stuck somewhere halfway.

Anyways, I'd love to hear your thoughts/feedback/constructive criticism.Great idea, loved the implementation :) Will look at the source code to learn more about ember as well!Awesome work. You've inspired me to do the same for the last.fm api."
2014-03-03 06:32:24;Please please please won't someone help me? (Eak);"Ember App Kit uses ES6 modules which get transpiled to the ADM specification. The process isolates your code during development into many files, but ""compiles""  to just a few for production. Most of the work is done by Grunt. You don't work with global variables like App that you see in most simple Ember examples. 

You export modules and import modules as needed using import and export statements. You build and launch a server with Grunt commands; such as 'grunt server'.

There are some good tutorials [out]( http://embersherpa.com/articles/introduction-to-ember-app-kit/) [there]( http://blog.safaribooksonline.com/2013/09/18/ember-app-kit/) . 

Edit: Make sure you have an up to date clone of the Ember App Kit; it has a lot of the initial structure and files in place. You can launch it into a server as soon as you run 'npm install' (to get all the dependencies listed in the package.json) and 'grunt server'. Lots of different layers of technology in EAK, but it's a good stack with a lot of good choices.Sent you a DM"
2014-03-02 22:05:19;EmberDumps;
2014-03-13 02:06:01;How do you handle page reloads, and restoring user sessions and information?;Loading session state before rendering sounds like a job for initializers, http://emberjs.com/api/classes/Ember.Application.html. Call deferReadiness, do your Ajax call, call advanceReadiness in the Ajax callback.
2014-03-12 18:43:29;Ember.js discussion with Taras Mankovski;
2014-03-12 04:14:49;Ember.js NYC, February 2014, feat. Controller vs. ObjectController (Cory Forsyth), Building Vine.co (Janessa Det), HTMLBars (Erik Bryn);
2014-03-11 00:23:12;New to EmberJS, need help with my #link-to handlebars helper.;"Change the class=""navbar-brand"" in your new link-to helper to classNames=""navbar-brand"" and it should work fine."
2014-03-19 00:01:12;ELI5: Ember Data;"Alright, lets see what I can do...

At your playground, you and your friends only communicate through notes.  Today, you want to go find out how your friend Bob is doing.

The first thing you've got to do is find Bob.  You use your ```BobAdapter``` to know that your going to need to bring him a worm if you want to know what he's up to, and he's probably going to hang around near the twisty slide.  So you get your worm, head to the twisty slide and sure enough, Bob hand you a note.  

Bob can be a weird dude.  He likes to write his notes using his trusty decoder ring.  Non-sense to stupid grown ups, but not you.  You've got your trusty ```BobSerializer``` so you know whats what.  You decode every last word of the message and read the message.  But that's not the end to Bob's note writing quirks.

Bob doesn't refer to his friends by their real names so the section about his current buddies doesn't make any sense.  You and Bob go way back so you know, because you've got a ```FriendDecoder``` in your ```BobSerializer```, you know that 'Jim' is really Dave, 'Craig' is really Dennis and 'Other Bob' is actually Robby.  There is an exception though.  

Bob is a one girlfriend kind of guy.  When he talks about his lady, he uses her name backwards (You checked the ```GirlfriendDecoder``` to make sure).  Uh oh, Bob is dating 'Ytak'.  You think Katy is gross...

You've gotta help him out, but how are you going to get him to dump Katy.  You check your ```BobAdapter``` under ```DumpIckyGirl``` and know that you're going to need to bring him a dandelion covered in worms.  Know that you know how, you have to figure out how you're going to need to phrase this is YOUR note.  The ```BobSerializer``` encodes your message, but you've got to be careful how you phrase this, or Bob might get mad.  You check the ```GirlfriendEncoder``` this time to find out that you have to call her by her Pig Latin name, only Bob can call her 'Ytak'.  So you write your note, asking Bob to break up with 'Atykay', and deliver it, with the dandelion covered in worms, to the twisty slide.  

He stomps on the flower.  Uh oh.  But wait.  You check the ```BobAdapter``` and find out that this means he agrees.  He tosses you down a note and, sure enough, he's no longer dating 'Ytak'.  

I take the '5' part very seriously in ELI5, but hopefully that made some iota of sense.  [Adapters](http://emberjs.com/api/data/classes/DS.RESTAdapter.html) and [Serializers](http://emberjs.com/api/data/classes/DS.RESTSerializer.html) are the core of ED, if you understand them, you'll do well.  They can be specifically tailored to each data model and can hit any form of storage (REST, WebSockets, IndexDB) as long as you specify how in your adapter.  They can also return and receive any data they want, as long as you specify how in your serializer (but this isn't an excuse to write a shitty API).  

One new thing from ED 1.0 is promises everywhere.  When you asked for a note from Bob, you go off and play on the swing while he wrote it.  He'd come find you when he was done.  If you wanted to know more about his friends you could either tell him not to worry about it and go ask Frank yourself (Frank knows everybody) or you could tell Bob to make sure he gets the info from Frank before he gives you the note.  The problem is, maybe Bob got lazy and didn't check with Frank.  You didn't think you were going to have to check with Frank so you moved all the way to the other side of the playground to read the note.  That's annoying...

Now, you don't have to bother specifying who talks to Frank.  Your ```FrankAdapter``` handles that for you.  If Bob includes Franks data in the note, when Frank sees you coming to him for the data, he gives you the thumbs up from afar so you know you don't have to go talk to him directly.  If it's not there, well you were already on your way there.  It provides much needed consistency in the regard.  

And there you have it.  Corrections or improvements welcome.  I didn't bother including equivalent entry points for things like ```FriendDecoder``` because then I'd have to explain CRUD operations and relational data models to a five year old too.  The API is your friend, learn your entry points.  Ember data is the difference in bringing notes to class and calling your friend at home who has the notes you forgot. Have you read the readme?

https://github.com/emberjs/data"
2014-03-18 19:08:47;The Road to Ember Data 1.0;
2014-03-18 14:38:11;Getting Comfortable With Ember.js;"At my job I do Ember. I've worked with Angular, Meteor and Backbone before, and know them all. Also did Rails, that is supposed to be a lot like ember in mindset. 

Have to say **fuck***all*, these things about ember drive me mad. I'm spending so much time figuring out how to do things with embers massive api, or finding paths around it, that I'm late on almost every task. Yet I do almost no programming. "
2014-03-18 02:51:42;"All resource links getting ""active"" class";"[I made a working jsbin.](http://jsbin.com/hixeqaqa/1/edit)

The code you posted did not run. Take a look at that instead, and you can see it works correctly.I've found the problem... sort of.

**Completely fine:**

    App.Router.map(function() {
        this.resource('projects', function(){
            this.resource('project', { path: ':project_id' });
        });
    });

**Broken and shit:**

    App.Router.map(function() {
        this.resource('projects', function(){
            this.resource('project', { path: ':project_id' }, function(){
                this.route('edit');
            });
        });
    });

I'd love to know *why* it's being a jerk like this. Any thoughts?

I seem to have a knack for finding strange behaviours in Ember."
2014-03-18 00:58:48;Ember.js Tutorial, Part 2;
2014-03-28 13:16:28;I am writing a new book Ember.js for Java Developers;I don't mean to seem negative, but is this even necessary? One of the best things about this sort of technology is that it doesn't matter at all what the back end is. It could be PHP with one of a dozen frameworks, Ruby, Java, or .NET, and it should all work the same. A front-end JS framework should be back-end agnostic. Surely so should the book?
2014-03-27 22:28:15;Ember Conf picks up where the Rails community left off;
2014-03-25 10:01:09;Ember js - An Application Framework For The Future;
2014-03-24 14:26:11;"Going to EmberConf 2014 in Portland; mirrored conference site for mobile";
2014-03-22 10:20:18;Original Canvas JavaScript Painting at 33% off;
2014-04-04 13:21:14;A really nice Ember Run Loop overview talk;"where was this a couple of days ago when I had an issue related to the run loop and I spent all afternoon deciphering what was going wrong ><

really nice talk, thanks for the share"
2014-04-03 07:51:38;Erik Bryn: Intro To Ember @ LinkedIn;
2014-04-02 17:29:28;Time to get your Ember Fest Early Bird Ticket!;
2014-04-01 15:34:37;A Hacky Ember Oauth implementation for Rails 4;"I've never used oauth before.  Am I missing something or why is there a call to Profile when there isn't even a Profile model in the app?

in model/user.rb

    profile = Profile.create! user_id: user.id

Also, after setting up a twitter app and getting the callback working, I'm getting 
   
    undefined local variable or method `current_user' for #<SessionsController:0x0000000275d3a0>

Where are you defining current_user?"
2014-03-31 23:20:04;"Ember.js NYC, March 2014 (How to Learn Ember; Sorting with Array Controllers; EmberConf Recap)";
2014-04-11 11:31:19;Emberconf 2014 videos have started being posted;Oh, goody.  I missed a couple of the talks I had wanted to see due to con plague.
2014-04-09 21:11:00;Help me plan a kiosk system with Ember?;Hey, are you still planning this?
2014-04-07 10:25:22;Anyone did some work with the bootstrap components lib?;"why not just use vanilla bootstrap and just use query params to switch between tabs?

Here is is a plain example taken straight from the ember.js website: http://emberjs.jsbin.com/ucanam/4081#/"
2014-04-18 20:21:24;Ember.js WYSIWYG Component with Summernote;Very Good Lil Furball!!!
2014-04-23 16:28:21;Ember Fest: Regular tickets on sale!;
2014-04-22 12:01:50;CodeSchool HALL pass (There's an ember.js course there);"The Ember course is very well done too. Also recommend the Rails For Zombies courses too.Really minor point, but it's ""Code School"". I know it's a weird thing for an Internet service but we actually do our best not to butcher grammar. :-)Is there an expiry date on this 48-hour pass? I would like to wait till tomorrow evening before activating it."
2014-05-02 19:47:14;A component that renders PSDs, docx, pptx more using FilePreviews.io;
2014-05-01 21:51:31;Comparing Ember and Angular;
2014-04-30 16:33:55;Easiest way to load a read only external json feed;"You're going to want to an AJAX call such as $.getJSON. For example:

    App.PostsRoute = Ember.Route.extend({
        model: function() {
            return Ember.$.getJSON('the/external.file');
        }
    });

You can find more information in [the Ember guides](http://emberjs.com/guides/routing/specifying-a-routes-model/#toc_asynchronously-loading-models)."
2014-05-09 22:11:29;HTML5 Build Tool - Nice, easy, fast alternative to Grunt for EberJS and more.;
2014-05-09 15:51:16;EmberUI Alpha Release;This looks very promising. You've nailed most important UI components. Super exited , let me know how I can help.very nice - i love the modern clean look, and the fact that it doesn't look like bootstrap.  It's unique.
2014-05-08 17:59:11;Add the current Route name to the body tag for CSS or testautomation;
2014-05-08 04:01:42;Ember.js NYC, April 2014 (Debugging Techniques & Lightning Talks);
2014-05-07 18:04:54;Introducing Full Stack JS Amber – A boilerplate with Ember on the client and a Node Server API;"The name should be changed since Amber is already a JS thing
http://en.wikipedia.org/wiki/Amber_Smalltalk and Ember itself used to be called Amber. I suggest 'september', 's' for serverside, ember."
2014-05-15 18:55:16;Good Ember Twitter accounts to follow?;"can't believe no one has said @wycats - Yehuda Katz (Tilde) and @tomdale - Tom Dale (Tilde), the ember baby-daddies

Also:

@wifelette - Leah Silber (Tilde, core dev)
@machty - Alex Matchneer (Query params / funny conf video guy, core dev) and 
@wagenet - Peter Wagenet (Tilde, core dev)I'll add @ebryn (Ember.js core team and head of HTMLBars) and @trek who is also a core member@rwjblue - He's been kicking so much butt in the Ember world.

@twokul - On the Ember Release Team and doing a lot of ember-cli work

@bcardarella - CEO of DockYard, an Ember consultancy.

@dockyard - Great Ember consultancy in Boston ;) . We hold a lot of meetups and are organizing Boston's first Ember Conference"
2014-05-15 18:47:38;Ember.js Recipes: On-Demand Record Details with Ember-Data;
2014-05-14 02:31:24;ember-cli + Rails;
2014-05-13 03:35:07;The Unofficial, Official Ember Testing Guide;I found that the almost constant cuts to a joke detracted from the talk.
2014-05-12 15:45:54;Ember Functions, Computed Properties, Observers and More;Stopped watching at coffeescript
2014-05-22 07:43:02;Ember.js Recipes: Checkboxable Index Pages Using itemController;Is there a topic people would like to see me cover? Comments, suggestions? 
2014-05-21 14:33:20;Deploying Ember-cli and Rails to Heroku;
2014-05-19 08:19:03;Emberfire Embedded Relationships;
2014-05-28 03:58:58;Writing a Navigation Bar Controller in Ember.js;How is this different from the active state you get for free when using the link-to helper?
2014-06-06 03:54:17;Some beginner help round 2: Ember-Data Models and Fixtures;"ok I figured out what was causing the error.

the id field is taken care of automatically, you can't define it in your Model

    App.Colors = DS.Model.extend({
        id: DS.attr(),
        color: DS.attr('string')
    });

changed to this:

    App.Colors = DS.Model.extend({
        color: DS.attr('string')
    });

and now it works"
2014-06-05 22:03:43;Some beginner help: now getting data when starting two resources deep on router;"When you use the {{link-to}} helper, you're passing an object to be the model for the route, so you're bypassing the model hook in the MailRoute.

When you go directly, it's calling the MailRoute model hook, and findBy doesn't work, because params.message_id is a string, and your ids are integers.

http://emberjs.jsbin.com/zijoc/3/edit

You can look at the console output to see the string.  This has a parseInt to fix it, but consider using a canned data layer like Ember Data or something."
2014-06-05 06:33:28;Anyone using ember-cli know how to use Stylus modules (like Jeet.gs)?;Figured it out! Installed jeet (and nib) via npm, then just @import'ed the .styl files by relative path ('../../node_modules/jeet/stylus/jeet/index.styl'). Problem solved. :)
2014-06-04 16:57:07;111 JSJ The Ember.js Project with Erik Bryn;"A lot of this isn't news if you follow Ember, but there's some nice news about the plans for Ember CLI around 44 minutes in.  And of course, if you're not up to date on Ember CLI, it's an okay primer.

edit: Also a bunch of talk about HTMLBars.This was a great episode."
2014-06-04 06:02:40;Can someone explain the benefit of using the ES6 transpired in ember-cli?;"The ES6 transpiler just let's you borrow the new syntax for some features of ES6 before it's official (and 100% locked down in the spec). Ember App Kit uses it for modules, making dependency management easier. The link you provided had some good info on it,  but I didn't see anything about using an ES6 transpiler. 

Side note: try/catch doesn't really work for asynchronous code. Promises are a good way to manage asynchronicity and catching errors."
2014-06-12 15:13:34;Shared Terminology Yet Different Concepts Between Ember.js and Rails;Been working with rails for a while and just started learning Ember, and was looking for exactly this. Nice!
2014-06-12 13:54:53;I wrote a fairly thorough Ember Tutorial;"From a quick cursory glance, I can tell that this is probably a pretty decent tutorial and I by no means want to diminish that, but people really need to start hopping on the [Ember CLI](https://github.com/stefanpenner/ember-cli) bus and leave the rails crap out of the build process.  There is literally no reason for Ruby to have any part in a JavaScript application when Node equivalents are more powerful and portable.  Ember CLI makes it insanely easy use Ember the way it's meant to be used.

Globals need to go too.  [ES6 Modules](https://github.com/square/es6-module-transpiler) aren't the future anymore.  There isn't an excuse to chuck everything into the global ```App``` namespace now that the tooling has made it so simple to modularize.  

My apologies if you mentioned any of these things in the tutorial and I missed them.  The Ember world is quickly moving away from the Rails asset pipeline and it's important to keep up.

P.S.  The CoffeeScript/JavaScript toggle is awesome and so is the rest of the format of the tutorial.  A+ from me there.Crossposted this to /r/javascript, looks absolutely perfect> However, I know that there are many people don’t know or like CoffeeScript, so I went ahead and made a Javascript version too. Just use the toggle in the upper right of the page to switch languages.

Man, thank you, thank you, thank you for this!Fantastic! Going through this today/this weekend."
2014-06-12 03:44:19;EmberConf 2014 Ember & SOA;
2014-06-11 07:51:29;"Ember Fest - 15% off for all redditors with coupon ""reddit_15""!";
2014-06-11 07:45:31;The Ember Fest Schedule is out!;
2014-06-20 21:42:07;ember-orbit-todos;What's the deal with orbit vs ember-data? As an ember noob, which would be better to learn first ?
2014-06-19 03:20:17;Bring Fun Back to JS: Step-by-Step Refactoring Toward Ember - RailsConf;
2014-06-18 18:19:25;Introductory Guide to Ember Data's Key Constructs and Paradigms;
2014-06-18 13:47:03;Authentication for Single Page Apps.;
2014-06-16 20:53:59;How do you organize your code?;"I use ember-cli, that is one of the many problems it solves.
https://github.com/stefanpenner/ember-cliI personally favor keeping the related files together - whatever_route, whatever_model, whatever_controller, whatever_view, whatever_template and whatever_test in a whatever folder. Having all controllers in the same folders etc. gets confusing really fast as the app grows in size.[deleted]"
2014-06-27 16:12:00;Writing your own computed macros in Ember.js;
2014-06-25 18:22:02;Please critique my post for noobs by a noob on emberjs, thanks!;Please overlook my terrible layout.  I'll be fixing that later.  Also, I'm just noticing I changed the default color for links so they are almost impossible to distinguish from regular text in the post, sorry about that I'm serving through a CDN (amazon cloudfront) or I would just change it immediately.  Might be by the end of today before the fixes propagate.
2014-06-25 13:40:53;Introducing Ember CLI Addons;
2014-06-23 21:19:46;What App.reset() does in Ember;I would love some feedback from the person who down-voted, would love to know what I could do better next time?
2014-06-23 19:45:50;Building Ember CLI Addons Simply;
2014-07-02 09:33:14;Setting up the Grunt Watch Plugin;
2014-07-01 10:43:41;Ember Fest tickets: final call!;365 Euros ? teh fuck ? How much were the early bird tickets ?
2014-07-01 09:19:11;How to set/get/update an item in nested model?;
2014-07-01 03:38:27;Ember.js NYC, June 2014 (Ember Mixins, Authentication with Torii, Self Defining Apps);
2014-06-30 15:44:18;Setting up a new Ember.js application;
2014-07-11 13:37:07;Do you know any A/B testing framework on EmberJS ?;"Check out this video, he mentions a way to do A/B testing which is pretty innovative https://www.youtube.com/watch?v=QZVYP3cPcWQThere's a a few ways to do it but a lot depends on your stack and what you're using for tracking. 

If you can share a bit more about your setup and analytics then I'd be happy to offer suggestions. 

We run split tests throughout our site on a constant basis so I have a lot of experience with this. "
2014-07-10 20:23:59;Ember.JS + Rails Books;"https://leanpub.com/emberonrails
Use ember-cli and railsI don't think there are any books yet, but:

http://reefpoints.dockyard.com/2014/05/07/building-an-ember-app-with-rails-part-1.html

http://ember.vicramon.com/I write about it on my blog  http://blog.abuiles.com/ember-js-with-ruby-on-rails/

If there is something you would like to see let me know :)"
2014-07-08 22:21:39;Lightning Fast Deployments With Rails (in the Wild).;
2014-07-08 20:33:18;Ember, Part 1: Why I use Ember and you should too;
2014-07-08 18:36:16;Simple Collection's sorting and filtering with Ember.js;
2014-07-18 16:00:43;Centering on the User in Ember.js;
2014-07-18 13:38:51;Potential Indianapolis Meetup;
2014-07-17 14:16:27;Ember Developers in Kansas City?;"I'm in St. Louis along with a couple others, if that's helpful.I'm in KC and use ember.  My small tech company redid their front-end platform in it.  My plate is full right now as far as projects go, but I could probably answer a question or two.

Are you starting a new project and using ember, or working from a pre existing codebase.  It sounds like the former, but I just want to make sure."
2014-07-16 16:53:30;TheScene.com - We just launched a video site with thousands of videos built with ember.js!;"Great site!Thanks for sharing! 

I have a couple of questions—

What did you use as a data adapter? 

and - it looks like you have noscript tags that can display the content if there is no javascript—are these automatically generated?

Thanks!"
2014-07-25 22:56:17;question - this is driving me nuts!!!;"You just need somewhere in your template to render the data into. When you get the data back, just set that rendered value on your controller: http://emberjs.jsbin.com/mayezeze/3/edit

And here's a version that updates as the user types:

http://emberjs.jsbin.com/mayezeze/4/editthis.set('content', data);"
2014-07-25 21:07:42;New Ember training site looking for content writers and students;How much does it cost? Is it free? Are there benefits for content writers? etc. I don't want to register just to find this answers.
2014-07-25 15:24:54;Rails + Ember.js (with the Ember CLI) - A Full Tutorial;
2014-07-25 14:14:15;ember-cli.com;"Last night, i was confused because the styling on the old iamstef.net/ember-cli/ site was broken, with 404ing assets.  It redirects to this now.

If you weren't aware of this project, now you are.  And it's much less painful to upgrade versions, if your expectations were set with Ember App Kit.I'm using and liking ember-cli, but I have two gripes - no npm support and the fact that everything is rebuilt on a change, like styles when a js file is saved. I may go back to gulp and browserify because they excel at these two things."
2014-07-25 13:08:39;Built With Ember - A list of ambitious web applications using Ember.js;What happened to your Twitter account? @builtwithember is suspended.
2014-07-31 16:41:13;What the hell is Ember.K?;I'm still not sure why I would use Ember.K? Can you give another example?
2014-07-30 17:49:55;Unbound Each Helper;"This will remove the metamorphs around each item and you're left with the one metamorph around the `ul`

http://jsfiddle.net/NQKvy/1223/Use htmlbars? Out of curiosity why do you need such a solution This might help: https://github.com/emberjs/group-helper"
2014-07-28 18:20:17;AngularJS vs EmberJS - A Collation Of All The Resources;"a very solid list of reasons to choose ember over angular, i agree with it all, ember is better thought out and better madeThis is a very balanced and well put together list.  Much appreciated.

One minor correction, Ember App Kit is deprecated and has been replaced by [ember-cli](https://github.com/stefanpenner/ember-cli).  There are a few wrinkles left to iron out, but it's ready to replace EAK in apps that didn't add too much customization to the EAK boilerplate.  

Side question, where is Github using Ember?  I hadn't heard of that until this.Is it bad that I like Ember because I'm so sick of hearing about Angular?A very nice comparison. I love Ember. Angular quickly started to become messy when I tried using it "
2014-08-07 14:48:20;Handling environment data with Ember.js;"I'm not I'm love with the meta tag use. having to query the DOM over and over seems like a waste. we are actually in the process of moving off meta tags to a script tag. we'll name space it as to not just fill the global space with variables. we will end up with a global ""config"" variable."
2014-08-04 05:30:37;Ember CLI with Firebase Tutorial;This is my first tutorial on Ember CLI, comments are welcome. 
2014-08-15 23:20:12;Looks like Tilde dropped the price of their online Ember training pretty significantly;Wow, thanks for posting, good to know :DWould love to know how up-to-date this is and if it will be updated as Ember evolves.[deleted]
2014-08-15 14:50:02;Example Rails app using Ancestry/Self-Join Relationships in Ember;
2014-08-14 16:55:35;Ember Application Initializers;Would this be the correct way to handle initializing dynamic data that's fairly permanent throughout your app?  For example, I have a Rails CMS that I've built that I'm working on porting to Ember.  Part of it is that the user can set the title for the site in a settings area, and then that title displays in the header everywhere on the site.  Would an initializer be a good place to load up the Settings object that manages the site title?
2014-08-11 15:17:46;Ember Weekly #69;If you liked ember-rocks please take a look at [generator-emberfs](http://bit.ly/1r6rULc). It's a yeoman generator for ember/requirejs/gulp. It has all the ember-cli features and full testing support for ember!
2014-08-09 00:36:58;Issue with ember-data and embedded records;"Is discourse down?

Recently I've asked (and answered) a similar question http://stackoverflow.com/questions/25233259/ember-data-restadapter-embedded-hasmany. The difference seems to be you don't delete the embedded stuff with `delete` I suppose."
2014-08-22 18:29:06;Building a juicy progress bar component in Ember;it looks great, thank you for sharing
2014-08-22 06:29:55;I created an app to learn Ember: A movie/TV rating aggregator that tells you whether or not you should watch something.;"- Ember-CLI takes some time to get used to, but it looks like you're following it's best practices pretty well.

- I like to put stuff like that in a ```utils``` folder.  Put the logic in ```utils/movie-parser.js``` and then just import it from there (```import MyParser from '../utils/movie-parser.js```).  

- It never is :P

- That burned me hard too.  Took me way to long to figure that out.

- [This diagram](http://www.smashingmagazine.com/wp-content/uploads/2013/09/ember-sketch.png) helped me out if you haven't seen it.  Fat controller still feel wrong to me but it's actually what you should aim for in Ember.

- [CSS](http://getbootstrap.com/) for people who hate CSS.

Other than that, I would advise using components and mixins.  They are definitely two of the more advanced features of Ember, but they are also two of the most powerful.Very cool! Have any problems deploying it? Who's hosting it?I think it's broken, it told me I should definitely watch The Big Bang Theory ;)Your imdb api-key is still in there, you might want to remove that"
2014-08-21 16:08:39;How to increase your chances of getting help on #emberjs;"Thanks for writing this up.

I'm Dafe in Ember IRC, and try to volunteer help more than is really good for my own productivity, and I'm constantly telling people to try to isolate the issue in a JSBin to make it easier for people to help them.  Glad you talked about this.  The bonus is that they get these isolated case artifacts that they can refer to whenever they're trying to do a specific thing (Register an account and you get to save them).  Like a personal cookbook.

It's also a litmus test for me.  If the person asking for help is unwilling to take this step making the bin, or read linked-to docs, then I don't think it's worth my time to help out.  Reading docs and isolating issues in bins is learning to fish.  Without that, you're just trying to get people to do your work for you.

I'll add also, I'm much more likely to help if you describe your problem with a concrete use case, like doing something with Posts and Comments, instead of with foo bar baz.  Talking about a concrete use case is much more likely to avoid an [XY problem](http://www.perlmonks.org/?node=XY+Problem), which saves everyone time.First thanks for the writeup.

I haven't had much luck with #emberjs. Although to be fair I only tried once.  Here was my experience. 

I got into the chat room and asked if anyone had experience with Ember register and injection. No answer. Then about 5 minutes later another guy came in and asked a question on Ember routes and he also received no answer. So I asked again and he asked again and still no answer in the chatroom.

Around 5 to 10 minutes later a third person joined and asked a question on Ember data. Three or four people chimed in and helped him while everyone ignored me and the other guy. I gave up about a half hour later.

I guess I should have created a JS Bin and asked a more specific question. Maybe I'll try that in the future. "
2014-08-21 13:20:08;Screencast: Debugging an Ember.js Application;
2014-08-19 05:52:19;Create an Application With Ember CLI and Firebase Simple Login;I had a few people asking about Simple Login so here is a quick tutorial on it. 
2014-08-29 11:06:25;React vs. Ember - EmberNYC meetup;Any chance of a video? :)Anyone know if there are docs/vids for 'the only intelligent comparison of Ember and Angular' referenced in the first couple of slides?
2014-08-28 20:56:53;Headless testing of Ember apps with Gulp and Jasmine;"Recently I wrote a yeoman generator for ember apps [generator-emberfs](https://github.com/eguneys/generator-emberfs), when it came to test runners, my first choice was Karma, no matter how i tried, i couldn't get it working with ember, i switched to testem. I will check out your link on Torran Billups tutorials, I researched a lot on that, wonder why i haven't seen those before.Here is a simple karma setup using ember (ES6 / gulp / qunit)

https://github.com/toranb/ember-gulp-example

(sorry for the duplicate post- trying to share a non ember-cli example for people looking)"
2014-08-28 17:26:01;The Confusion Around Ember Views and Components;"I asked tom dale this exact question last October.

http://vimeo.com/77760308  

10:50 mark.

I don't see much use for views. I think your post is missing some concrete examples.

I think a component gives you everything a view has and more. "
2014-08-28 13:46:44;Ember.js: Writing Google Maps Component - Part2;"This is really timely for me as I'm working on one of these, thanks!

Quick question for you, I want my map to be 100% tall and 100% wide (ie full screen) but because it's nested in a template it's not exactly easy to target the ember view divs and set them to 100%/100% as well, so it ends up being 0px high.  How would you go about appending the component directly to the body or to the first ember view?  Just straight up DOM manipulation on the didInsertElement event?"
2014-08-28 05:30:39;Announcing Ember Sketch;
2014-09-04 17:31:52;Using SailsJS generators with ember-cli based frontend;
2014-09-04 16:27:05;A Graceful Image Loading Component;
2014-09-01 22:42:09;I'm writing a book about Ember.js with ember-cli.;"Looking forward to seeing how this progresses :-)

Update: Just bought itWhen do you think you will be done writing it?What type of content should we be expecting? Seems interesting.Awesome!. Are you going to be updating it with every new version of Ember CLI? Or just major revisions?Please do something with many-to-many relationships. I'm still in angular-land, but very curious about ember and this was one of the biggest challenges for me when hooking up rails.

Are you aiming to make this accessible for folks with a limited understanding of Ember, or is it focused more on just emberCLI?

Re: Rails backend, are you doing rails as a standalone API or embedding ember in Rails' views?Looks really good!  Looking forward to reading it! (Bought it~!)whom do you give out for free?"
2014-08-31 13:23:03;ember-cli Anatomy;
2014-09-11 20:51:16;The Old and the New: SOAP and Ember.js;
2014-09-11 17:54:34;Beginning to understand the Ember.js Container;
2014-09-11 08:21:17;Presentation: Jo Liss presents the Broccoli Build tool at Ember Fest;Thanks!Don't forget about Reddits rules about linking to your own content.
2014-09-11 05:40:22;Presentation: Ember Fest 2014 Keynote w/Erik Bryn;
2014-09-09 04:20:43;Ember and Firebase Security;This post is on using Ember with Firebase Security. In addition I go over some updates to a previous post. 
2014-09-18 17:52:30;Routless Ember.js Controllers;
2014-09-17 10:27:01;New Lynda.com ember course for beginners;"I asked lynda customer support a month ago about a possible ember course. Guess they churned this out pretty quickly, or they lied to me.  

""
cs@lynda.com
Aug 8

to me 
Hello,

Thank you for contacting lynda.com.

We really appreciate hearing from you regarding ideas for educational material you would like to see added to the lynda.com library. Currently, we do not have Ember.js training in production. However, we keep every request on file, and your request has been forwarded to our Title Development team for consideration. 

Stay tuned to lynda.com for new releases, or keep tabs on us through the blog, our Facebook fan page, or Twitter.

Please let us know if we may be of further assistance.

Best regards,
Markus
lynda.com
Customer Service Team
888-335-9632

Learn on the go with our new Android app! Download courses to watch offline with an annual premium membership."""
2014-09-14 21:45:32;How do you structure an application whose main interface has one or more persistent components with complex functionality?;"Putting persistent top level stuff in your application template is fine and easy.  It's a pretty common thing to have like {{render ""nav""}} or something.  The render helper is actually pretty high level, and is a lot like Components, with worse binding, but better separation of concerns.

If you'll have to change the content sometimes, then a named outlet might be better.

Try not to overthink this stuff.  If there's a tool in the Ember toolkit that makes something easy, like {{render}}, use it until you find a good reason not to.  That's the point of the framework."
2014-09-14 05:27:04;I think this subreddit could use some styling! :);Missing dot on your j decreases legibility a little./u/CritterM72800 +1 plz add volvo dis is epic
2014-09-26 23:35:16;Ember.js NYC July 2014 Part 2 - Steve Klabnik on JSON API and Edward Faulkner on Liquid Fire;
2014-09-26 15:03:41;Ember.js NYC July 2014 Part 1: Lightning Talks;
2014-09-25 17:29:04;Ember Works Best When You Tell Instead Of Ask;
2014-09-25 03:10:45;Ember.js and HTML5 drag and drop;Pro tips!Does anyone know if this approach, as is, will work on mobile?
2014-09-24 09:43:44;Presentation: The mistakes everyone makes with Ember.js by Alex Speller;This was excellent
2014-10-03 21:55:00;Working With JavaScript Plugins in Ember-cli;There is already an ember cli addon for moment.js
2014-10-02 17:25:12;Just released ember-cal, a native, data-bound EmberJS Calendar Component;
2014-10-02 16:56:01;How Ember.js Finds Stuff;
2014-10-01 18:12:22;[emberjs newb] what is wrong with my code (handlebars problem)? :(;"Use Ember cli instead, it is the future and the officially supported solution**solution**

dunno what's wrong...

but the snippet from here: http://chenzihui.com/2014/09/11/precompile-ember-components-gulp.html

it works...

can somebody explain what's happen?

Is it the namespace?"
2014-10-01 15:07:24;Ember.js Route Hooks, order in which the hooks are called.;Alex Speller mentioned on twitter http://alexspeller.com/ember-diagonal, worth checking out too.
2014-10-09 21:08:08;Screencast Series: Working With State in Ember;
2014-10-09 16:30:39;Multiple handlebar helpers;"The idea is that you can eventually use a sub-expression like this:

  {{markdown (converturls content)}}

This should be working with recent builds. However, this doesn't work for me. I am seeing other people say it works for them so it's probably worth a shot.Thanks, that did not work for me fore some reason. Hopefully it will in a future ember version."
2014-10-08 04:15:19;I'm having trouble with Ember.js and JSON. Could use a little guidance.;"You could try starting here:
http://emberjs.com/guides/models/connecting-to-an-http-server/

If you're using rails and active models, then you'll want to serialize them to json using Active Model Serializer:
https://github.com/rails-api/active_model_serializers/tree/0-9-stable
http://emberjs.com/api/data/classes/DS.ActiveModelAdapter.htmlCheck out http://andycrum.github.io/ember-data-model-maker/ it helps you understand what is the expected payload depending on the Adapter you are using. 

I'm also writing a book about Ember.js https://leanpub.com/ember-cli-101, we introduce Ember.js concepts as we build an application, from the beginning of the book we interact with a public API (written in Ruby on Rails).Also consider looking at Using Ember without Ember Data video: http://www.youtube.com/watch?v=7twifrxOTQY"
2014-10-07 15:51:15;Ember runloop handbook.;
2014-10-06 20:09:05;"Obligatory ""Where should I start?"" post.";"I'm writing a book about Ember.js with ember-cli https://leanpub.com/ember-cli-101 you might find it useful, it consumes data from a Rails backend.After you read that tutorial, install [ember inspector](https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi?hl=en) and look at some open source projects using ember with the inspector. Good projects are [travis](https://github.com/travis-ci/travis-web) or [balanced dashboard](https://github.com/balanced/balanced-dashboard).[deleted]Smashing magazine has a really great extensive intro to Ember post:
http://www.smashingmagazine.com/2013/11/07/an-in-depth-introduction-to-ember-js/

If you're willing to invest in a class, you might check out this video class series from Tom and Yehuda (members of the Ember.js core) team my company helped put together:
https://teamgaslight.com/training/courses/4If I buy -35 copies at $35, do you owe me $1085?

jk! just purchased. looks really good so far, but I'll come back here with further comments!"
2014-10-17 15:15:14;Working With JavaScript Plugins in Ember-cli: Part 2;
2014-10-16 22:16:54;Ember, Sockets, WebRTC.;Well, Did you EVER find anything? I found one application library that does this but its not open source and not with Ember. This is frustrating. I just started an Ember/WebRTC project and am going nuts with the lack of documentation and examples. Blazing a trail over here. Good Luck
2014-10-16 13:40:35;Writing Custom Components with Ember.js and Ember CLI;
2014-10-13 21:11:34;New to ember, dealing with asynchrony;"Played around with this a bit. I got it to work if the permission is granted, but for some reason the navigator.geolocation.getCurrentPosition error handler is never called. Anyway, hope this helps!

JsBin: http://emberjs.jsbin.com/vomegi/4/

Gist: https://gist.github.com/anonymous/02b7dc196378ce8cdcc4I haven't looked at your code yet, but I was looking at this topic the other day. You might get something from reading this, if you haven't already.
> http://emberjs.com/guides/routing/specifying-a-routes-model/

To paraphrase a few lines from the ""asynchronously loading models"" section, you would benefit from issuing a ""promise"" on the model hook, that tells Ember to wait for the data to come in before it renders the model with data. Until then, you've got empty fields being rendered, so the application doesn't hang up waiting, or do whatever weirdness you're experiencing. 

Specifically, looking at this:

    App.PullRequestsRoute = Ember.Route.extend({
      model: function() {
        return Ember.$.getJSON('https://api.github.com/repos/emberjs/ember.js/pulls');
      }
    });

It looks and feels synchronous, but its waiting for jQuery to load the JSON data from the API. Also, the linked to ""A word on promises"" in that article is good:
> http://emberjs.com/guides/routing/asynchronous-routing/#toc_a-word-on-promises

You might get some mileage out of it. Hope that gets you somewhere. "
2014-10-13 07:18:02;Upload CSV and parse into data model? [newb];"Do you want to save the csv to the server?   

In one of my apps I have an component which allows me to upload csv to an end-pont like 

https://gist.github.com/abuiles/5878f905c51714775b36

And then just redirect to the index or route where all the newly created models are loaded from the server.

Now if you want to just load this in the client without saving to the server, you need to read the file and parse it, probably with the File API."
2014-10-24 18:40:08;Early Access - An Update to Tilde's Introduction to Ember Course;"I've been working with Tom and Yehuda to update their Introduction to Ember course.  It had gotten a little out of date and there were a few areas where they wanted to change the approach.

This link takes you to a page where you can get early access to the course (while I'm still creating the materials).  If you buy now, it's a little cheaper ($449) and it helps my company make some money before the project is complete. This stuff takes a lot of time, has taken a big investment and we're only about half way through.

Some of the changes to the content include:

* No more use of bind-attr (new syntax works in the course even though the feature hasn't shipped yet IRL)
* We avoiding the use of itemController and use components instead
* We no longer use the `render` helper in the course and are using a service and a component instead.
* We use ember-cli and ES6 modules

Also, I'm heading to Portland in November to interview Tom and Yehuda and record things for the online training. If you have any burning questions for them let me know and I'll add them to a list I have."
2014-10-24 18:07:03;ember-cli-101 update - 95% done and $5-off (book);"Many, many thanks to you, sir. I'm really excited to get things going with Ember and ember-cli with the book. Cheers!

EDIT: More Emberers should hang out on #ember-cli-101 on IRC Freenode!Just got it. Look forward to it.I got the node bundle last week and blew through it. Just happily bought a copy of this. Good stuff, man. Looking forward to 100%dang I just missed this, any chance there might be another coupon in the future?"
2014-10-24 15:13:03;Trouble with queryParams;"I got this to work using the location and rootURL options for the router.

http://jsbin.com/migiqe/7/I'd recommend taking a look at the [AutoLocation](http://emberjs.com/api/classes/Ember.Location.html#toc_autolocation) documentation. It's preferable to using `location: 'history'` because it will support older browsers with the `/#/` (e.g. IE <=9)"
2014-10-24 07:12:16;Ember CLI WebSockets Addon;
2014-10-24 02:47:02;A 50,000 foot overview of the Ember.js Run Loop;
2014-10-31 22:09:48;Writing Components in Ember.js;
2014-10-30 09:05:35;Best practices in Ember?;"[deleted]Also if you are using Ember-Data, don't use the Store's private methods.

I've seen a bunch of people using `findQuery` and `findByIds`.I just found 2 good example for my problems:

1. In my route, I prepare my controller variables for all the <selects> (have to load the options from the API). However, after submitting the form and doing the .save() in the controller actions, the user should stay on this site.
Currently, I just copied the logic from the router to set the varialbles for the selects, but this isn't great. Should I do a transition to the route again, to get the clear state again?

2. Is it me or is handlebars really bad? There isn't even an if (I know you can hack it …)If you missed this about a month ago:
https://emberfest.eu/talks/talks_67D06FEDC4609D41

It's common Ember pitfalls, by Alex Speller, and it's excellent.  If you go into Ember's IRC channel, he's in there helping people all the time also.  If you have specific use cases where you need some guidance, that's a good place to ask."
2014-10-29 12:07:18;Ember for Enterprise - RFC;Yahoo now uses Ember for *all* internal and external ads & data web apps. Our flagship product is on ember 1.7 w/ ember-cli and ember-data 1.0-beta.10. Adoping Ember (and replacing YUI) has been nothing short of a game-changing success story. We can share components between projects more effectively, developers can shift between projects as necessary and they know how the codebase is organized, and we get to focus on building our products instead of reinventing the wheel.we just recently picked ember for something we're doing at work that is customer facing.  We're really struggling to figure out the best way to do role based authorization/permissions (note we are using a rails api back end).  If you've sorted any of those out already, we'd love some input!No thoughts, just a piece of advice: work out an array computer ahead of time for sorting, subsetting, and updating that doesn't replace the root array, and that uses a minimum number of replace operations for a given change.  As your list views grow more complex, having this handy will save you a LOT of performance profiling with respect to collection views and the models that populate them.
2014-10-29 03:25:32;Ember.computed.* is your friend!;
2014-10-28 21:44:45;Should I make the switch from AngularJS to EmberJS?;"This is the best direct Angular/Ember comparison that I've seen:  

https://docs.google.com/presentation/d/1e0z1pT9JuEh8G5DOtib6XFDHK0GUFtrZrU3IfxJynaA/edit#slide=id.p

I don't follow Angular that closely, but some recent notes about Ember:

  * Ember 1.8 was just released and should greatly improve rendering speeds

  * Ember 1.9 is in beta and will be another big rendering improvement (cutesy name for these improvements is HTMLbars)

  * You'll commonly see major complaints about Ember-Data.  Most of these are dated.  Ember-Data is way better now, but it's not perfect (yet).  Simpler alternatives with less fanciness exist (like Ember-Model).

Also, Ember's API has stabilized, is ready for production code, and the updates keep on rolling.  The team is committed to regular, significant releases.

It's taken a while for it to get here, mostly because of it's ambitious intent, but, IMO, there isn't a better client-side framework.I'm no expert, but Ember is much better for larger applications because the conventions forces/encourages you to do things the right way.

In terms of API, they've done a great job so far on keeping compatibility and not break things with the updates.

I definitely recommend you Ember as a javascript framework.I've been working with Ember now for 6 months and have basically zero experience with angular.  Currently, we're happy with Ember, but Angular has some things going for it that have had us thinking about going the other direction.  One of the biggest is integrating with bootstrap.
For angular, you've got 7,000 stars on the integration
https://github.com/angular-ui/bootstrap
For ember, you've got 70 in the version that's not deprecated.
https://github.com/indexiatech/ember-components/Yes. The fact that Angular would make that kind of change is crazy as there is no upgrade path. So far, there's always been an easy upgrade path for ember apps. (Since 1.0) and from what Yehuda and Tom say, it's going to stay that way. 

Many large companies are using it for their large scale long running apps. ZenDesk, Heroku's new dashboard, Vine, Discourse, Square, Yahoo, etc. More here: http://emberjs.com/ember-users/

Those companies aren't planning on rewriting their apps from scratch anytime soon."
2014-11-07 18:27:56;Understanding the Ember Data Identity Map;
2014-11-07 18:24:03;The Case for Ember for Enterprise;"I posted a request a little over a week ago titled ""Ember for Enterprise - RFC"" (http://www.reddit.com/r/emberjs/comments/2ko1wo/ember_for_enterprise_rfc/)

I finished my blog post on this subject and wanted to share it back here.

Let me know if you have any questions / comments!"
2014-11-07 06:38:06;Using Polymer Web Components in Ember CLI;
2014-11-05 21:19:41;ember-cli-101 completed!;> Sorry, no valid coupon was foundBought, seems like a good resource. Haven't had time to read it yet, but will provide feedback as soon as I do.
2014-11-05 18:41:38;What to do about single-page app slowness?;"there are trade-offs YOU have to decide if they're worth it or not. Having a clean separation between my backend and frontend has been awesome. I don't have to worry about creating a UI on both sides. With that being said, there's nothing stopping you from creating API endpoints that give you a whole bunch of various data, not just specific entities, at once and blowing that into your ember app all at once. For example, if you're creating a dashboard of sorts, you could have a ""/api/dashboard"" endpoint which could return to you a json structure of various objects related to your app and then you could manually push that data into ember-data and it would get propagated out into your UI. You're not *forced* to adhered to REST 100% of the time. It's okay to break away from a REST if it's too much of a bottleneck and requires you to issue 20 different API requests to get all of the required data. "
2014-11-14 21:27:05;Using Highcharts.js in an Ember app;
2014-11-11 21:48:23;Very helpful blog posts about Ember Data and async relationships;
2014-11-11 17:24:49;Love Javascript & Basketball? Seeking ember.js freelancer;
2014-11-10 03:58:44;Ember is for Designers;"I enjoy ember, but I've never thought of it as a way to remove complexity and thus allow me to shift my concerns.  Instead it feels like a lot more complexity in order to dev the frontend in a much more powerful and robust way.

I suppose if you were already doing tons of promises and data binding without a framework this would be a breath of fresh air, but I don't know of anyone who was doing what ember does pre-frontend frameworks."
2014-11-09 02:20:03;Quick example of using Firebase's Twitter authentication with an Ember service;
2014-11-21 21:00:56;Detecting if a DOM Element is in the Viewport;
2014-11-21 17:16:58;We're looking for a solid Ember.js + Rails developer;https://www.youtube.com/watch?v=HNcM4YjzgHYr/forhire
2014-11-21 17:04:29;"I made an Ember app that lets you filter Twitter users by Keyword—here's a stream of Ember core contributors when they mention ""Ember""";"> Also if you ever have trouble reaching orgasm rem**ember** that a.) pros have the same problem and b.) you don't have 70 people shouting at you.
>
>@trek RT @aphyr 1hRescued from spam queue, sorry! If anyone has questions about the service I'll monitoring the thread. Definitely looking for any thoughts/feedback you have!"
2014-11-20 04:01:14;Input action parameters?;Wait, what are you trying to accomplish? Filtering your model by the text in an input field? If so, just use a computed property on a controller that depends on the value of the input field. Whenever it changes, the property is recomputed and the template is updated.Check the following jsbin, it does what /u/dstaley described http://emberjs.jsbin.com/cuvoko/1/edit?html,js
2014-11-19 20:56:31;ember newb question;"We're using an old version of Ember so this is apparently no longer best practice but .... I'd use an ArrayController and ItemControllers rather than your ObjectController. In the template, you just use the {{each}} helper to iterate through the images. Then, when you add elements to the ArrayController, Ember will handle rerendering for you.Not sure the View is the right place. I'd make an observer on the model property of the controller and then inside the observer make an afterRender or next run call.

E.g.:

modelDidLoad: function() {
  Ember.run.later(this, myFunc);
}.observes('model'),
myFunc: function(){
  // custom logic here
}

If you are dead set on the view, there is didInsertElement()."
2014-11-26 17:16:43;I just open sourced my private journaling app, DayJot. Ember + Ember Data + Ember CLI + Rails.;"Thanks! It will be great to see how a real, 2014-era Ember app is coded without getting too overwhelmed (e.g. Discourse).

Bookmarked for future reference. Thanks!This is really great ! I look forward to diving into :) Thank you very much.FANTASTIC! I have so much use for this. Thanks a whole bunch"
2014-11-26 11:41:18;Facebook/Twitter style EmberJS example application;Any tests in that repo? I couldn't find any.
2014-11-26 07:43:05;Ember.js - Ember Data v1.0.0-beta.12 Released;
2014-11-23 16:21:25;Is there a version of the standard ember tutorial adapted for ember-cli?;"This isn't the full tutorial yet, but the first few parts are here https://github.com/poetic/example-todo-mvcGenerally, I think you're fine just using the App globals until you get the basics down.  Just do your work in [JSBin](http://emberjs.jsbin.com/) or something.  

Having a no fuss way to share your code with people who can help you is a really big deal.  If I can just click a link, look at all of the code, the output and errors and painlessly fork, it makes me much more likely to help out.

Conversely, if I have to fetch your repo and install just to see what you're asking about, it's harder to feel like I've got time for that.

Even now, after using Ember for years, I'll do proof of concept things in a bin, because it lets me keep things super isolated, easy to discuss, and it serves as a record of the pitfalls I've hit, and a personal cookbook.http://bit.ly/1xRZUNDIs not the same tutorial as the website but I wrote a living book about Ember.js with ember-cli https://leanpub.com/ember-cli-101

It mentions Rails, but is not really focused on Rails, we use it as the backend and we connect to a public API I created for the book, check it out!"
2014-11-23 11:54:03;Ember.js NYC, October 2014 (ember-cli-jquery-ui, Tips the docs didn’t teach me, Ember 1.8, Weather Roulette, Spooky Ember);
2014-12-05 21:29:59;Server Side Error Messages for Arbitrary Ajax Calls in Ember CLI;
2014-12-01 21:40:33;Best practice for setting the same vars on every .save() (for errors and progressbar);"Do you really need both `saveFailed` and `saveSucceeded`? If so, why not make one a computed property based on the other?

    saveFailed: Ember.computed.not('saveSucceeded')


Next, you could use `finally` to handle the duplicate code:

    @get('model').save().then(
      => @set 'saveSucceeded', true
      => @set 'saveSucceeded', false
    ).finally(=>
      @set 'isProcessing', false
      App.Progress.done()
    )
"
2014-12-01 21:08:45;Emberjs.com is down!;You probably caught them while they were deploying a new version of the site. Not a big deal, and not worthy of a post on this sub.Back up. Now, get back to work!
2014-12-01 16:25:49;Latest/Greatest Ember Training?;"I bought recently /u/abuiles book https://leanpub.com/ember-cli-101 and it has been great, I highly recommend it. He sends updates frequently and is updating it towards Ember 2.0I am ""the guy putting together the new tilde training course"" that rootyb mentioned. It's the best most up-to-date course that I know of.

https://teamgaslight.com/training/courses/14-early-access-new-introduction-to-ember-js

A couple of caveats:

1. It's not finished yet. It's about 70% complete and I believe it should be done in ~2 weeks. You can buy an ""early access"" version now that is a little cheaper as the course is being developed.

2. It is not cheap ($449 for early access). You can get 10% off with the code GASLIGHT10.

This course does use ember-cli and Ember Data. The course uses soon-to-be landed syntax like bound attributes without {{bind-attr}}, but there is also some syntax that will be deprecated as more features land for 2.0. It's pretty hard to future proof the course. ember-cli is a great book + updates are encouraging.

The two big things lacking in that cli book are authentication and testing. The ember-simple-auth docs are great for figuring it out on your own, but I have yet to find any up-to-date testing material on ember.

Tilde is supposedly repackaging their ember course, but i dunno if it will use ember cli. The code school course is also really out of date now unfortunately.

I wouldn't bother with anything that doesn't use ember-cli and ember-data.I ended up purchasing /u/abuiles book. Thank you for the recommendation everyone!"
2014-11-30 23:30:03;Adding flash messages to an Ember app;For personal convenience, and to learn how to package up an ember addon, I went ahead and published this code as an addon: https://www.npmjs.org/package/ember-cli-flash-messages
2014-12-12 03:00:52;How to pass api-keys in environment variables to ember-cli using process.env;"I understand that this could be useful for development teams and different production environments that need access to different static API keys. 

I just hope that people who read this understand that static keys in a client-side JavaScript application are viewable by anyone with access to the client. When the article mentioned two options it made it sound as if there was a choice between the options. If your API needs to be protected, you should use user session based tokens. If you don't care about the privacy of the static API key, then by all means compile it into your client source."
2014-12-11 22:35:39;Lotsa Ember.js Links;Excellent, nowithstanding the unexpected preview image.
2014-12-11 08:39:30;Serialize POJOs to Ember Data JSON;
2014-12-10 12:28:33;Loading multiple models on the same route;"Look at Ember.RSVP.hash. On phone so no examples but it allows you to return from the model hook a hash of promises that will resolve the model hook once all promised in the hash resolve. Ember pauses rendering on any promise returned from the model hookIn your route, you can define as like such:

    App.IndexRoute = Ember.Route.extend({
      model: function() {
          var getPosts = $.getJSON(""posts.json"");
          var getEvents = $.getJSON(""events.json"");
          return Ember.RSVP.all([getPosts, getEvents]);
      },

      setupController: function(controller, models) {
        controller.set('posts', models[0]);
        controller.set('events', models[1]);
      }
    });

In your template, you will have to say {{#each posts}}{{/each}} instead. ""events"" will also be in the context."
2014-12-10 07:36:59;Ember.js - Ember.js 1.9.0 and 1.10 Beta Released;"Anyone know what `pauseTest()` does that you need it over `debugger;`?"
2014-12-18 21:46:23;The Top Mistakes Developers Make Using Ember & Rails;"Number 5 is probably my favorite thing about Ember, and why I believe the Ember console is _essential_ for developing with the framework. It really helps you understand what is being loaded onto the page and which generated classes you need to override. You don't start with Ember by writing JavaScript, you start by writing your markup and your templates...just like the ""old days"" of vanilla HTML web sites. :)"
2014-12-18 11:55:05;Building with Ember.js at Zendesk;
2014-12-17 01:26:33;Ember 1.9.0 {{each}} with ArrayControllers;"After some guessing I found that it was:

    {{#each investment in controller itemController=""dashboard.documents""}}
      <img {{bind-attr src=investment.thumbnailSrc}}>
    {{/each}}

I was trying things like controller.thumbnailSrc or itemController.thumbnailSrc."
2014-12-16 19:55:47;#9938: Implement Server-Side Rendering for SEO;Nice! This is the kind of big problem that frameworks should be solving. This is exciting news!
2014-12-16 15:34:05;Stefan Penner on The Future of Ember (video, 31 min);Neat, I went to school with him. I love seeing friends end up in cool places :-) 
2014-12-24 04:54:25;Ember.js 1.9.1 Released;
2014-12-23 16:44:09;Inside FastBoot: The Road to Server-Side Rendering;This is super rad work. The ember community is knocking out hard problems and borrowing ideas from all over the place and putting solutions under one great umbrella.
2014-12-23 13:05:27;Write your first ember-cli addon in 6 easy steps;but how about testing it?
2014-12-23 09:18:19;Improving Ember.js performance. Part 1: Separating the templates;
2014-12-23 07:23:58;Building With Ember.js At Vine;
2014-12-30 17:09:40;Is there any way to make the emberfire tutorial work with the latest beta?;EmberFire has only been tested to work with Ember 1.9.1 at the moment. It's possible that there's been a breaking change in Canary (either for Ember or Ember Data). I'd try the tutorial with the latest stable releases.What error are you getting? I created a [tutorial](http://www.programwitherik.com/ember-cli-with-firebase-tutorial/) a few months ago on a much older version of Ember CLI with Firebase. When I have time I'll update it to the latest build. Let me know if this helps you. 
2014-12-29 02:46:50;"Ember-CLI 0.1.5 ""Real Maps"" released";"I'm just learning the CLI now, can you EL5 what ""Real Maps"" are?"
2014-12-29 01:40:54;How I Have Learnt EmberJS;"Came to the comments section to see if the article is worthwhile?  It isn't.  Upvoters are either biased or didn't read it.

It is *very* poorly written and it offers nothing helpful.  It describes no learning strategies as the title indicates.  It merely references a few sections of the ember website in a scattered array of ember-related trivia.For the interested here, I'm the author of https://leanpub.com/ember-cli-101 which is a living book, it stays up to date with the changes in Ember, Ember-Data and ember-cli, so even though Ember moves fast, I try to keep you informed of what's going on in the Ember world.

You can see some comments about my book here http://www.reddit.com/r/emberjs/comments/2ny8ms/latestgreatest_ember_training/"
2014-12-28 15:11:04;Working With JavaScript Plugins in Ember-cli: Part 3;
2014-12-27 21:36:20;Data down, actions up;
2015-01-09 09:06:04;Integrating TinyMCE in ember-cli apps. Feel free to critique, it's my first tutorial.;"Pretty good, but overriding *didInsertElement* and using the listener form *.on(""didInsertElement"")* like:

    didInsertElement: function() {...}.on(""didInsertElement"")

is redundant. It's usually better to stick to the listener form, and use a different function name, like:

    setupTinyMCE: function() {...}.on(""didInsertElement"")

If you use the override version, you should call *this._super();* in the function body to prevent potentially overriding inherited behavior.

Also, it might be worth doing some teardown with *willRemoveElement*.
Though it's been a while since I used TinyMCE I think it could potentially leave listeners or other junk behind even when the component is removed by Ember."
2015-01-03 15:30:35;I drunkenly made an intro to Ember screencast;"Good! Make sure you drink the same stuff for part 2 :)I am drunk listening to it. Perfect. ""Now we are going to add some padding to our bottom... *heh heh* I mean padding to our body"" 

Damn... now I wish all screencasts were made by drunk people. 100% more entertaining. I love you more than seems reasonable."
2015-01-03 07:07:31;Screencast: Create a Touch Menu Component in Ember.js - Coder idiosyncrasy;
2015-01-16 22:23:19;Ember.js & Reactive Programming — Computed Properties and Observers;
2015-01-16 08:56:42;Book preview: Rock and Roll with Ember.js;
2015-01-16 07:56:17;Ember-CLI Blog Tutorial With Firebase;I tried to make this tutorial a little more different then every other getting started with ember tutorial out there. Let me know if you have any questions. 
2015-01-15 21:46:51;Boston Ember.js - Lazy Loading Videos by Lauren Elizabeth Tan (slides);I saw this video on the Boston ember.js youtube channel. Is the whole meeting livestreamed? Are all the presenters remote?
2015-01-15 02:01:19;Review: ember-cli 101;"I had gotten it weeks ago. It's fantastic for sure, but I must admit, the complete vacuum of documentation for ember-cli is pretty horrible, especially considering how much of a 'standard' it has become in the Ember world.I just bought it from the glowing review.  I hope to have the same clicking happen, I hit a wall with the ember-cli transition.  Maybe just unlucky timing.I can also add my support that this book helped me get over the hump for a lot of concepts.It's a great book! I also bought it about a week ago. For those who just bought it, if you run into problems make sure you check the errata repo: https://github.com/abuiles/ember-cli-101-errata/issues

For me there was really just 1 issue that blocked me from moving forward."
2015-01-22 16:17:43;Should I start learning ember now ?;"HTMLBars is a subset of Handlebars in that the syntax will be largely compatible. Go forth and learn! (You can also use Ember 1.10 Beta, which has HTMLBars on by default.)I haven't actually used this myself, but Emblem is available as an alternative to handlebars (it's like Jade). Basically it's an alternative syntax that is compiled into handlebar templates

needs https://www.npmjs.com/package/ember-cli-emblem if you're using ember-cli

Note: I've heard support for it lately hasn't been too good, so I'm not sure how viable of an option it really is
"
2015-01-22 14:55:04;Our experience with Ember;"This has pretty much been my experience through and through with Ember as well. Looks like the road leading to Ember 2.0 will get rid of most of my gripes though, so I'm going to stick around. I've been using it since about 1.6 and every update has been painless, which is real nice, although I was not around when they updated the router, it sounds like that was painful for a lot of people.

One nitpick about the post though: Controllers are singletons except when used with ArrayControllers. With an ArrayController you specify a list of children controllers, so you'll get multiple instances of a controller. For example: in a TODO list app you could have an ArrayController called ToDos that has a bunch of ToDo child controllers."
2015-01-20 23:28:48;TodoMVC in EmberCLI -- Very helpful, thorough walk-through of rebuilding TodoMVC's app using EmberCLI (or ember-cli).;
2015-01-20 23:20:06;Timeline for Ember 1.10?;"http://emberjs.com/builds/#/beta (very soon)Probably early February. Beta 5 is already late five days right now.
How is HTMLBars syntax different than Handlebars?

Is bind attribute feature included in 1.10 or 1.11?I think you can use htmlbars as an ember-cli plugin now: https://github.com/rondale-sc/ember-cli-htmlbarsI believe HTMLBars templates will be backwards compatible with Handlebars templates, so all you will have to do is switch your compiler. HTMLBars changes the way the resulting DOM nodes are managed by Ember, not the templating syntax.Honestly, even the latest canary builds are pretty rock solid (some of the latest HTMLBars goodness is only available in canary until probably the 1.11 betas). The benefits of the new attribute syntax that's in canary (and hopefully in 1.11) outweigh any possible bugs for me. "
2015-01-19 20:59:57;Adding Relationships to Ember.js With a REST Backend Using Mongoose;
2015-01-30 14:45:55;Easy way to create ordered dynamic widgets for a feed type of app;
2015-01-29 22:00:38;Ember query params for nested routes;
2015-01-29 14:51:16;Creating a responsive ember frontend with rails?;"Responsive apps are about css, so it doesn't really matter how you develop your app. http://alistapart.com/article/responsive-web-design/I had a similar problem before. I had a project where I was pressed for time and could only create the desktop version of it. When I went back for a second pass, it was too difficult to just ""add in responsiveness."" I just ended up making mobile versions of the sections of the site and it worked out quite well.

I'm not saying this is the best practice, but if you're in that type of situation and just need to have ***something*** for mobile users, you can use the resolver to resolve different templates. For example:

        App = Ember.Application.create({
          Resolver: Ember.DefaultResolver.extend({
            resolveTemplate: function(parsedName) {
              var template = this._super(parsedName);
              var is_mobile = window.innerWidth < 768; // use whatever logic you'd like, this is just an example
              
              if (is_mobile) {
                parsedName.name = parsedName.name + '_mobile';
                parsedName.fullName = parsedName.fullName + '_mobile';
                parsedName.fullNameWithoutType = parsedName.fullNameWithoutType + '_mobile';
                template = this._super(parsedName) || template;
              }
              
              return template;
            }
          })
        });

I also prefer for my mobile users to have a separate experience than desktop."
2015-01-29 08:12:41;Ember Problems: Connecting Ember-CLI to a Rails API;I just wrote this article/recorded the video! Would love any feedback :)
2015-01-28 12:59:14;A Simple Ember.js Demo for Lightstreamer, a Real-Time Data Streaming Engine;
2015-02-06 13:52:56;COMPILING TEMPLATES WITH EMBER 1.10;
2015-02-05 20:59:59;You’re Missing the Point of Server-Side Rendered JavaScript Apps : Tom Dale;"Very interesting stuff! I was unaware of the FastBoot project until now, but I'm really impressed with the forward-thinking-ness (whatever, it's a word) of Dale and crew. 

There has always been a kind of weird (to me) process of serving an Ember App in that as I'm making a Laravel application to do it, I need to have this awkward minimal ""make Ember go now"" route which just serves up the initial HTML blob. Switching that to something like Node and making it all super fast, while leaving my API in Laravel is a nice idea."
2015-02-04 22:08:17;Authentication for Single Page Applications and API’s in the SANE Stack;
2015-02-04 18:38:24;What's the Proper Role of Ember Views?;"Just use components.  
*Source: Tom Dale*

But if you can't, don't validate model data in the view.  
*Source: Tom Dale*If they're ignoring the advice of the ember documentation ""The view is responsible for turning a primitive event (a click) into a semantic event: delete this todo!"" I'm not really sure how you can convince them. Is there any chance you could introduce unit tests? That would make the lack of separation of concerns more obvious by being more painful to test.In theory, in MVC (model-view-controller) the model contains the data which may or may not include 'state' (probably depending on how ephemeral that data is) and the controller mediates between the model and the view.  And typically the debate is over thin models/fat controllers (where business rules including validation reside in the 'fat' part) versus the vice versa.

In practice, much input validation happens in the view for reasons that generally relate to expediency in some manner.

Perhaps move away from MVC overlap arguments and move to a 'contractual' API based methods which also enhances scalability.

So to answer the question: the role of the View is to (under direction of the Controller which is  informed by the Model) display those outputs (including input gadgets) that reflect the Application state.







Is true that the validation should happen in the view.
Given that you are free to do whatever you want (and, for example, not use the views at all. Which is my suggestion), why don't you bind values to the controllers and validate them in the views?
Using computed properties or observers you can validate the inputs and still keep their states in the controller.
I hope this example helps you a little bit more. 
http://jsbin.com/yubayixeki/1/I'm very excited that we are moving to components only, but moreover that the components will be routable in Ember 2.0 and the controllers/views are going away.

The main reason why is the following:
In ember currently, when you have a route and you assign a template for it, but no controller or view, the controller and view are generated for you. I think more people know that the controller is generated for you, but not the view.

What most people do with their templates for sections of a site is to have a <section> tag wrapping the template they're using. i think this is wrong, because you end up with this:

    <div class=""ember-view"">
        <section>
            ...
        </section>
    <div class=""ember-view"">

it's better to keep some super basic semantic views in the folder view/semantic. It's not views that I'll ever call in a template, just use for the route property 'viewName'. The views themselves will just have the tagName property set, and maybe an attribute or two for accessibility.

With that, your route's top level tag can be <section class=""ember-view"">

Also, when you set the viewName in the route, the route's context == the controller's model. And because the view can handle actions the same as the controller, it makes more sense to me to put everything in the view that i can, and leave the controller as slim as possible. This will make life easier for a Ember 2.0 transition later (at least I believe it will based on my knowledge of it so far). So in the templates, instead of accessing data via {{model.propertyName}} I'll do {{view.context.propertyName}}

The other huge advantage with doing it this way is that unlike Controllers, the view's are not singletons. My big problem with how controllers are singletons is that when you change the scope from a parentView to a childView, but that childView doesn't have it's own controller, it inherits the parent's controller. Which can make controller properties specific to parent's scope to break if used in the childView. By simply placing those Computed Properties in the view to begin with, you won't run into that problem. A view should be written to always consume one type of context (eg, a model, a collection of models, a hash of two different models, whatever).

This brings me back to why I like the routable components of Ember 2.0. Since currently the controller and views can share a lot of same responsibility, It seems the are going to split the rest of the controller's responsibility between the route and the component. And because components extend views, we still have all the advantage of the view already. this should simplify template context as well because you're not having to specify between controller and the views when accessing context properties, or specifying the target for actions."
2015-02-04 05:59:20;Setting up Ember.js with Rails;"You should be using ember-cli unless you have a good reason not to.  Nice tutorial, my only issue is this statement.
>But even with all these features, sometimes you just to keep your workflow and use Rails.

ember-cli is more than es6 and transpilers.  I think using rails as an API and keeping them separated is the canonical approach. Use ember-cli.Great guide, but from previous chat on EmberJS IRC - ember-cli is the way to go and keeping front-end & back-end separated."
2015-02-13 01:24:07;Learnings from Making a Google Map Component — Ember Property Setters;
2015-02-12 20:49:48;Know Your Addons: ember-cli-build-notifications;600 addons! And emberaddons.com finally added pagination.
2015-02-12 17:02:58;Resolving template data asynchronously?;"```
return this.store.find('todo').then(function(res) {
            console.log(""res"", res)
        });
```

The res is not my data...I guess it's an ember object. Anyways, the data field is an empty array. Is that the problem?The route::model method can have returned a promise to it, and Ember will wait for that promise to resolve before rendering the template. If the promise is rejected, Ember Router will auto-transition to the Resource's error route."
2015-02-10 21:00:47;Use a rails api with ember authentication?;"Do you still need this? I have an Ember/Rails project that utilizes authentication + registration. This seems like it's more of a Rails question than an Ember question -- you may have more luck in r/rails.this might help you: https://github.com/simplabs/ember-simple-auth

unless I'm mistaken, activeadmin uses devise, so you should be able to follow the ember-simple-auth readme to the letter and get a working solution pretty easilyI really should post something. Just spent the last two weeks doing exactly what you ask about (private repo though). :("
2015-02-09 22:43:59;Setting up Ember.js (ember-cli) with Rails;
2015-02-20 17:02:24;Using Sails.js with Ember.js (video, 29m);
2015-02-20 17:00:34;Ember Actions by Example - Jason Porritt;
2015-02-19 00:45:00;New book: Rock & Roll with Ember.js (25% off until Sunday);"Do you have Table of Contents?

What's the sample app that you build?"
2015-02-18 22:07:11;What is the best way to add a second model to a route?;"You need to invalidate the model or re-transition to it when appropriate to force a refresh. In an app I built, we have a user route which has the user model and a playlists model using `Ember.RSVP.hash` like you mentioned. I'll give you a few examples.

On my main application route, I have a method to invalidate any model:

        invalidateModel: function() {
            Ember.Logger.log('Route is now refreshing...');
            this.refresh();
        }

When I add a playlist from an action, I send a message that bubbles up to the main application route and forces it to refresh, like so `that.send('invalidateModel');`.  Note that I'm using `that`, because this is being called inside a promise and `var that = this;` before the closure.

The other way you can handle it is by re-transitioning to the route, and by making sure that you use only the ID on the paramater argument, like so: `that.transitionToRoute('user',loggedInId);` where `loggedInId` is just the user id, not the entire user object. If you pass the entire user object, it will trigger the model on the route. Can you provide a jsbin of what you intend to do, please? I don't fully understand it."
2015-02-18 12:59:10;Ember CLI 101 - Free Webinar;I own your book - I appreciate the constant updates to it, it is the main reason I recommend it to others.  Keep it up please!Thanks! I picked up the book as well and also appreciate the updates. I was also saved by your rails-csrf on my first ember-cli project as well!
2015-02-27 22:19:12;Can't add layouts to built-in view helpers;Answered on SO: http://emberjs.jsbin.com/ciwifajaze/1/
2015-02-27 21:08:08;Nested Ember routing for e-commerce;
2015-02-27 21:07:15;Ember Land #3 EmberConf, Ember-CLI 0.2.0 Beta, component helper, subexpressions, Ember.inject, async-button, Ember Inspector (audio, 13m);
2015-02-27 19:38:03;Quick Tip: app-wide shopping cart example;
2015-02-27 17:25:56;Ember.js NYC, February 2015;
2015-03-06 16:30:28;Hacker news reader built with EmberJS;This is part of my talk at EmberConf, the video/slides/content is now posted here: http://brewhouse.io/blog/2015/03/06/adapter-patterns-in-ember-js.html
2015-03-05 22:35:09;I've done my part at EmberConf !;That's awesome! How was it being Tomster?There is only one way to summarize it as someone who also played a part of being Tomster...hot.THANK YOU SO MUCH. I am super sad I couldn't meet 'the' Tomster(since I wasn't able to attend), but seeing you all over and everyone so happy to see you made my week last week. I sincerely hope I'll see you as the Tomster again next year!
2015-03-04 13:57:15;Ember Observer - a site to help you find quality addons;"I like your idea of score conditions. Some suggestions: add pagination in addon page and add a search page for sorting the result.

p.s. the API endpoint is broken in github repo"
2015-03-03 22:56:55;ember-cli-deploy, ember-deploy, and ember-front-end-builds will merge to form the new ember-cli-deploy;"Awesome!  I had a tough time figuring out which to use and eventually went with a customized version of ember-cli-deploy.  I look forward to seeing the end result.Around EmberConf time this community feels so dang special. The fact that I already thought this was pretty neat before I saw the adapters section, which is honestly just the craziest gravy train of perfect.

Probably going to start fooling around with this as soon as tomorrow."
2015-03-03 22:01:39;Ember's new Glimmer rendering engine;"I realized that I hate Ember so much that I actually don't want it to be fast. I want it to stay the uncompetitive pile of crap that it has been for so long.

Dammit Ember, you have done nothing for me.

You have subtracted huge value.

Now you want to say you're finally fast?

After such hubris all along.
"
2015-03-13 23:35:31;Ember.js in Action - YouTube;
2015-03-13 22:46:59;signup/signin;"If you just want login/logout try this tutorial:
http://givan.se/p/00000000
The trouble with it is that it doesn't load a user model for the person who logged in and that's what I have been struggling with. The first part works great if that's all you need.  

For sign up you can turn to this more complicated example:
https://github.com/marbemac/dayjot
"
2015-03-13 21:32:49;Ember CLI + Firebase in 9 Minutes;What is an alternative to Firebase? Is this one of the best resources to use for persisting data? It was pretty cool, but you sound kinda like a robot. Relax !
2015-03-13 18:39:02;Why You Should Care About The Ember Run Loop;
2015-03-12 23:46:39;Between Screens Podcast - Interview with Tom Dale (audio, 16m);
2015-03-20 16:18:34;An Overview of Ember Simple Auth by its Author, Marco Otte-Witte, during Codementor Office Hours on 3/27;
2015-03-20 15:59:17;Ember Data Relationships and Web Components;
2015-03-20 15:54:30;The difference between routes in Rails and Ember;"this is cool, I've always been curious about how the best way to build a dashboard view with a bunch of models with Ember. Like an admin panel with the 5 most recent posts, comments, signups and sales.

I've ended up making a presenter/facade object on the server and just stuffing everything in there but then it ends up not really being a RESTFUL resource and I had to do a manual AJAX call to set the model instead of using ember data. seemed like an antipattern"
2015-03-18 19:37:57;Ember.js quick tip #3 - Sorting an array, the ember way;
2015-03-18 19:37:22;Ember.js quick tip #2 - Generating urls for external sites;
2015-03-27 19:59:35;Dynamically Render Components in Ember.js 1.11;
2015-03-27 18:20:27;New Tampa, FL meetup looking for attendees;I started this meetup and am looking for members to join in. Currently I'm looking for a venue to hold our first event. Should be scheduled within the next 3 weeks. Thanks!
2015-03-27 15:16:34;Ember.js Guides are now versioned and are referencing Ember CLI;"Thank god.  I feel like I picked the exact wrong moment to try to learn Ember.  In retrospect I think they damaged themselves with all those forward looking demos and presentations over the last four months.  Their docs were not ready for an influx of new people.  Not to mention whatever they changed recently broke almost every jsfiddle out there, including their own ""examples"".    80% of the fiddles out there don't work now."
2015-03-27 14:25:42;Real life version of Ember NYC icon - by Liz Baillee;I want one!
2015-03-26 21:27:36;Intro to Ember.js - Building a Basic App, with Matthew Beale, during Codementor Office Hours on 4/22;
2015-04-02 23:17:45;Form wizards in Ember: Custom computed property for route specific values;
2015-04-02 21:49:28;"Does using ""this.resource"" ended?";"See the first two comments on this [Future proofing your Ember 1.x gist](https://gist.github.com/samselikoff/1d7300ce59d216fdaf97)

TL;DR

* as of 1.7 routes can be nested
* namespaces don't matter so much with modules (vs globals)
* Ember 2.0 will prefer a pod structure"
2015-04-01 17:30:22;Idea/Suggestion - No question is stupid <day>;"You are free to ask whatever you want here...people are pretty respectful!
no need for a specific thread!Happy to help out wherever I see questions that I can answer, but it's generally better to ask stuff on a site dedicated to that, like StackOverflow, which leaves a nice artifact for other people with the same question, in a place where people know to look for it.

Or the Ember IRC channel.Cool idea. I am not sure how many people are active on reddit though compared to other channels like IRC or the emberjs community slack. I would be glad to answer any questions I have if this becomes a thing. 

The ember community is very welcoming and helpful, I am sure questions will be answered ;)"
2015-04-01 17:14:57;An Agile Design Manifesto (for Ember.js);Holy man. This article is full of goodness, praise the Lord.
2015-04-01 07:33:59;Turbolinks for Ember.js applications;
2015-04-10 10:31:20;RFC: Registry / Container reform;
2015-04-09 22:12:05;Query parameters in Ember, with Balint Erdi, During Codmentor Office Hours 5/29;
2015-04-09 16:29:26;Ember Controllers Are Singletons;
2015-04-09 12:55:11;RFC: New Route driven pod structure;"In WebStorm there is a setting to make the tab title include a partial path when the filenames are the same. I also tend to split my code screens vertically and/or horizontally by type; having views on the left, controllers on bottom right, etc, makes it really easy to navigate between relative files while maintaining context. The combination makes the current POD structure rather nice. 

I think I'd feel boxed in by the route oriented structure too. I often nest the pods by feature or sections, a technique that has worked well for the organization of my projects,  and although sometimes it's based on a route, other times it's just some sort of reusable element that doesn't really have a parent. In isolation, this is a good idea. But, stability is more important when you're talking about a file structure. As long as any ember app shares the same structure, any dev can jump in and get oriented quickly. I think a good strategy is to stick with a plain vanilla file structure then, if the complexity warrants it, break pieces off into addons. It's more of a heavyweight solution but it works very well and keeps the main apps file-structure simple."
2015-04-09 09:34:41;Broccoli: The Build Tool, Not the Vegetable;It's not as fast as gulp on Windows. Even with the windows fix, it's slow.
2015-04-17 23:13:25;Creating an Ember CLI addon — Detecting Ember.js Components Entering or Leaving the Viewport at 60FPS;
2015-04-16 21:35:35;Working with Ember Data, Node, Express and MongoDB - Ryan Christiani;
2015-04-16 19:22:35;Discourse and the use of Ember.js with Robin Ward (aka EvilTrout), during Codementor Office Hours on 6/9;
2015-04-16 19:02:37;ember's relation to handlebars?;I don't know anything about this course, but it seems pretty outdated. You might consider checking out http://balinterdi.com/rock-and-roll-with-emberjs/, https://leanpub.com/ember-cli-101 or https://www.codeschool.com/courses/warming-up-with-ember-jsEmber's templating engine is called HTMLBars, which is built on top of Handlebars, so yes it is a requirement, but it's only required if you're doing a build of Ember. If you look inside the ember folder there is a file called ember-template-compiler, that is the compiler built on top of Handlebars.
2015-04-14 20:51:43;Security and Bugfix Releases. Update if you are on 1.10 or higher! XSS vulnerability.;Sounds like it only affects the select view. You should still upgrade, but if you aren't using {{view 'select'}} then you can breathe easy. 
2015-04-24 11:05:19;Ember CLI Tutorial for Ember EasyForm and Ember Validations and Bootstrap Integration;
2015-04-24 10:44:49;Mocking Ember Services for Unit Testing;
2015-04-23 23:27:30;When is FastBoot meant to launch?;"Yeah at Ember Conf they mentioned a date in early June where everything is going to land together. Ember 2.0, ember-cli 1.0, Ember Data 1.0, Glimmer, FastBoot, Liquid Fire... So assuming they keep their word expect it then.

Found it: 6/12Tom and Yehuda are working on it! Looks like most of the tests are passing now - https://is-ember-fast-yet.firebaseapp.com/ (4672 of 4800 right now). 

You can test it now though, if you'd like: https://github.com/tildeio/ember-cli-fastboot"
2015-04-23 18:45:59;Ember Websockets 1.0 released;
2015-04-23 18:32:27;Ember.js: The Ever Evolving Rock;pretty much sums up the exact same feelings I've had about ember for the past year. I loved the design patterns and the emphasis on convention over configuration. But what really sold me, was the focus on steady growth and backwards compatibility. The best solution isn't always the easiest, and ember has never been shy about going for the harder solution.Exactly. I have never for a moment regretted choosing ember. 
2015-05-01 13:59:10;Things to know Moving Off Globals in Ember( or Ember-Rails);
2015-05-01 10:02:11;Testing in Ember.js, Part 2: ember-try and the Travis CI build matrix;
2015-04-30 19:58:13;Using Ember-data-factory-guy with ember-cli v0.2.3;This is incredibly hard to read. :(
2015-04-30 19:54:55;Using Ember CLI and working with Ember Data fixtures - Ryan Christiani;
2015-04-30 10:12:09;The Ember.js Run Loop - Rizwan Reza;
2015-05-07 13:53:58;RFC: Improved Actions;Hmm not sure about this. Really I just want actions to bubble through components instead of having to constantly point them at each other, and this RFC doesn't seem to solve that. The 'target' section looks interesting but really isn't explained.
2015-05-07 13:00:40;Animations in Ember.js with liquid-fire;
2015-05-05 18:01:05;ALMOST THERE!!;"Is it me or does the demo have a memory leak? I was watching dev tools and the heap is constantly going up. That's no bueno. I'm still very excited though.

Edit: it's a known issue: http://emberjs.com/blog/2015/05/05/glimmer-merging.html"
2015-05-05 16:28:20;Glimmer's in canary!;So does anyone know how to effectively benchmark your app before and after? I know we have the view render time helper in the chrome dev tools plugin but I'm thinking of collecting data and comparing graphs etc. Thoughts? 
2015-05-05 14:22:27;Test like a pro with Ember.js - Mike North;
2015-05-15 18:21:48;[Help] How does one access model data in a router/controller?;"For setting the background of an element, the best approach is probably to create a component to wrap your content. You wouldn't need to do anything special in your route to accomplish that, just something like this would do:

    // app/templates/components/background-image-component.hbs
    <div style='background-image:url(""{{model.myUrl}}"")'>
      {{yield}}
    </div>

    // app/templates/index.hbs
    {{#background-image-component model=model}}
      <div>My cool content</div>
    {{/background-image-component}}



The `afterModel` hook is useful for when you want to do something with the resolved model prior to rendering that route's template. That would fulfill your second scenario.

    // app/routes/myroute.js
    export default Ember.Route.extend({
        model () {
          return this.store.find('myModel', 1);
        },

        afterModel (model, transition) {
          // do stuff with the resolved model here
        }
    });

Check out the guides on [components](http://guides.emberjs.com/v1.10.0/components/wrapping-content-in-a-component/) and [routing](http://guides.emberjs.com/v1.10.0/routing/asynchronous-routing/) for more info."
2015-05-15 16:44:00;What are the possible ways of authenticating an Ember app with a Sails back end?;
2015-05-15 16:21:37;ember-cli@0.2.5 released!;That was fast.
2015-05-15 12:21:17;Best way to learn Ember today?;"Ok, I just want to clarify and correct. **Ember is not undergoing drastic changes on the road to 2.0.**

The changes occurring now are reasonable and manageable, and have nothing to do with 2.0. The new features in 2.0 are... nothing. There are no new features. No new approaches. The current 1.x branch contains everything that will be in 2.0. What 2.0 will bring is a consolidation of code. Deprecated functionality, etc. it should be noted that these things are *already* deprecated. 

That's not to say Ember hasn't changed. It certainly has. Many resources and tutorials are out of date. But in truth these are more related to the excellent Ember CLI providing better approaches than any significant feature changes. 

If I was going to recommend a resource it would be the Ember CLI 101 book, referenced repeatedly here. It's a great source of cutting edge approaches and patterns, as well as the basic guides to how-to. If you're going to be using ember cli as well then https://leanpub.com/ember-cli-101 proved to be up to date when I worked through it last week.I think the best way is to just to jump in. Start using ember-cli and start hacking away. Find some problems to overcome and research. You will find yourself diving into embers api docs and learning internals. The biggest thing to learn is to not fight the ember way. If the code 'smells' then there is most likely an incredibly easy way to do it.My first step with Ember was just walking through the guide. It's pretty thorough and you can get a really good idea of how everything works just using that. I've been an Ember developer for around a year and a half and I still go back to reference it sometimes. I've used the following so far:

* https://github.com/foraker/ember-reading-group - Very useful even though it mostly directs you to read other information

* https://leanpub.com/ember-cli-101 - Works through a lot of the key concepts and uses Ember CLI which is pretty much essential if you want to use Ember in the long term. There are quite a few mistakes so make sure to have the errata page handy

* http://balinterdi.com/rock-and-roll-with-emberjs/ - I wanted to like this but it has heaps of errors and was quite confusing, I gave up about halfway through.

I'd also recommend watching the videos from Ember Conf 2015 but not until you have done a bit of reading first. After that I would also read up on Ember 2.0 so you don't spend too much time learning syntax/features that are going to be replaced and/or deprecated.

I haven't watched the Tilde/Gaslight video but have read good things so if you can afford the high asking price that might be worth trying (I'd love to get some feedback from anyone who has seen this).

Learning Ember isn't as easy as it could/should be, it's easy to find outdated guides that lead you astray and the official documentation is quite confusing at times. Stick with it as so far I do feel it is a good framework.This is expensive but very good information: http://www.tilde.io/training/Ember 2.0 = 0 Guides...I just started learning ember with the ember-cli-101 book, so far it seems a good choice.Here's a couple of learning resources: https://netguru.co/blog/emberjs-resources"
2015-05-14 18:05:12;Ember-CLI 101 help;"Yea - You're calling the API at localhost:4200, which I'd imagine you don't actually have on your localhost. To get around this, you need to serve with the command :

**ember server --proxy http://api.ember-cli-101.com**

(The author discusses this on page 16.) 

As this is particularly annoying to have to serve this way every time, You can jump ahead to page 132 (if you're comfortable), and add the '**host**: 'http://api.ember-cli-101.com', ' line to your config/environment.js file as indicated in the PDF.

Also of note is the **namespace** value, which is initially discussed on page 15 - make sure you are using the right namespace for the part of the guide you are on ('api'). The url you are calling should read as 'http://api.ember-cli-101.com/api/friends'. I believe the example in the book:
> XHR finished loading: GET ""http://localhost:4200/api/friends"".

is slightly off, but I'm not sure."
2015-05-22 20:35:02;November CLI - Generate a Node.js API for your Ember.js app!;
2015-05-22 20:32:58;EmberWeekend - Interview with the Emberokai;
2015-05-22 05:35:15;Ember Data v1.0.0-beta.17/18 Released;
2015-05-21 17:29:11;Best ember screencast;"I run emberscreencasts.com- two screencasts per week, (almost) every week.  It is the only screencast site for ember that updates regularly.

If you're looking for something as popular as railscasts was in 2013, you're going to wait a few years... not even railscasts started out as popular as railscasts ;)https://teamgaslight.com/training/courses/14-introduction-to-ember-js"
2015-05-20 13:02:14;Rethinking Static Sites;"I thought about this and built my blog with Ember. Of course the first load was a bit slower, but the following requests were SO fast! Just as the article says, the experience between pages was amazing. The site was faster than a static page, even when I was doing AJAX for pre-compiled templates.

Then I found through analytics that the bounce rate was above 90% and I built the blog again with a static site generator..."
2015-05-29 21:02:40;Router or Controller?;"A couple ways to handle this, but I'd expect a component with a button/link that actions *up*, when clicked, to a route (or I suppose controller). The handler for that would likely transition your state via the URL to some route that would then handle/display the oauth stuff.

There are a few ways to handle that (but note that I've avoided modal dialogs with Ember), but thats just a rough idea off the top of my head. Basically, my 2 cents is you want that operation to be a state change that then utilizes the routing rather than a button click that does it. I try to think about any dialog box presented or change to what is presented as a state change I track in my URL. I may be overkill in this regard, but it helps me work this way.

Also, I'd avoid getting too invested into controllers since they are going away. Without *routable components* available yet, its unavoidable for some things, but try your best to keep the controllers light for now. Use components as much as you can."
2015-05-29 20:10:42;Creating A Better Search Experience With Ember;"I actually did something similar to this a couple of days ago. However I changed my approach as I didn't want to query my model for two reasons:

1) My model will return a lot of data I don't necessarily want. (compare fetching 1kb of data vs fetching 30kb of data)
2) I wanted ElasticSearch to handle the autocompletion for me.

I ended up sticking an Ember.$.getJSON in my component. I'm still not sure if this was the right approach though. I've only used ember for less than a week."
2015-05-28 17:09:38;Stop making your SPA data second class.;
2015-05-28 12:52:53;[HELP] How do I show a block if resource-route is 'active'?;"Is there a link-to helper in there somewhere? If so, that will get the ""active"" class when the route is active, and you can show/hide whatever you want using CSS instead of JS http://stackoverflow.com/questions/18190401/how-can-i-render-a-block-only-if-a-specific-route-is-active

STFW."
2015-05-28 01:45:32;Am I going crazy?? I swear DS.attr() returned an object with a method .isRequired().;"I wasn't able to find anything in the [DS.attr()](https://github.com/emberjs/data/blob/v1.0.0-beta.18/packages/ember-data/lib/system/model/attributes.js) source code about it... closest I could find is [defaultValue](https://github.com/emberjs/data/blob/v1.0.0-beta.18/packages/ember-data/lib/system/model/attributes.js#L249), though that doesn't really help ya.

I do agree that ""required attributes"" sounds strangely familiar. Maybe it's just part of a different library?

Edit: Maybe consider using Dockyard's [ember-validations](https://github.com/dockyard/ember-validations) as a substitute?> Am I going crazy?

Yes


... j/k, AFAIK there is defaultValue but not this. "
2015-06-05 22:17:59;OAuth2 with Flask, Ember and torii;
2015-06-05 19:57:34;Ember.js - Ember Data v1.0.0-beta.19 Released;
2015-06-05 14:43:54;Ember CLI Snippets - Sublime Text 3 Package;
2015-06-05 14:30:25;Build a Blog with Phoenix and Ember.js;"This is most excellent.Thanks for the nice tutorial. 

I'm also trying to move some internal stuff into phoenix + ember space, if appropriate."
2015-06-05 13:52:17;Promise-aware controllers and components with Ember.js;
2015-06-12 21:28:44;So it's June 12th;It'll probably be this weekend. The team is working on coordinating the release.Robert Jackson mentioned in the EmberJS Slack (ember-community-slackin.herokuapp.com/) that he's working on 1.12.2, 1.13.0, and 2.0.0-beta.1 tonight. Busy night, lots of confusion.http://emberjs.com/blog/2015/06/12/ember-1-13-0-released.html
2015-06-12 03:27:40;Basic JWT Auth for Seeds.js/Sane Stack (aka Ember on Sails);Oh hey, I think you offered to throw this up for me in gitter chat last night, thanks!I've written about this too, here http://givan.se/ember-and-sails-authentication-options and here http://givan.se/sane-auth-example.
2015-06-11 21:37:39;Ember.js online course;"I'm a Rails developer, and I really enjoyed this book:
https://leanpub.com/ember-cli-101Been using EmberJS for about 6 months now, and these resources helped me out:

http://emberweekly.com/issues.html

https://www.emberscreencasts.com/

http://ember.land/Ember-cli-101 (https://leanpub.com/ember-cli-101) is what really helped solidify concepts for me. 

One of the more frustrating things about ember is that material gets outdated quickly due to the 6-week release cycle. The fact that the author keeps this book up-to-date was a huge help!"
2015-06-11 15:49:34;Troubles with BelongsTo association Ember CLI Rails;You might want to take a look at https://github.com/cerebris/jsonapi-resources which is designed to integrate rails with ember-data using the [JSON-API](http://jsonapi.org/) spec. The old rails controllers weren't really designed for consumption by a single page app like ember, jsonapi-resources is designed with this use case in mind.
2015-06-11 15:07:34;Ember.JS Meets Ruby on Rails - 2 Apps and Thoughts on a Team Workshop;
2015-06-19 18:53:16;As part of its new Code Climate Platform, Code Climate announces integration with Ember Watson;
2015-06-19 08:31:32;RFC: Outlet Focusing for accessibility in Ember.js;I think the link you want is here: https://github.com/emberjs/rfcs/pull/66
2015-06-19 08:27:40;Is Ember Data is finally out of beta?;"I think that's because of this blog post on the [official Ember Blog](http://emberjs.com/blog/2015/06/16/ember-project-at-2-0.html) where Yehuda highlights that the core projects (Ember, EmberCLI, Ember Data) will go hand in hand from this point on. And will have essentially the same versions.

""Starting with Ember 2.0, we will coordinate every release of Ember with releases of the main ecosystem tools maintained by the core team:

* Ember CLI
* Ember.js
* Ember Data
* Liquid Fire
* List View
"""
2015-06-18 16:16:15;Ember.js 1.13.2 released;Really looking forward to using 1.13.x. My app uses ember-listview and there is an outstanding bug that is incompatible with 1.13, and so I'm waiting. https://github.com/emberjs/list-view/issues/245
2015-06-18 15:15:59;The observer tip-jar - Stefan Penner;"Currently one of the ""nails"" that I use observers for that I didn't see mentioned in the talk is when my computed property must rely on a promise to resolve before returning the computed value.  Returning a promise (like with async/await) from a computed property means I can't just render the value in a template by using the computed because it ends up rendering the toString value, which is `[object Promise]`.

Anyone know whether this is possible with computeds or have any suggestions?  I know one way is to return an object literal with the real value as a property of the object when the promise resolves, but that's not entirely ideal."
2015-06-26 22:29:01;Ember-CLI 101 is Awesome;Thanks :)!Agreed. Just finished it.  The only thing I didn't like was when he would show the sloppy examples early then went back later and fixed them.  The one example I can think of is when he put some actions in controllers, then other in routes.  Only to move it all to routes later.  But I liked the book over all. Best resource I've found.Yeah it's my bible for now. Can't wait for upcoming updates. I plan on going through it multiple times. Just bought it. I'm excited for the read!Just +1 here. I loved this book and I recommend it always to fellow devs diving to ember. Eagerly waiting the updates for Ember 2.0 :)
2015-06-26 21:32:56;RFC: Splitting Ember namespace into ES6 modules;
2015-06-26 13:06:36;Buildlab Screencast: Manage the Title Tag w/ Ember;
2015-06-26 11:38:05;New Deploy Notifications with Ember and Firebase;
2015-06-26 03:46:19;How to Inject the Current User Using Ember-simple-auth in Ember 2.0;
2015-07-02 00:21:42;Ken Sin - Guidance without answers / How to help;
2015-07-02 00:15:55;Ember Core Team Meeting Minutes moved to Github;
2015-06-29 18:42:01;Our Transition to Ember 1.13;
2015-06-29 17:31:30;What's the best way to get started with Emberjs?;"no book recommendation. (I'm struggling myself to get the pieces together on a brand new ember 2.0 project) but the [ember.js slack community](https://ember-community-slackin.herokuapp.com/) is quite active and helpful. https://leanpub.com/ember-cli-101
This was worth my money. I hope it will be updated for ember 2.0 soon.Another suggestions would be to find ember projects on github and follow the commit history from the beginning. I find that to be one of the best ways to approach a new framework, especially if the supporting material is out of date. If the commit history is decent, it'll often teach you more than a tutorial anyway.

If the project is on an older version of Ember, then see if you are able to update it to 1.13. It'll teach you a lot about how Ember works in the process.

Here's a good list of projects:
http://iheanyi.com/blog/a-list-of-open-source-emberjs-projects/

The HN Reader is fairly approachable. 

Also one not on the list is:
https://github.com/cibernox/mobile-patterns

Mobile-patterns is closer to what you'll see in 2.0, while still not being 100% there. By that I mean it is component centric (though it has not removed controllers entirely) and it tries to follow the data down actions up principle throughout the project, which is arguably one of the more significant changes to the way people will design their apps in 2.0. I'm working through the commit history myself, trying to learn what I can, and making sure it's compatible with 1.13 as I move forward in the commit history. If I don't understand a change the author made in a commit, I consult the ember api documentation. It's a slow, but rewarding process. I heard that the Ember CLI book is good but it's 30 bucks so I'm waiting for payday to see.  Last time I used emberjs for anything practical was before 1.0 so it's all outdated. I feel like we are in similar boats.

http://embercasts.com and other google resources might help but the cli book is https://leanpub.com/ember-cli-101 what I've heard most good things about. 

Ok, the consensus seems to be the ember-cli-101 book.  I may check it out.  I also found out about ryanlabouve.com which has a couple screencasts on wiring up emberjs apps.  I think I'll head there first and then purchase the book.  Go with guides.emberjs.com for the basic stuff, best scenario: you're writing an ember application for a small project. 

You'll see soon, that the guides aren't good enough and you have to read the docs, SO or discuss.emberjs.com pretty quickly. I would recommend ember-cli-101 as well.

You could always head over to http://discuss.emberjs.com/ (or stackoverflow) for questions.If you have to learn it now then Ember CLI 101 would get my vote but I'd actually recommend waiting 2-3 months if you can because 2.0 is due to change quite a few things and hopefully some more up to date guides will emerge.

There is quite a lot of the 1.x approach that is being either deprecated or removed and you may just end up confused/frustrated.

If you need something soon then by all means dive in but I've found the initial Ember learning curve pretty steep due to the lack of up to date reading/guides so it might not be the best time to start.TeamTreeHouse has an ember course, which you can do in their free trial period."
2015-06-29 15:03:42;Building a Drag n Drop tool with Rails and Ember-CLI Part II;Beware: this method uses *Ember.View*, which is deprecated as of 1.13.0. [This link](http://emberjs.com/deprecations/v1.x/#toc_ember-view) might serve as a bit of a guide on how to migrate it toward a component-centric approach.
2015-07-10 13:15:11;Dropping my book price to $1 (limited time offer);"[deleted]Wow, that's really nice of you. 
I've bought the book last month on a discount (I think it was like 15$ or something) and I thought it was a good bargain :)

Thanks for your efforts with the book, looking forward to finish reading the book and for the updates on Ember 2.0! Go bulies!

P.S - Funny enough, I was watching your Wicked Good Ember talk at lunch :P. [deleted]Really can't wait for the book to be updated to accommodate Ember 2.0!Heh, I bought this book and a few other Ember resources at full price. Never got around to using Ember due to the various issues. Ember 2.0 looks promising.Already a proud owner. Looking forward to the 2.0 updates!If only leanpub would let me actually purchase it... keeps saying to try again.  :(Awesome! I bought it last month, well worth it then too!I made the company buy it and was pretty good, definitely helped me catch up back from the my regular Ember/EAK days. So this was really useful.

Decided to chip in and get it today as well. Not much, but it's something. Thanks!Just curious, I also bought the book a while ago, so now I'm wondering: with leanpub, do you also get to download the updated version?

Also: let me know if you need a proofreader, I'd be glad to help out!I bought it several months ago along with the Node Bundle; very good book. If I didn't already have a copy, I'd get it today.Looks like I picked the perfect day to join this sub—thanks, looking forward to reading this!I buyed it for $1, I never did Ember or JS so its like a blind purchase, guess I read it in spare time, see if I can learn anything.Wow. Thank you! Bought!Bought this full price and love it.  It's something I recommend to everyone who wants to learn Ember, or even just reenforce their Ember knowledge.Damn, bought it at full price a few weeks ago and haven't read it yet :(.

Regardless, such a great deal."
2015-07-09 17:52:05;Merging Rails and ember-cli Pt III;
2015-07-08 22:42:01;ember-cli 1.13.0 released;For everyone who doesn't read the changelog, Brocfile.js has been deprecated. There's a transition guide here: https://github.com/ember-cli/ember-cli/blob/master/TRANSITION.mdDang. I'm so behind the times. Here I am using 0.2.7. JK. At least the version change is not nearly as big as the upcoming JRuby 9000 :)Ember-CLI 1.13.1 released. https://github.com/ember-cli/ember-cli/releases/tag/v1.13.1Man this update threw a bunch of deprecation warnings.
2015-07-08 17:05:11;Using dotEnv to store your configuration in the environment and keep your secrets safe.;
2015-07-08 16:13:15;BuildLab: Mastering Meta Tags;
2015-07-17 07:46:40;Styling EmberJS with Bootstrap;"Nice quick intro article to Ember & Bootstrap. Couple suggestions for people following along so you can get the same thing on your machine that is shown in screenshots.

* When you edit */app/templates/application.hbs*, it needs to have an {{outlet}} in there, otherwise you will be a sad Tomster.

* The author also casually skips over the link-to helpers in the text (even though they're in the git repo code), which can be confusing if you're really a n00b.Thank you! This is exactly what I needed. I was familiar with ember, but not the ember-cli over a year ago. This was a great refresher and introduction to ember and bootstrap regarding setting up the project. The only thing missing was using LESS instead of SASS."
2015-07-17 06:52:45;Ember Job Board;I'm glad to see there are companies looking for Ember devs. Too bad there isn't many remote jobs. It looks like you'll have to move to the bay area, Boulder, Austin or Boston to find a job. This isn't really news, it's been there for a while now. 
2015-07-16 23:54:12;How do I secure my Ember frontend / Rails backend setup?;You could also look at libraries that implement jwt tokens.  Provided you're using tls, it really simplifies the authorization problem when you can just send a secure token in the header instead of relying on cookies. From what I understand CSRF mitigation is not needed when using tokens for authentication/authorization: http://stackoverflow.com/questions/21357182/csrf-token-necessary-when-using-stateless-sessionless-authentication[deleted]
2015-07-15 23:05:08;The Pragmatic Bookshelf | Deliver Audacious Web Apps with Ember 2 (beta ebook);
2015-07-15 23:01:07;EmberSherpa is doing an AMA via Github;
2015-07-24 19:07:34;New Addon to Help Tame Deprecation Spew in Ember 1.13;
2015-07-24 19:05:17;Using bare arguments with Ember components;
2015-07-24 07:57:37;Sample Skeleton Application using EmberJS and Ember Paper;
2015-07-23 10:09:15;Ember Liquid Fire 0.21.0 released;
2015-07-23 03:02:39;Pick dates with ember-pikaday.;
2015-07-31 18:55:37;Ember.js 1.13.6 released. And there are even more deprecations.;"Can we get a Helper.helper helper?I am still fairly new to Ember, just purchased this course - very well presented, concise, good visuals - helped to connect a few dots for me. It is fairly beginner level, but covers all the things you'd need to build a new Ember app with best practises. 

Would love to see video tutorials, or an advanced course add on!
"
2015-07-31 16:08:53;We just released an addon: ember-hold-button - avoid intrusive modals;We actually also just released another project too - [ember-content-editable](https://github.com/AddJam/ember-content-editable) - a contenteditable component for ember-cli that you can use in place of wonky autoresizing textareas. Supports standard input/textarea stuff like value and placeholder bindings.I like it! Nice job.
2015-07-31 03:23:22;ember-cli 1.13.6 released;"What's up with the ""this will all end in tears"" comment?"
2015-07-30 08:09:29;ember-cli 1.13.5 released;"1.13.6 is already out!

https://github.com/ember-cli/ember-cli/releases/tag/v1.13.6A PR to fix it has been merged into master this morning. FYI there is a regression bug along with the new multiple install feature: https://github.com/ember-cli/ember-cli/issues/4551

"
2015-07-30 00:34:56;What's the ember way when dealing with static content?;"ember-cli has the public directory for static content.Probably best to have them within ember I don't see any cost with that. Other option is to serve the ember app and static pages from within the rails appWhere are you hosting the content? Do you have Nginx or Apache proxying requests to it? If so, you should serve the static content from there. Rails (and any other app server) are really meant for dynamic content. Nginx and Apache are awesome at serving static content.Packaging static pages as handlebars inside ember will have following issues:
1. No seo listing for pages which are dynamic routes at client
2. If there are huge number of such pages then there will be forever growing size and needless blame put on load time of a single pager app.

Last thing to consider is if you let Ember JS (or overall full application JS) to load into all such static pages. This is also bad as it will increase load time of dominantly static pages. But if you are are ok with this price then best solution is to add the dead routes (or NO-OP routes for all the static pages) and have a switch to a route set under HAML/ERB at Rails.

So, when Ember loads application route and checks the default page it just loads route for that page and keep quiet. So there is Ember running on all pages an still static pages have all SEO advantage and get indexed. Also JS does not get bloated on static content change.

Only thing to consider is this:
you load a page
http://mydomain.com/privacy/#/privacy
on some click (something arbitrary)
http://mydomain.com/privacy/#/dashboard (this might happen but if its well managed it can be avoided by needing redirects on some specific pages)

"
2015-08-07 05:00:33;"How to ""lens"" arrays using this.get and the @each helper";"I'd also use `mapBy` but for multi-prop selecting that's cool @IHeartMustardI think this syntax is now actually deprecated https://github.com/emberjs/ember.js/pull/11994I'm pretty sure this is was easier to do with `.mapBy`:

```
this.get('someArray').mapBy('otherProp') 
```

That outputs the same array of property values but is way cleaner to write. You can use it as a computed macro, too, which can be handy sometimes. I'd type that one out but I'm on my phone. [deleted]"
2015-08-06 19:18:26;Can someone help me debug this Watchman issue?;"actually I just got it to watch that particular directory but now I get this error:

events.js:85
      throw er; // Unhandled 'error' event
            ^
Error: watch EMFILE
    at exports._errnoException (util.js:746:11)
    at FSEvent.FSWatcher._handle.onchange (fs.js:1157:26)I wish I could help, but I need more info... Which version of Ember CLI? How did you install watchman?"
2015-08-06 18:03:09;Ember Data 2.0 beta 1 released;"Excellent!  Long awaiting a way to access the ""deleted.uncommitted"" :)"
2015-08-06 16:59:09;Spotlight: Ember Closure Actions;
2015-08-06 13:33:24;Ember Data 1.13.8 released;
2015-08-14 23:00:50;Ember.Land #15: Deprecation Leapfrog;
2015-08-14 14:52:36;A Beginner’s Guide to the Ember Run Loop;
2015-08-14 08:24:31;Ember Data 1.13.9 released;Hopefully they can catch up and release 2.0 soon to match all the other releases. 
2015-08-13 15:27:31;Learn about ES2015 modules and how they work together with ember-cli.;
2015-08-13 08:56:40;Ember.js 2.0 Released;"Great news. Just need a few third parties to update their shit. I'm looking at you ember data sails adapter! I'm going to make the unpopular comment and say that I do not like this release. Every problem I've ever had in Ember that wasn't just me derping (which, let's be honest, was almost all of it) was caused by version conflicts between the core and ""second party"" library, mostly Ember Data.

Ember 2.0 and on are supposed to be a lock-step release of Ember and companion products. Ember, Ember CLI, Ember Data, Liquid Fire, List View, etc. I say ""etc"" because I can't remember if I've missed any.

Now? Ember is out, but Ember Data is ""soon"". ListView is a future release now, 2.1 or 2.2, while Liquid Fire's status could be listed as ""¯\_(ツ)_/¯"".

The Emberconf keynote made a big deal of how everything would be out at the same time, and kept together. They made a big deal out of it because it was a big deal.

If I start an Ember project right now I'm in version limbo and that's exactly where I don't want to be.

Honestly, the 2.0 is a nice milestone, but I'd have rather seen it delayed until at **least** Ember Data was released.Didn't expect that so soon! Pretty cool that it doesn't break a 1.13.7 app without deprecations. Now I just need to squash these few deps."
2015-08-21 17:34:37;Ember Data 1.13.11 released;
2015-08-21 00:19:02;Ember Data 1.13.10 released;
2015-08-21 00:12:00;Ember Data 2.0 released;
2015-08-20 21:13:59;Sign up for the online Ember Global Meetup beginning Sept 12;
2015-08-20 18:50:06;Learn the nine built-in validations in the ember-validations library.;
2015-08-28 02:45:25;For those struggling with ActiveModelSerializers, I made a pull request that re-enables the ability to do side loading in the most recent AMS code.;"I'm going the JSONAPI route, which [@jfelchner](https://twitter.com/jfelchner) made a pull request [fixing the serialization discrepancy between multi-word models/attributes](https://github.com/rails-api/active_model_serializers/pull/1029) for. If I'd have found it earlier it would've saved me a good hour of futzing around.

Now if only you could limit the depth of `includes: ['blah']` calls. I've got a situation where two associated models share a relationship with another model, so it ends up looking for that third model every time the second model references it.

Basically:

|Table|Contains relationship to(table)|
|------|----------------------------------|
|Match|`has_many :games belongs_to :blue_team/red_team/winner`             |
|Game|`belongs_to :match belongs_to blue_team/red_team/winner`|
|Team|no real association, but effectively can lookup relations to both|

So when I render a `@match, includes: %w(games blue_team red_team winner)`, if the match has 5 games- it does 18 lookups for the teams. 3 for the match, 15 for the 5 games.

Now, this adds at most a few milliseconds to the API call. But it pollutes the hell out of the logs and in general just feels really sloppy, so I wish there was a way around it."
2015-08-27 17:22:06;Ember Twiddle 0.4.9 released;
2015-08-25 13:26:48;Congratulations to Robert Jackson on completing a two year Github streak!;"RWJ is the conductor of all things Ember; the maestro of releases, coordinator of the community and so much more.

His graph is a reflection of dedication and commitment and I'd like to say thanks! Sweet graph bro!Wow, congratulations RWJ! And thank you for all you've done.Not saying this is the case for RWJ - I've seen firsthand how constantly-involved he is in several projects, but I thought it's worth pointing out that you can fake this with a little git trickery.

There are several projects out there that demonstrate this, such as https://github.com/gelstudios/gitfitiImpressive. Got to thank this man for helping out the community so much. Thanks!What a beast. Such a great asset to the Ember community.[deleted]"
2015-08-25 12:48:29;Learn Ember Run Loop with This Handy Guide, Part 1 of 4;
2015-08-24 19:23:41;What are some best practices regarding starting a new app with EmberJS?;"Don't you mean `action up`?

Here's a short list off of the top of my head:

* stick to ""components"" and minimize use of ""controllers""
* try to befriend Ember-Data instead of fighting it
* 3rd party addons don't always stay up to date; fork, fix &amp; move on; and if you have the bandwidth, write tests for your changes and make a PR upstream
* almost everything can be extended from adapters, serializers down to Ember objects... Leverage this when external APIs can't be consistent
* I can't stress enough the practice of `data down, action up`... this eliminates a whole class of bugs that you don't even need to know about!
* [computed property macros](https://www.emberscreencasts.com/posts/9-revised-computed-property-macros) are your friends!
* always create files via Ember CLI if it allows you to (as of v1.13.8, it doesn't allow for `instance-initializers` yet, however); like wise, delete them with Ember CLI...
* minimize use of `aMethod: function() {...}.observes('...')` or Stefan Penner (Ember core team) will hunt you down. He has some good rationales explained here: https://www.youtube.com/watch?v=vvZEddrClAQ
* template `partials` inherit data objects straight from controllers (no data passing necessary) where as with `components`, you need to pass data ""down"" into them if you need them
* [ember-truthy-helpers](https://github.com/jmurphyau/ember-truth-helpers) is your friend 
* some things are still not intuitive to do in Ember, e.g. radio buttons/button groups, mutually exclusive checkboxes, pagination... etc (or maybe I'd been doing it wrong)
* get to understand Ember runloop, promises and how Ember deals with events (tip: It likes to have control over events; minimize direct use of jQuery if you can; but if you do have to use jQuery, understand what consequences that may bring.... e.g. events out of sync with Ember, esp. async stuff; make sure you loop Ember in on them if you can)
* learn Node modules and ES2015 syntax
* when you google for Ember-related information, scope your search within the past 3-6 months of the release of the version you are using. For example, if you're using 1.13.x, since 1.13 was released around mid-June of 2015, only go as far back as Jan 2015 to find the most relevant results or else you'll find unhelpful answers
* Ember source code actually offers a lot of hint as to what a method is doing... you should probably hit that first before googling or even reading the docs; and when you do, be sure you're looking at the right version of the source code...
* if you have a sizable team (5+ devs), Ember is an excellent choice because it enforces code standards and conventions (or more easily enforceable than, say, Backbone); stick to the Ember way for best chances of future-proofing
* some devs frown upon the fast pace of Ember and would rather stick to a framework that releases on a slower schedule -- my counter argument to that is: Because Ember is agile, we, as developers, get to play with new toys, new ways of thinking and new techniques without switching frameworks (e.g. components, Glitter's answer to React... etc). And because APIs are only deprecated and not removed within minor releases, you're still safe to upgrade most of the time &amp; can take advantage of the Shiny stuff
* I also strongly advise new devs coming to Ember to leverage paid resources like [Ember Screencasts](https://www.emberscreencasts.com/), [Ember-CLI 101](https://leanpub.com/ember-cli-101) and others. They'd done the homework of putting together something that explain things in a clear &amp; concise way that won't waste your time. There are also tons of free conference videos posted on Youtube (3-6 month search scope rule applies)
* Subscribe to newsletters like [Ember Weekly](http://emberweekly.com/), [Ember Land](http://ember.land/) and more to stay up to date... shit moves fast around here... better keep up!
* Ember core team members go to your local meet ups more frequently than you think (well, depends on where you live, I guess)... If you need something answered, you can't beat those meet ups; if you can't attend, find those meet up videos on Youtube... there are tons of those

I'm sure there's more... But I'm beat... Hopefully this helps...- Don't use coffeescript, do use ES6
- Don't use emberscript, do use ES6
- Don't use emblem, do use handlebars (ugh, I know)
- Do use [ember-suave](https://github.com/dockyard/ember-suave)
- [Ember Observer](http://emberobserver.com) is your friend
- However, be judicious and minimize the use of addons, each add-on you install is a liability that might hold your whole project back from an important upgrade.[Pods](http://cball.me/organize-your-ember-app-with-pods/)."
2015-09-04 17:00:23;Use ember-hold-button to better control time-sensitive actions.;
2015-09-04 02:32:37;Using Ember Data with Firebase;
2015-09-04 00:17:32;How to refactor your Ember code [From Rails to Ember];The rails to ember blog is a huge help for rails deps moving to ember. This particular article though goes beyond just translating rails conventions and demonstrates some useful patterns one could explore.
2015-09-03 21:23:47;Ember Vocabulary by Kyle Coberly;You linked to the 33rd slide. Was that intentional?
2015-09-03 18:51:31;Show off your addon with Github pages;
2015-09-11 18:46:09;Ember Library #2: The Reference Section;
2015-09-11 07:26:24;Server-Side Validation in Your Ember Application;
2015-09-11 07:24:12;Authenticating with Ember-Simple-Auth;
2015-09-11 07:19:02;Ember Screencasts 72 - Introduction to Ember Actions;
2015-09-11 07:15:46;Ember Data 1.13.12 released;
2015-09-17 20:21:58;Creating Reusable Web Components in Ember.js 2.0;
2015-09-17 18:55:37;Ember Screencast #74 - ember-modal-dialog;
2015-09-17 14:00:52;Securing your Ember Application (Part 1);Part 2: https://vimeo.com/139197840
2015-09-17 12:33:55;Test-Driving Ember.js Models;
2015-09-17 08:45:12;atom-ember-tabs makes it easier to use atom.io when using pods;
2015-09-25 16:55:01;[Seeds.js] Example Ember 2 App with Authentication and Admin Section;The code for the app is available on [GitHub](https://github.com/terminalvelocity/blog-seeds-example-application)If you don't mind me asking, what's the point of seeds.js and its difference from ember?
2015-09-25 14:15:15;Reminder: Global Ember Meetup is tomorrow;
2015-09-24 22:49:53;Authenticating against multiple services with Torii;
2015-09-23 22:39:29;Which Safari Mobile issues should I be aware of?;"There is an issue with Object.create in a ""use strict"" context. There is also this really fun issue in iOS 8. If you have an input with a maxlength, then you can write more characters just by moving the caret to the middle (not the beginning nor the end) of the text.Also working on mobile website in ember have you compiled any resources that specifically related to ember on mobile browsers that were helpful?Here's another one I ran into where I needed to suppress the default select behavior on mobile browsers. The top item works in Chrome and Firefox, but not in Safari:

BEFORE
html *{
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

AFTER
html *:not(input) {
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}"
2015-09-23 19:43:07;Interesting production open source project w/ DB;
2015-10-02 19:58:25;Model-based sidebars in Ember;wish i saw this article when i first started using ember. so simple and easy yet it didn't come to me. 
2015-10-02 10:25:44;20% off of Rock and Roll with Ember.js 2.0 until Monday, Oct 5.;"I'm noticing a few errors in the book.

Firstly on page 38:

    window.songs.get('content').pushObject(newSong);

That's not going to change anything running it from the console.

If you want that to work you need to change this:

    export default Ember.Controller.extend({ songs: songs.get('sortedContent')
    });

To:

    export default Ember.Controller.extend({ songs: songs });

Finally you change the loop to use the computed props

    {{#each songs.sortedContent as |song|}}
         (...)
    {{/each}}

Finally on page 39 you say to run the following as a sanity check

    newSong.set('rating', 1)

It's just missing the `window` prefix.

These might not be ideal solutions, after all I bought the book because I don't know ember."
2015-10-01 14:25:49;Router Service for Ember Apps;
2015-10-01 02:48:05;Anyone brave enough to install El Capitan on there dev machine ?;I've been using El Capitan full-time since the developer preview came out and haven't had any issues. YMMV though. I found this article which might be a bit helpful http://pointlessramblings.com/posts/El_Capitan/ for devs, though I haven't installed it yet. Waiting for the weekend for that so I can easily handle any problems.If you plan to use Homebrew: https://github.com/Homebrew/homebrew/blob/master/share/doc/homebrew/El_Capitan_and_Homebrew.mdUsing El Capitan on my dev machine, haven't run into any issues here.I've had some trouble with Xcode, but nothing as far as Ember development goes.
2015-09-30 16:03:42;The State of JavaScript on Android in 2015 is... poor [Jeff Atwood, Discourse];"I was shocked to find my fairly lightweight Ember app to be sluggish on Android; a decent quad core phone. Hadn't realised it since I had developed the app mostly on iOS and desktop simulators. Seems this problem plagues not just Ember, but all JS heavy web apps.

Have you noticed this issue and how do you tackle this problem?"
2015-10-09 13:09:35;Routable modal dialog in Ember.js;
2015-10-09 01:17:06;[Help] Acceptance tests fail because of async/await in my model hooks;Where are you getting server from? Does it use Ember.Object? If so, then setting those properties is asynchronous. You'd need to wrap them in a run().
2015-10-08 16:41:31;Frontend Master's Ember 2.0 Workshop LIVE;These are great videos, goes over a lot of 2.0 stuff.
2015-10-08 14:52:44;Ember Screencast #80- Inject Code with Application Initializers;
2015-10-07 20:33:20;FastBoot and Beyond by Godfrey Chan @ EmberPDX;
2015-10-16 14:19:54;Creating a Todo Application using the Phoenix Framework and Ember.js;
2015-10-16 14:17:40;Ember simple auth 1.0 released!;Excellent! 
2015-10-16 13:41:53;Stubbing a JSON API spec API with ember-cli-mirage;
2015-10-15 15:21:44;Ember Services are amazing. Learn how to use them.;Seriously, services are amazing. I plan on refactoring to use them a lot more.
2015-10-14 15:05:08;Using ES7 Async Functions In Ember;
2015-10-23 11:49:33;Creating a Sortable Table Component in Ember.js;
2015-10-23 05:58:08;Avoid wrapping global vendor stuff in ember cli;
2015-10-22 07:54:22;Can explain why it is better to put data interaction rather in the components itself?;"It's all about re-usability. He probably could have used a better, more generic example. Instead of ""bears-list"", it would have been better for him to develop an ""editable-list"" component. The ""editable-list"" component would have no reference to bears because it's generic. So in the same template you could have multiple editable-lists managing different things. 

    <h2>Bears</h2>
    {{editable-list model=model.bears action=""saveTheBears""}} 

    <h2>Birds</h2>
    {{editable-list model=model.birds action=""saveTheBirds""}}

The above assumes the model hook of your application route eventually returns some like this:

    {
        ""bears"": [""grizzly"", ""polar"", ""brown""],
        ""birds"": [""bluejay"", ""mockingbird"", ""eagle""]
    }Since you didn't link to a specific part of the video, I'm not sure what part you mean (sorry didn't went through the video to find out).

Data Interaction being in the route has some advantages. The first one being that the some hooks (like model, aftermodel) in the route are ""promise-aware"" meaning that they will wait for that promise to resolve (i.e. your data being loaded) before continuing to process.

By the time your templates are rendered, you know your data has arrived.

Components can load data, it's a choice. I would recommend reading this article on [Ember Igniter](http://emberigniter.com/should-components-load-data/) if you want a discussion about that."
2015-10-22 01:43:42;Perforator - Ember Performance Chrome Extension;"It breaks my app, that use a lot of animations for transitions between routes.[Submitted this to the [extension support page](https://chrome.google.com/webstore/detail/perforator-ember-performa/hfdilejiecmablifdkololalnbbmdcdb/support) as well, but since apparently the Google Chrome people doesn't understand how the Web is supposed to work I can't link to that comment.]

Getting a weird error when the extension is enabled and I reload the app.

In content-script.js:

      case 'HAS_EMBER':
        if (request.hasEmber !== undefined) {
          hasEmber = request.hasEmber;
        }
        sendResponse({ hasEmber });
        break;

On the sendResponse line, I get ""Uncaught SyntaxError: Unexpected token }""For some reason it's not showing the timer tags for me on Chrome 48.0.2541.0 dev with Ember 2.1.0 dev mode. Shows the data in the console though."
2015-10-21 10:18:23;Ember Data: working with custom API endpoints;
2015-10-30 17:08:18;Ember Services: Logging Route Transitions;
2015-10-29 10:37:38;Working Ember-Cli/Rails guide for beginner;"I don't have any suggestions for worthwhile free resources, but since nobody else has responded: [This book](https://pragprog.com/book/mwjsember/deliver-audacious-web-apps-with-ember-2) is pretty good.I'm not a rails guy but [this site](http://fromrailstoember.com/) has helped me a few times.

Also, [ember-cli-101](https://leanpub.com/ember-cli-101) is very good book. Although it hasn't been updated with Ember 2.0 in mind it's updated till 1.13.X which is pretty close and the examples if I remember correctly use rails.if your interested in a tutorial with rails and ember you might find this one interesting http://emberigniter.com/building-user-interface-around-ember-data-app/"
2015-10-28 21:47:50;Fastboot proofing your Ember addon;
2015-10-28 00:17:28;CSS Module (ICSS) equivalent for Ember.js;"There was a [recent link][1] posted on /r/javascript about doing styles completely in javascript, which made me cringe some what (I have bad memories of attempting this), but it turns out it was a more maintainable than I first anticipated. As they solve the following issues with CSS.

- Global Namespaces
- Dependencies
- Dead Code Elimination
- Magnification
- Sharing Constants
- Non-Deterministic Resolution
- Isolation

However you have to inline it in your component (react), but [someone brought up ICSS in the comments][2], which gave you all the benefits of the proposed solutions in the original link, without inlining your rules in javascript.

However both of these implementation are tied to React.js, so I did a quick google and found this. _I haven't tried it but it looks promising_, and works pretty much like ICSS (plus you can use sass on top).

__TL;DR__: no more css rules like`.namespace__component__element--state`

[1]: https://www.reddit.com/r/javascript/comments/3qean7/a_very_thoughtprovoking_talk_that_attempts_to/
[2]: https://www.reddit.com/r/javascript/comments/3qean7/a_very_thoughtprovoking_talk_that_attempts_to/cwei2wkI was under the impression that the child class names would also be namespaced. As it turns out it wouldn't. This solves clashing styles across components but not when components are nested. Am I missing something here or is my understanding of CSS is incorrect?Okay so, I used the library and it looks like it's still a bit immature and needs to bring it up to speed with the react alternatives. Issues I ran into

- doesn't work out of the book with a fresh app, you need to have at least one style.css in one of your pod directories.
- doesn't work well with route pods, mostly well with component pods, but mangles any route pod style rules you define

It's at a pre 1.0.0 version at 0.1.6 at the moment, so it's still quite immature. So if you're keen, consider contributing :)"
2015-10-27 20:30:28;Learning Ember js: The very first App in Ember js. Lesson 1.;No ObjectController, please.
2015-11-06 21:36:21;Ghost & Ember @ EmberCamp;
2015-11-06 17:14:13;Making Ember-101 Creative Commons;"/u/abuiles deserves a shoutout!I was *just* looking through the latest version and saw in the intro that it was CC. I was like ""wait, really? Did I know that?""

Very cool of the author. :)I bought this book a few months ago for my team to read, and it's fantastic.  Thanks so much for making it open to all, it's a great learning resource.Sincerely- this is the best tutorial for Ember out there by a longshot. Thanks Adolfo, this is an awesome contribution to the community."
2015-11-06 15:54:46;Help dealing with prefetch data in a route;
2015-11-05 18:27:18;Testing Serializers in Ember - The JS Guy;
2015-11-03 21:57:25;Test Double | Our Thinking | Deploying Ember to AWS CloudFront.;
2015-11-13 15:09:37;Ember-CLI 1.13.12 released.;Can anyone confirm if this work OK with node 5?
2015-11-13 15:05:29;Ember Data canary is now an ember-cli addon;So what does that mean for everyone?
2015-11-13 15:03:49;A little trip down memory lane...;
2015-11-13 10:35:53;Server side rendering using Serender and Express;How does this differ to FastBoot?
2015-11-12 21:42:49;X-post: JSON API Specification Made Easy : golang;
2015-11-20 17:01:55;A comparison & performance benchmark between React's Virtual DOM, Incremental DOM and Ember’s Glimmer. Fight;...is that a Goatse icon?
2015-11-19 12:49:36;Ember-CLI 1.13.13 released.;Does anyone know when Ember CLI 2.0 will be out? It's a bit worrying that the version numbers of the libraries in the Ember ecosystem are so far away from one another. I thought one of the main selling points of 2.X was that CLI, Ember.js, Ember Data and Liquid Fire would sync up their releases?Will this version of Ember-cli use ember 2.0?
2015-11-18 21:30:23;Ember 2.0 not live reloading;"Found my answer here: https://github.com/ember-cli/ember-cli/issues/5123

Basically, I just have to run 'ember server --host 0.0.0.0' and live reload works as expected.  Apparently it's a bug on Windows they're still working on."
2015-11-18 15:59:59;Turn Visual Studio Code into an Ember Cli IDE;
2015-11-18 14:38:34;Ember Data 2.2 released;It's nice to see Ember Data in rough sync on releases with Ember. I had been worried previously that this wouldn't happen, and that important components would be left unloved.
2015-11-26 21:03:21;I'm publishing a new book!;"Could you give a little more info about the book?
I am considering getting it but the info is a little scarce. 
Will this book in essence act as an extension of your previous book, but this time we will be focusing on getting a Rails backend to communicate with the EmberJS frontend? Nice to see new work from you Adolfo. I bought Ember 101 (or Ember CLI 101 at the time) and I'm a fan.

Is it just about the current spec of JSONAPI or will it contain tips and tricks for edge cases ( like [this one](https://github.com/json-api/json-api/issues/795) ) that we probably will encounter in real life? :)"
2015-11-25 18:02:40;Global Ember Meetup Videos;Awesome! Thanks for posting.
2015-11-25 13:01:48;Ember newbie needs to find resources to learn.;"If you're looking for videos, [emberscreencasts.com ](https://www.emberscreencasts.com/) are very contemporary and regularly updated, though some of the content is paywalled.

The definitive resource is probably the [Ember CLI 101 ebook](https://leanpub.com/ember-cli-101), which you can get pretty cheaply. Free, at minimum. I very highly recommend it, it's probably taught me the most of anything. I understand the [Rock and Roll with Ember](http://balinterdi.com/rock-and-roll-with-emberjs/) book is also good, but I can't recommend it from any personal experience.I'd do the following:

- Read http://guides.emberjs.com/v2.2.0/ and read up on any non-Ember concepts you don't understand (like ES6)

- Follow Ember CLI 101 (I preferred this to Rock and Roll with Ember which isn't as well written IMO and 101 is also free now)

- If you are still interested then pay to subscribe to emberscreencasts, watch them all as they are all short but cover a heap of stuff very very well

- Start building something!

This reddit, http://discuss.emberjs.com/ and https://embercommunity.slack.com/ are the best places to ask for help. There's also Ember Global Meetup and various videos on youtube (stick to those <6 months old if possible).

I will warn you in advance that you will have moments of ""wow this is awesome"" as well as ""why why why is something so simple so hard?!"". The value of Ember is in the stuff it does for you but it takes quite a while to wrap your head around it before those time-savings kick in and it's not perfect (but then no framework is).[emberwatch.com](http://emberwatch.com) also has some handy resources.

If you get stuck, the [Ember Slack chat](https://ember-community-slackin.herokuapp.com/) is also great. The ember community is very friendly and treat beginners kindly. Check out [Discover Ember 2](https://www.ludu.co/course/ember). It's an up-to-date course that uses pods, components, liquid-fire and other modern best practices. :-)"
2015-11-24 19:01:47;Rock and Roll with Ember.js updated to Ember 2.2.0;
2015-11-24 02:50:47;How do you access the `links` property specified by JSON API?;I've implemented Lux's solution here http://stackoverflow.com/questions/32336710/how-to-use-jsonapi-pagination-with-ember-data-1-13 which copies the data from the links object to the meta object in the adapter, was pretty straightforward and is easy to remove once support is fully baked in, see this issue https://github.com/emberjs/data/issues/2905
2015-12-04 17:00:41;Powering your Ember apps with Rails' ActionCable;I thought Puma had a connection time limit of 30 seconds?
2015-12-03 22:30:54;Anyone unit testing in EmberCLI without a browser?;"Ember-CLI already is!

`ember test --server`

Runs it all in the terminal. It's actually really sweet in there too, and uses whatever PhantomJS is generally called. It's what I use 90% of the time.

It'll also launch up your browser tests by default, but you can disable that by removing Chrome from your **testem.json** file at the root of your Ember-CLI project. You can always add them back, throw Firefox in, whatever from here, Testem is pretty awesome.I feel you. Our pre cli app had a test framework like yours. We added jsdom so that we could unit test everything. This is definitely one of my pet peves about ember-cli testing.Thinking about this some more, it occurs to me that this desire goes hand-and-hand with the work the core team is putting into FastBoot. I'll bet the core team has something to say about this... I'll hit up the official Ember forum and see if I can't get one of them to bite.I am trying the same right now, but currently not too successful. I assume models testing on pure nodejs should be possible. Currently I can't get the ember.js from bower-components to load (which is what is closest to real life, therefore I am using it). Another not so fun problem is also to use the babel modules that ember does use, which is not nice either, but I got it working ... someone got an example project somewhere?"
2015-12-03 20:09:11;Ember.js — Goodbye MVC (Part 1) — The Ember Way;"I love this article. It brings really good memories about how MVC used to be the king of development.

Looks like minimalist implementation are starting to be more and more relevant. Specially with ES2015 specs like modules and classes."
2015-12-03 14:21:25;EmberSherpa - List of Open Source Ember Apps;Really nice list of apps. It's really cool to poke around the source code and find out how other people are solving their problems.http://builtwithember.io has more and is better. Not sure we need a repo for that list.
2015-12-02 22:22:55;Ember and ES7 decorators;"This is not a good solution to your linter not supporting a feature:

    //start-non-standard
    @computed('firstName', 'lastName')
    //end-non-standard

Use [babel-eslint](https://github.com/babel/babel-eslint) instead (instructions in readme)This is amazing and I'm so looking forward to this becoming the norm. Does anyone know the status of decorators for ES7? Is it likely to change? Also when that happens, will Ember support it natively?"
2015-12-11 18:18:02;EmberJS support is available for IntelliJ IDEA / WebStorm / RubyMine!;I can only assume this carries through to WebStorm based IDEs, such as PhpStorm. Good stuff!
2015-12-11 17:40:32;Debugging Ember-cli Build Times;
2015-12-11 17:37:37;Offline Web Applications with CouchDB, PouchDB and Ember CLI;
2015-12-10 19:04:22;Mozilla Awards Discourse $25,000 as part of its Open Source Support;
2015-12-10 11:28:17;Lowest Common Ancestor by Sam Selikoff;"This is the article that finally made ""data down, actions up"" click for me. So simple when presented this way, and I love it!"
2015-12-18 18:30:41;Introducing ember-cli-toolbelts;
2015-12-18 16:16:03;Complex Components in Ember.js - Part 1 - Analyzing user flows;
2015-12-18 16:15:32;Ember UI 1.0.0beta1 released;
2015-12-18 08:54:46;Ember and ES7: async / await;
2015-12-16 21:12:36;Ember GraphQL Adapter;"Since I had to Google it: https://facebook.github.io/react/blog/2015/05/01/graphql-introduction.htmlso do we need anymore the model() in our routes? 
i don't see any code in the ember part just for rails"
2015-12-25 16:05:33;Liquid Fire hooks that fire when your animations complete;I had a really hard time parsing that title.
2015-12-23 11:20:09;Testing Responsive Ember Applications;
2015-12-22 22:04:13;Speakers announced for EmberConf;
2015-12-22 18:22:05;Grouping select options in Ember 2.0 with <optgroup>;
2015-12-22 17:42:16;TodoMVC rewritten for Ember 2;
2015-12-31 16:55:45;How do Ember Data Relationships work? I hasMany answers.;
2015-12-31 02:30:17;See the structure behind your Ember Data models. Get to the RootState of it.;
2015-12-30 21:37:57;Ember Twiddle 0.5.0 released with ability to do testing;
2015-12-30 16:09:07;Make (some of) your (customer’s) mistakes go away with rollbackAttributes;
2015-12-30 09:04:35;[Question] dember generate blueprint <blueprint-name> --in-repo-addon <in-repo-addon-name> bug?;OMG. How to report a bug: http://www.chiark.greenend.org.uk/~sgtatham/bugs.html
2016-01-07 21:27:41;Ember isn't Rails;
2016-01-07 18:09:33;Write Your Next Web App With Ember CLI;
2016-01-05 19:28:45;Ember 2.0 Example App With Firebase And Login Authentication;
2016-01-05 15:54:52;Help run the Ember Community Survey this year, and work with the fine folk at 201 Created;
2016-01-04 14:24:49;Ember Land #17: They're back;Where are the first 16?
2016-01-15 21:35:50;Ember.js: Security Releases - Ember 1.11.4, 1.12.2, 1.13.12, 2.0.3, 2.1.2, 2.2.1;
2016-01-15 15:26:11;Codemods: Path to painless upgrades in Ember;
2016-01-15 02:30:02;[CVE-2015-7565] XSS Vulnerability in Ember.js with User-Supplied JSON;
2016-01-14 19:42:28;Mastering Ember.js helpers: Testing;
2016-01-14 17:18:17;Mastering Ember.js helpers: Arguments;
2016-01-22 11:18:04;If I Have Learned One Thing From Ember in the Last 4 Years ...;
2016-01-21 20:31:09;Introducing embadge.io;
2016-01-21 08:54:30;Is there an EmberJS addon that runs the app in a try/catch and externally logs unhandled errors?;answered on SO
2016-01-20 23:33:24;How to Deploy an Ember CLI app to Amazon S3 or a Linux box;
2016-01-20 19:52:22;References API in Ember 2.4;
2016-01-28 15:48:12;I've been away from Ember for a while. Is fastboot production ready yet?;"You may be interested in the talk Tom Dale is giving on FastBoot at the NYC ember meetup tonight:

https://www.youtube.com/watch?v=xFTDNGZExuUIt's weird that you'd reject something because a specific component is in active development, and go to a framework that is entirely in beta.From the blog:

>Importantly, the addition of this API means FastBoot is now usable with Ember.js 2.3 stable. FastBoot itself remains experimental, however this is the first time you can use it with a release build of Ember.js. The README.md for ember-cli-fastboot is the best place to start if you want to try FastBoot.

http://emberjs.com/blog/2016/01/15/ember-2-3-released.htmlShort answer: no. Very severe limitations. For instance, Ember DOM insertion events are never fired."
2016-01-27 13:41:02;The real reason to avoid jQuery;
2016-01-26 20:25:19;Ember-CLI 1.13.15 released (Some dance to remember, some dance to forget) - 7 days ago;
2016-01-25 23:37:27;User Authentication Made Easy with Firebase;This is my first Ember tutorial. I'm hoping to get some feedback and criticism on what I've done right and what I could/should change.
2016-01-25 20:44:20;Best Places To Learn Ember.js;"I'm the writer of this post. I probably missed some good resources. Let me know below and I'll add them to the post!
"
2016-02-05 16:32:31;Ember v. 2.3.1 released;
2016-02-05 15:13:55;The 5 most common Ember Data Adapter customizations.;
2016-02-05 14:05:01;How To: Use EmberJS with Phoenix;No one's really done a great job at covering how Phoenix Channels work with Emberjs. Hope we end up seeing someone cover that soon.
2016-02-04 16:41:42;Complex Components in Ember.js - Part 2 - Towards a more reactive component;
2016-02-04 16:24:42;To Controller or Not To Controller;"Controllers are still a necessary part of Ember so you will be using them. They may be generated for you without any intervention on your part, but they're still there.

I've been taking the approach of keeping the controller as slim as possible so that there won't be much work to do to move the controller and template for a route into a routable component. This means:

    * Models are getting a bit heavier. I put all of the computed properties that used to live on the controller onto the model.
    * Actions are kept in the routes. Sometimes, you'll need to proxy your actions through the controller but I don't add any semantics here, just a one to one pass through to make clojure actions work.
   * Routes almost always return an `RSVP.hash` from their model hook. This should be all of the data you'll need and you'll then access the data as `model.foo` or `model.bar` in your template.

anyway, those are a few guiding points. Basically Models are for persistent data, Services are for long lived application state, Components are ephemeral UI pieces, Routes gather the necessary data (and _block_ on the `model` hook which is very important), and Controllers glue the Template to the Route and can be kept very thin.

However, even if you do put a lot of logic into your Controller, I think(tm) it will be very easy to migrate them to routeable components when they land. A component has 2 files, the template and the logic, and a Controller is all logic with an associated template. All you'll probably need to do is to have your Controller inherit from `Ember.RouteableComponent` (or whatever) rather than `Ember.Controller`. It's only a guess but I bet the migration is dead simple.I'm not sure if my approach is correct, but lately I've been avoiding the explicit creation of controllers entirely unless I need query params. As best I can tell this is the only place that still requires a controller in order to work - everything else can be put into a component, route or model.

It _seems_ to work very well. Whether the brains trust see this as the right way to go, I'd be very curious to know.Here's my take: http://emberigniter.com/should-we-use-controllers-ember-2.0/I'm curious as well but as from what I can gather, actions should also be managed by routes. At least that's how I do it."
2016-02-12 15:49:11;EmberConf. Who's going?;"You will have a blast! If you have a chance, I definitely recommend you sign up for some of the extracurricular activities on Monday: http://emberconf.com/register.html

This will give you an opportunity to meet new people in a smaller, fun setting before the conference, so you know a few friendly faces going into the thick of things. But if you can't make it, don't worry! Everyone is really friendly and I'm sure you'll meet people right away.

Some tips for making the most out of the experience:

1. Don't go overboard Tuesday night. It's easy to be out with new friends and overdo the drinking. Nothing worse than being hungover through the more technical talks, which in my opinion tend to be the most useful and interesting! That said, go to town Wednesday night since you can just sleep it off on the plane the next day.
2. If you use any addons or other open source tools, try to find the authors and say hello and thank them for their hard work. OSS can be thankless, but far and away the most rewarding thing about it is hearing from people at conferences how they're using the tools you've written. It's also great for them to be able to put a face to a GitHub name if you ever have any bugs you need their help fixing. ;)
3. Use Twitter to coordinate with other attendees in the evenings. People often post what they're up to using the #emberconf hashtag, so I keep a saved search of that to see what bars and restaurants people are hitting up. If they're tweeting about it it's because they want to meet new people, so don't be shy.

Lastly, please do find me and come say hello—don't feel like you're butting in on a conversation. I try to make as many introductions as I can while I'm there, since serendipitous connections have led to some seriously cool projects coming out of EmberConf. The better we know each other face-to-face, the better we can build shared tools together.

If you or anyone else has got other questions I can help answer, just let me know!I'll be there, and have been for everyone since the beginning. It's a lot of fun, you learn a lot, and meet a tonne of great people. You'll really enjoy it! I'm flying from Toronto, Ontario, as is most of the team I'm on.I'm coming from Boulder, CO. It'll be my first EmberConf, and I'm traveling solo, but I'm super excited.Hey we're coming from dc too! Me and some people from my team at work, that is.Hey, I'll be there. Looking forward to it.

Like Tom said, say hi! And as for coordinating with other attendees, there's also the #conf-emberconf channel on slack.I'll be there with 3 other devs from Envy in Orlando Fl and 2 devs from Code School. 

As Tom mentioned, stop us and say hi! We're there to help, share experiences, learn a thing or two, eat good food with nice people, and just have a good time. If you see us just talking amongst ourselves, jump in and break us up! No one will mind and probably we'll be happier for it. 

This will be our third year at emberconf, I think. The Monday events are always fun and well planned. Leah and the rest do an incredible job organizing and running the conference. I'm coming from Grande Prairie, AB. It'll also be my first EmberConf. I'm very excited for the main conference, as well as the workshop I'm in. See you there!"
2016-02-12 15:44:44;ember-concurrency is an Ember Addon that enables you to write concise, worry-free, cancellable, restartable, asynchronous tasks;"this looks really cool...I am still trying to wrap my head around it though

this line was helpful
>ember-concurrency enables you to write Tasks, which are asynchronous, cancellable operations that are bound to the lifetime of the object they live on, which means when the host object is destroyed (e.g. a component is unrendered), the task is automatically cancelled. Here is an example of a task:"
2016-02-11 22:26:10;Introduction to Liquid Fire;
2016-02-11 18:29:40;Learning Ember.js: Playing with Fieldbook API;
2016-02-11 17:32:29;"Ember.js ""Magic"" Crash Course";
2016-02-19 18:39:49;[New emberscreencast]: 118 - ember-one-way-controls addon;"Update from the addon creators:  This addon is no longer necessary or recommended in Ember 2.3.1.

On a related note, I'm going to stop recording these a month ahead of time."
2016-02-18 20:13:09;2000 Ember addons now available;Wow sweet repository. How have I never heard of this site before?
2016-02-18 00:37:12;RFC: Linking Between Engines (and Applications);
2016-02-17 16:06:39;Ember.js in 2015 and Ember London in 2016 - Jamie White;
2016-02-17 13:52:21;If we aren't using Ember data, Can we deploy emberjs apps on github pages?;It doesn't matter if you are using Ember data or not, yes you can deploy on github pages.TIL : If you deploy ember app to github pages then you must have to access it via root page. Otherwise you will get a Page not found error.
2016-02-26 22:07:23;Global Ember Meetup + Modern Web: Live in Silicon Valley May 21;
2016-02-26 15:13:43;[New free screencast] 120 - CRUD 2016 pt 2 - Read, Update, and Destroy;
2016-02-26 06:25:24;Introduction to ember-concurrency video: EmberNYC 2/25/2016;"that was amazing.- [ember-concurrency docs website](http://ember-concurrency.com)
- [online slides](http://alexmatchneer.com/ec-prezo/)The most exciting Ember Addon of 2016?Really cool, I need to check this out as I think I'll need something like this."
2016-02-25 15:06:25;Ember.js: Announcing Ember's First LTS Release;Long Term Support === 4 months?This is great!
2016-02-24 18:01:01;CodeSchool - Try Ember;"Oh that's fantastic! I learned a lot from their previous ""Warming Up With Ember"" lessons, but they're horribly out of date now. I really like Code Schools, and already have a subscription so I'll definitely give this a look-see.I was disappointed to find out that only part 1 of lesson 1 was free. I liked the use of the cli in the questions."
2016-03-04 22:32:42;Ember.js: 2016 Ember Community Survey;Glad to help in statistics gathering, but I really wish there were some open ended questions there, specifically to talk about current pain points. Ember is certainly getting better all of the time, but it would be nice to have a clear chance for some community input. 
2016-03-04 19:58:41;The Path to Contextual Components: A trilogy on Emberjs components;
2016-03-03 16:26:46;Ember.js Supports LTR In v2.4 Release;I don't mean any disrespect to the author, but why even bother to write that? It doesn't say anything that isn't in the blog posts. 
2016-03-03 11:54:33;Building For Accessibility;
2016-03-02 21:37:00;EmberConf Ticket Swap Post;I also have an extra EmberConf ticket. Available for regular price $399, Paypal Venmo (not Bitcoin)Hi, if anyone is willing to go down on the price substantially, I'd be very interested in buying them. My name is Chris and you can reach me at cmccand@gmail.com. Thanks!I already have a ticket to EmberConf so I'm not looking to buy, but I thought if you want to get rid of the ticket, you'll need to sell it for less than the conference is normally selling the tickets for. Tickets are still available. $399 would be a good deal if the conference was sold out, but it is not.
2016-03-11 15:58:59;A Tale of Two States: Modern Responsive Design (illustrated with Ember and Flexi);
2016-03-11 05:33:56;Seeds.js - Full Stack Ember Framework Updated For Ember v2.4.1;"Am I missing something or is there no documentation as to what it is, or what it provides on top of Ember, or why I would want to use it? Can't find any of that on that page.**Changelog Highlights**

* seeds g scaffold/seeds g model now also generates ember-cli-mirage routes/factory as well as generates a migration file for those who prefer SQL DBs.
* Seeds now includes an array of db commands (seeds db create/drop/migrate/rollback/generate/status)
* Pods is enabled by default
* podModulePrefix is `frontend/routes` which leads to a very clean and easily navigable structure that mirrors the apps url structure
* Adds `seeds init` command to install deps for frontend/api servers. Especially useful when cloning an existing project.
* Generating an app will add the seeds verison to the .seedsrc. Useful for upgrading and debugging.
* Adds `seeds build` command with timestamped revision (current, previous) tracking.
* The new command should be 30-50% faster. (Still not fast enough for my tastes but we will be rewriting the new command in the near future)

Have questions or just want to chat about ember/seeds join us on gitter! https://gitter.im/terminalvelocity/seeds.jsYESSSS!!! IT'S FINALLY HERRREEE!!!!! :DNice.  I've got a personal project that's still in early stages and might be an ideal time to give seeds a shot."
2016-03-10 16:19:30;Introduction to Ember Engines by Dan Gebhardt;
2016-03-09 20:57:41;Looking for a short teaching session, willing to pay;"Controllers are kind of in a weird spot right now with ember. They are going away(sometime) but they're still required as of now. Controllers are the state-holders right now. So if you're trying to set/tweak variables in a route and use them in templates, it ain't gonna work. You still need controllers to support query params too right now.  What I see happening a lot more is people creating components for just about everything. Every form = different component(ex. components/login-form.js). Components hold state as long as they exist. If you transition to a template where the component isn't in the template, well then your state is gone because that component has been torn down. That's where controllers come in. They hold state for the life of the application. I can *try* to help you if you post a link to your SO question. I'd also suggest jumping on the #emberjs irc channel. It's usually really active. You should check out ember sherpa. They offer free sessions to help with ember apps and paid services for teams. https://squareup.com/appointments/book/FT3QWZ/embersherpaAs a rule of thumb, ignore everything online that's older than ~3 months, because it is outdated and probably teaches something that is no longer recommended.

I had to rewrite my ember app twice so far to keep up to the latest fashion.IMO, the most important thing to know when learning Ember is to know where to put your codes. Should it be in a component, route, controllers, etc.? Once you get the gist of that, everything should be a breeze.

While I'm not gonna do some video presentations or demo, I'm willing to answer your questions if I can for free. Just send me a pm.PM me. I'd be glad to help.

Also, while I agree it's best to avoid controlers, if you use pods, you'll be in a great spot to refactor when routable components land. I would like to suggest my free tutorial, it goes quite deep in the framework and you can learn the latest version of Ember.js, especially good if you would like to adopt the Ember Way: http://yoember.com ;)"
2016-03-09 19:21:53;Ember beginner, get 406 when accessing my API;"You need to set your accept header for JSON API. 
vnd.api+json"
2016-03-18 16:47:08;Ember Data v2.4.1 released;
2016-03-18 15:01:48;Deploying Ember apps with Deploybot;
2016-03-18 11:17:53;Ember.js v2.4.3 released;
2016-03-17 20:08:27;Why we use Ember;
2016-03-17 18:21:19;Hosting an EmberJS website in a linux box;"That link explains how to serve from nginx. I've never used the http-server for a production, but I'd be amazed if it was in any way superior to using nginx or Apache. 

I don't use ember-cli-deploy, but other than that my process pretty much follows that workflow. Build the dist with gzipped files, push then to my server, tell nginx to serve those as is, and proxy all other requests to my back end."
2016-03-25 23:24:02;The Chrome Distortion: how Chrome negatively alters our expectations.;
2016-03-24 23:44:31;5 Ember Addons You Should Start Using;"Missing Ember-concurrency.

Seriously though, its the one library that I can't wait to immediately put into my app the moment [i see it](https://medium.com/@machty/ember-concurrency-the-solution-to-so-many-problems-you-never-knew-you-had-cce6d7731ba9).Instead of ember-ajax, you should probably start migrating to ember-network https://github.com/tomdale/ember-network"
2016-03-24 22:55:49;Ember Twiddle v0.7.0 released;
2016-03-24 20:07:29;Frontside the Podcast #37: Ember CLI Mirage with Sam Selikoff;
2016-03-23 22:36:36;[Discussion] How do you feel about Ember vs React?;Feel free to invest time. Ember has learned much from React and some more of its ideas are making their way into Ember too. The react ecosystem unfortunately does not have the great tooling that is Ember CLI so setting up is a bigger job, but it is worth it for what you will learn.-
2016-04-01 20:33:26;Discourse 1.5 Released and is 5x Faster!;How?
2016-04-01 17:53:40;Related to EmberConf keynote: Mozilla to remove AppCache from Firefox;Thought I'd drop this here. Yehuda mentioned to start using app cache as it's implementation is reliable. Looks like Mozilla is removing the feature from Firefox.
2016-04-01 17:44:01;The MECH Stack — MongoDB + Ember.js + Cordova + Hapi.js;"I'm iffy on this article, for two reasons. And they both come down to the fact that I think it's a very bad idea to be talking and thinking in terms of ""stacks"". 

Firstly, the use of pre-defined ""stacks"" suggest a one-size-fits-all solution, rather than actually thinking about the problem at hand. Sure you have this MECH stack. But if your data is highly relational (and frankly a lot of it is) you should be using something like Postgres or MySQL on the persistence layer. For example. Or maybe Hapi.js isn't suitable for this job and you'll be using Rails, or Laravel. 

Secondly, you end up with arbitrary additions to the stack just to make a better... stackronym. Take Cordova in this example. Honestly, Cordova? Really? I mean, as a technology it's great, but is it really a necessary part of the solution to most web development requirements with Ember? I'd say at best it's a requirement for 1:4 projects. And I'd honestly say you just added it in there to avoid the stack being called MEH. And this is the second part of the problem. It creates an incentive to make technology choices based on their ability to form cool words and that's **beyond** dumb. 

Don't make stacks. Use what's appropriate to the job. Those will often be re-used tools, but sometimes your toolbelt will need different or new options. Be flexible and open to new ideas. "
2016-04-01 04:19:10;Why I'm excited about Glimmer2 and why you already know how it's better | Joel Kang;
2016-03-31 20:45:09;Announcing ember-deferred-content - Handling the states of async content;Seems like an incredible addon for more greater control over the presentation of UI with async content.
2016-04-08 01:49:23;EmberConf 2016: The Morning-After Post-Mortem;
2016-04-07 14:23:11;Ember at AltSchool: Many Apps and Many Add-Ons — AltSchool Engineering;
2016-04-07 13:34:19;RFC: Node Support;
2016-04-05 16:31:38;I have to use Angular at work, and the recommended file/folder structure seems pretty redundant.;"Personally, I really dislike having multiple files all named the same. We have an Angular 1 app in production (we didn't write it originally) that has 50+ `controller.js` files in feature folders, similar to this example. It is a pain to work on. 

In the comments at the link shared, someone asked about fuzzy find, and that is fairly easy to fix, but when you have multiple tabs open it can be hard to know which is which. When looking at diffs, it can be more painful as well.

My personal recommendation that has served my team well in other apps is to be a little more redundant. Organized into folders, so you don't have a mega-folder, and you can still do fuzzy find, see what file names are in tabs, etc.

    \feature
        - feature.cmpt.ts
        - feature.spec.ts
        - feature.tpl.html
        ..."
2016-04-05 13:51:42;RFC: Improved Release Process for Ember-CLI;
2016-04-15 16:10:24;EmberConf 2016 Videos are trickling out, go watch on Confreaks.tv;Which one should I watch first? :)
2016-04-15 14:19:13;Ember Data v2.5.2 released;
2016-04-15 14:16:49;Are Ember.js Controllers Dead?;"I like how he states that controllers are singletons.  It explains a lot and is helpful for beginners.To the author: Please get rid of the background music in an instructional video.

Aside from that, thanks for the video."
2016-04-14 11:18:18;Install an Ember Addon from GitHub;
2016-04-13 17:32:42;What’s New in Ember AJAX 2 — EmberSherpa Blog;"Man, scrolling through here and seeing my face in the thumbnail was pretty weird :P

If anyone has questions and/or suggestions for `ember-ajax` I would love to chat!"
2016-04-22 05:53:12;Route Closure Actions in Ember.js;
2016-04-21 20:28:01;Advanced Ember.js Routes and Models Screencast;Thanks for these, Erik. This series is immensely helpful. 
2016-04-18 19:40:16;Ember-Redux: Use Redux with Ember;Can anyone clarify for me... Why? I don't fully understand the redux pattern at best, but I certainly don't see its need in Ember, which already has pretty decent management of state.
2016-04-18 19:25:30;EmberWeekend #55: Just a little reacty;
2016-04-18 17:53:46;Making Ember and Django play nicely together: a to-do app walkthrough;
2016-04-29 11:15:18;"Michael North ""Ember.js 2 - Future-friendly ambitious apps, that scale!""";
2016-04-29 09:57:48;Ember-friendly bookmarks;
2016-04-28 20:00:04;Ember.js: Upcoming deprecation of baseURL in Ember CLI 2.7;THANK GOD!!! 
2016-04-28 19:30:38;Looking for ember dev to take a 90% complete project to the finish line. PM for details.;"I'd be willing to take a look at the code base but I'm juggling a few contracts as well. If you struggle to find someone to take it on let me know. 

I've only started with ember the later part of last year but have a decent grip on it and planning to release the new version of an app in a few months. 

Like I said, if you struggle to find someone let me know and I can maybe help you out. 

Cheers"
2016-04-28 13:00:15;Concurrent JavaScript — Part III: Events;Article seems to be dead ?
2016-05-06 07:06:28;Modern Web S1E06 - The Beginning of Ember, Ember-CLI-Deploy, and OSS Teams with Luke Melia & Ember Weekend;
2016-05-05 03:16:36;If anyone wants to finish designing & building emberjs.com, here's a good start.;[deleted]
2016-05-04 18:09:58;PEEP Stack: Pheonix, Elixir, Ember, and Postgres;"I don't understand why people feel the need to make ""stacks"". They encourage a ""golden hammer"" mentality where the problem is made to fit the solution, instead of finding the correct solution. It makes people make technology choices sometimes based on acronym. What if a NoSQL db is a better choice, do you just not use it because PEEN is a terrible acronym? What an awful reason for making a decision!

This is **especially** the case with Ember. Typically Ember is built as a separate application to the back-end, and completely agnostic to it. Why would you make it a ""stack"" and link the two together? By all means the combination of Phoenix, Elixir and Postgres may well be a great backend. But I don't see any reason to keep arbitrarily join things together just because of MEAN. Unless you get some sort of actual workflow value from it (like the SANE stack attempts) then why do it?To me, this is a pretty ideal stack. All I'm waiting for now is Chris McCord's addon to work with Phoenix channels in Ember, that I was told would be coming once Presence was wrapped up in Phoenix main."
2016-05-03 15:25:29;Retrieve Ember Data models from a non-REST API;
2016-05-03 10:05:12;The Ember.js Times Issue 1;
2016-05-11 16:49:46;Working with Service Workers by @jkleinsc;
2016-05-11 15:24:14;JSJabber: Ember and EmberConf with Michael North;Great to see them finally talk about ember. I feel like to them ember is the red headed step child. Glad they spoke about about the power of the community. 
2016-05-11 14:30:24;How to build a sitemap?;"Do search engines still use site maps? I guess I thought that was an outdated SEO thing.You cannot build a sitemap in the client side app because you don't have direct access to the data. Rather you should build it in the API server using a worker process and upload it in a permanent storage like amazon S3. Then you ping Google or any other search engine with the link to the file stored in S3. You should also redirect /sitemap.xml asset requests to that link. You can rebuild the sitemap daily or weakly or monthly based on your needs.

To see how to build it in the API server, have a look at Rails's [sitemap generator](https://github.com/kjvarga/sitemap_generator) implementation. The links generated by the sitemap generator must also match the routes defined in ember routes.Is a sitemap semantically valid on routes? I wouldn't have thought it was."
2016-05-10 16:40:22;Writing an Ember add-on that wraps an NPM module;
2016-05-10 07:04:01;Just released an addon called ember-share to share your local Ember apps with the world using ngrok. Would appreciate any feedback!;
2016-05-19 15:51:51;Ember CLI Mirage 0.2.0-beta.9 released & update;"I'm leaving FT work at TED in ~ a week so am planning on having more time to see 0.2 through to the end soon. Many-to-many and has-one relationships have some work to go, and that will be a big focus soon. I have a good solution in mind.

Right after 0.2 I want to release `afterCreate` and `trait` features for the factory layer, to make it easier to create graphs of objects. This is one of the biggest pain points in current versions of Mirage."
2016-05-18 08:19:26;DrupalCon New Orleans 2016: Amazing User Experiences with Drupal and Ember;
2016-05-17 18:12:53;Ember.js: Global Accessibility Awareness Day;
2016-05-17 16:03:21;Ember.js routing in Safari - Router is silently failing and redirecting to my site's index (No code sample inside);"If you're using Ember I very much doubt you should have the # in the route. Ember supports HTML5 push states, and doesn't use hash routes at all to my knowledge. 

Beyond that you'd need to provide us some code. In particular, what does your router look like, and the relevant route object for that route.

An ember twiddle would be ideal, but even pasted code might give us something to go on. 

Edit: are you using global Ember, or CLI? And have you got the Ember Inspector chrome addon?Make an ember twiddle of the problem and post it"
2016-05-17 14:05:44;Ember.js: Ember Data 2.5 and 2.6 Beta Released;
2016-05-27 18:05:56;The Architecture of the League Client Update;"This is very interesting, thanks!
"
2016-05-27 15:22:38;Upgrading Mirage With JSCodeshift;
2016-05-26 20:49:09;A Startup, Why Ember?! - Laura Lebovic & Sam De Maeyer;
2016-05-26 20:45:53;Taming CSS in Ember.js apps by Erik Bryn @ EmberSF;
2016-05-26 20:43:47;Complex Component Design in Ember - Part 4 - Use the hash helper;
2016-06-03 18:34:13;Twitch Hosts Global Ember Meetup Conference;
2016-06-02 20:30:02;Rounding up the best ways to learn Ember in 2016;"I've created 148 screencasts, approximately half of which are free.

https://www.emberscreencasts.com/http://emberigniter.comHi there! For the ones looking at my book, an update is in the works. You can follow progress here https://github.com/abuiles/ember-101/pull/65 :)

Also, if you enjoyed my first book, I published recently a new book about JSONAPI  - check it out https://leanpub.com/json-api-by-example :)I didn't really enjoy the Front End course that much, it seems to skip over things and assume a level of familiarity with Ember that is unrealistic for newcomers.

I read the official docs but didn't worry too much about fully digesting them then I read/did the ember-cli 101 book which is awesome. It doesn't cover everything but by the end I really felt I could see the value Ember might offer.

I read Rock n Roll with Ember which I didn't enjoy quite as much but I think that's just personal preference, it covers largely the same ground so maybe I just preferred CLI 101 because I read it first.

After that I learned quite a bit by trial and (lots of) error before I came across emberscreencasts which is probably the best resource I've found once you have a few of the basics clear(ish) in your head. It's very very good at making some sense of Ember Data which is one of the biggest hurdles to tackle (unless you decide not to use it which is a totally valid option).

I've bought the Ember cookbook but found that was pretty poor as it seemed to just be a rehash of the official docs and had nothing particularly exciting in it.

Ember Weekly is well worth signing up to and there are some good videos from conferences available on youtube but stick to anything newer than 6 months old otherwise you might get led down a deprecated path!

Also worth using the Ember slack channel for questions/help and also sign up for webinars on BigMarker.

EmberSherpa on twitter is pretty good at keeping the community up to date but it's also worth following most/all of the core team as they are pretty vocal (in a positive way).Yoember.com is a good free option.Another great up-to-date e-book is [Front-end revolution with Ember.js](http://emberjs-book.com/). It focuses on building a product from a full-stack perspective as well - there is a Rails API included, and proper signup and login functionality with Ember Simple Auth.I'm a member of the Ember.js core team and do all sorts of training: https://www.prototypal.ioMy ""Discover Ember 2"" online course has received many positive reviews :)

https://www.ludu.co/course/emberDownload an already made theme and build from it.

http://www.emberjsthemes.com"
2016-06-02 07:59:46;links from CMS;"Basically you want to write HTMLBars outside of the application and insert it into the application?

I think you have two options here that make sense to me although never seen this ever be done.

1) Precompile the HTMLBars CMS content and store it. The on the ember side have a component that makes an ajax request for that compiled template and registers it with the application.

2) Same thing but move the HTMLBars compilation into the ember app.

This could be fairly tricky since you lose some app context that ember uses to estranspile the template to the correct module. Also to register the template need access to the container and your resolver needs to know how to reference that. Also an ember app will throw an error if for example you reference a route that isn't mapped to the router in a link-to."
2016-06-01 09:45:35;Best way to retrieve API Data in Ember?;"Ember Data uses adapters and serializers, so your two solutions are kind of the same. Ember Data requires that you define models for the results of your APIs, and it provides functionality for keeping track of state, saving data and so on, which can be really useful if you're going to be changing the data or things like that. The [introduction on the website](https://guides.emberjs.com/v2.5.0/models/) is pretty good, imo, but I may be a poor judge of that. For Ember Data, there are different adapters and serializers that you can use for different backends with various data structures, etc. You can also use Ember Data and create your own adapter or serializers, if none exist that fit your backend.

If you choose to forego Ember Data, then you can basically just do regular ol' Ajax calls, and use the returned JSON as the models for your routes (or create Ember objects based on the JSON, if you want to use computed properties, observers and things like that), and you can also use your favourite library for wrapping Ajax calls (or write your own service in Ember).I've always considered ember data a big pain in the ass to use. Sure it may be nice if you control the format of your JSON, but what if you have to integrate with many other APIs that have their own quirks? Are you going to reverse proxy and transform their responses or try to configure ember data to work with them? Annoying. I've had much success removing ember-data from ember-cli altogether and simply using AJAX to populate the model."
2016-05-31 17:03:37;ember-cli-mirage v0.2.0 released!;"release post: http://www.ember-cli-mirage.com/blog/2016/05/31/0-2-0-released/I just wanted to say that I got an error message while working with the new version:

> assert.js:36 Mirage: You're trying to create a question model and you passed in a model:event(1) under the event key, but you haven't defined that key as an association on your model.

This is the most useful and detailed error message I've seen in a damned long time. Too much Javascript provides generic and vague messages that don't actually help solve the problem.Awesome work thanks! awesome! can't wait to try it out"
2016-06-09 16:04:33;Ember Guides #3 - The Ember Object Model;
2016-06-09 13:23:45;Ember.js: Ember.js 2.6 and 2.7 Beta Released;"The post mentioned about Glimmer. Have there been any performance improvements lately?

Adding to my own question a partial answer, according to https://devchat.tv/js-jabber/211-jsj-ember-and-emberconf-with-michael-north Glimmer 2 should be part of 2.7. Still, there's only 1 mention of glimmer in https://github.com/emberjs/ember.js/blob/v2.7.0-beta.1/CHANGELOG.md"
2016-06-08 13:44:47;EmberCamp Speakers Announced;
2016-06-06 07:13:14;Visual Acceptance Tests addon for Ember;
2016-06-06 07:10:55;Data Down, Action ... Down?;"cool. I wouldn't consider this Actions Down because services really live outside of the view hierarchy, i.e. they aren't part of the parent-child tree.

Also, I bet ember-concurrency could be used to set up the handler here, so it's automatically torn down on destroy, which takes care of the memory leak concern in the final paragraph."
2016-06-17 21:03:02;New addon: ember-computed-template-string;Repo: https://github.com/intercom/ember-computed-template-stringShouldn't you use back ticks to match ES6 style template literals?I think this is the purpose for the helpers
2016-06-17 18:17:18;Anyone in Boston and/or willing to give me advice on an ember project?;I might be able to help,  But it might be easier to join slack https://ember-community-slackin.herokuapp.com/
2016-06-17 17:39:42;Watch a free EmberMap video on ember-composable-helpers;"We're just getting started producing content, so I'd love to hear any and all feedback!

- What'd you think of the length/format?
- What other topics are you dying to see?
- What things does your team need the most help with?I really enjoyed this video overview to refactoring with composible helpers.  I'm hungry for more but... $175 for a monthly team plan?  That's a really steep ask even for this quality of content."
2016-06-17 03:20:22;How do you create a search function that is used in entire application.;I guess you could simply use a modal, i.e. from here https://github.com/yapplabs/ember-modal-dialog (this should solve your problem #1). As for #2, you can simply pass property to your modal to update it. Or, define an action in your modal, that will update required property. #3 is straightforward - you just wrap opening link, modal, and glue code in component and use it. Hope that's not too generic description.
2016-06-17 00:27:35;How to build multiple Ember apps with common functionality?;"Create an add on that contains the core code things like services, adapters, models etc. Then install the add on as a private npm dep. 

If you already have an app you may want to test the abstraction by creating an in repo addon before moving it entirely out of the project 

In the future engines may be useful here as well. I built a repo that demonstrates how we do it in our app (batterii.com). It may not be perfect, but it works for us: https://github.com/workmanw/ember-multi-app

Depending upon your needs engines might also solve this for you, but they're still heavily WIP at the moment.We use git submodules. It's a small learning curve, but the subsequent minor shared CSS/component refactor lends well to what will eventually become Ember Engines."
2016-06-22 13:15:33;Using iCheck checkboxes with Ember.js: bound value not updating;just a guess you might have to `mut` the value when an the icheck event is fired
2016-06-22 01:14:58;"Is it possible to sometimes go ""outside"" of the Ember box?";"> The problem is that they will say it boxes you into a corner that you can't get out of.

Is that not the problem you're experiencing right now with a custom hand-rolled ""framework""? In my opinion, part of the trade-off of using a framework is flexibility, and **that's a good thing**. Ember does force you down a path, but I've found it pretty flexible because it mostly sticks to how the Web is made:

- Routes: The first thing you create are routes, which can be activated by visiting their URL in the browser. This makes sure that every Ember route accessible via URL, which is the way regular web pages/applications work.
- Markup: Ember uses a ""mostly logic-less"" templating library called Handlebars that is quite restrictive in the logic it's willing to compile into your templates, but gives you some good stuff like iteration and conditionals, as well as the ability to use helper DSL functions within the templates that abstract any logic you might have been doing within it into a testable JS module. By default, view objects are created for every route and template, and they follow a similar API as components, which are described in more detail below.
- Components: The biggest win of using Ember, IMHO, is the ability to marry the above organization strategy with reusable, isolated HTML/CSS/JS code fragments that can be injected with dependencies and rendered anywhere. Influenced heavily by the React ""data down, actions up"" concept, and with the new HTMLBars rewrite allowing them to be referenced like ""real"" HTML elements, components have really changed the way I think about writing Ember code. Components, and the way actions work, allow you to separate generic view code whose only job it is to give visual feedback from the user from the logic needed to actually make changes on the server side. A component's action can do some stuff, then bubble that action up to whatever controller and/or route has rendered it. This allows you to, for example, write a generic file upload component that is authenticated on one action, but is allowed by all on another. You don't have to repeat the markup at all, just render the component and let your controllers handle the differing logic on the backend. Not even React can claim that level of abstraction.

In my opinion, this is the 3 basic tenets of front-end application development. You want things to be routed to, the ability to do a little (but not too much) logic in your templating language, and reusable components that can be rendered anywhere with a line of HTML. Not only does Ember give you all that, but it also separates the part of your front-end dealing with data serialization, retrieval, and modification from the part that actually renders your user interface. Ember pretty much gives you ""a place to put everything"", as long as you invest in its conventions and architectural decisions. Which, by the way, have proven successful over the past few years.

edit: As far as flexibility is concerned, run `ember generate` and see all the generators it gives you. Generate some utils or services. Those are pretty much ES6 modules that you can use anywhere.Most of the issues you'll run into are with ember data. I've built 'typical' and 'non-typical' apps, and found ember to be a great choice. 

What's non-typical? I embedded an ember app as part of a typical server-rendered page. I had one set of query able data i get from Elastic Search, then create deserialized ember objects to use in a component. 

I think the big thing is if you're not doing crud, start off with ditching ember data for a custom service.  It's hard to answer this question without any specifics. ""Going outside Ember's happy path"" is pretty subjective.

I think there are lot of aspects of ember that allow for greater flexibility. If you need to, you can always manually manage a component's DOM via its lifecycle hooks and dispatch event handling. It's generally not encouraged, but there are definitely advanced use cases where it's necessary. One prime example we have in our app is WYSIWYG. 

So this just what I think of when you say ""Ember's happy path"". Perhaps if you have some specifics, others might be able to tell you about their experiences. Yup. Did that with Ember Data and Firebase. Basically, **emberfire** is the official ember data adapter for Firebase. It forces you into a certain data structure if you want to embrace the ember data usage. I didn't want that so I rolled out my own solution by doing native firebase calls inside the model.Yeah. I had to build an app a while ago that was full of data. Like... It started off full of data, and was pretty much static. It was actually a defined exercise program, so it was full of ""do this exercise x times, for y reps"". The only real data saved was was recording your weights. 

It was... Challenging. I was essentially trying to ""pre-seed"" ember data so I could work with nice neat hierarchical ember data models and assign values against those. But Ember really isn't for that. 

What I ended up doing was a big native JavaScript array of objects being returned. In the end that was a lot easier to work with than trying to force Ember Data to do something it wasn't suitable for."
2016-06-21 02:45:57;New Book: Ember Data In The Wild by David Tang;Lots of new ember material out lately, I'm currently going through Front-End Revolution and really getting a lot out of that.
2016-06-21 02:14:28;Ember CLI v2.6.2 released;This fixes deprecation warnings in ember-cli-release 
2016-06-21 00:34:38;Bringing Ecto Changesets into Ember.js — The Ember Way;
2016-07-01 18:02:48;Rapid Web App Development — App 1 — Frontend Weekly;
2016-07-01 13:35:31;Single model, but multiple endpoints for ember-data;"/u/WMTaddict you could try something like the following in the adapter

    PostAdapter.extend({
      session: Ember.inject.service(),
      buildURL(type, id, record) {
        let url = this._super(type, id, record);
        //
        if (this.get('session.isAdmin')) {
          url = 'url-for-admins';
        }
    
        return url;
      }
    });

Also, wouldn't be easier to pass a flag in the URL when the user is an admin or do it based on the user scope in the backend?

edit: fixed code format.



If the users log in to your app and you can differentiate admin vs regular user that way, you can set a value in a Service object after your auth flow, and import that Service into your Ember Data adapter. You can then use that to set the namespace of your application adapter.What you could do is create one post model, and then extend that and name it admin-post or whatever. This would let you create an adapter for that model alone, where you could specify the endpoint for the admin model (or you could name it so that the endpoint resolves to the right thing).

It's not ideal to have to create two models, but at least you don't have to define them twice. And it's way better than having to create two apps. But yeah, if I had control over the API, I'd definitely let the backend handle this stuff.

Edit: But I'd probably go for the solution with the service injection the other two mentioned, if you have that option.1. Call one user-post and one admin-post, instead of them both being regular posts.  Set the json-api adapter (i'm assuming you're using the out of the box stuff) to have a specific endpoint.  See docs for host and namespace properties here:  http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html

2. If someone is an admin, they must be logged in.  Use a single post endpoint and then, either in the backend, or in the Ember app, determine they are an admin and insteadd of using 

          model() {
           return store.findAll('post');
          }

you can do something like:

          model(params) {
           if (params.admin === 'true') {
               return store.query('post', {admin: true});
             } else {
             return store.query('post', {}); // or findAll
           }
         }

And then just check for req.query.admin or the like on the back-end, and return the proper result.  Or even skip the prior bit, and when you check authentication for the admin on each request, see if they're an admin, and if so, respond accordingly.

It's just javascript sir.  There's 1000 answers to every problem, each with it's own benefits and reasons.  
"
2016-06-30 16:55:49;Quickly Building an Ember Application Backed by Socrata Open Data;
2016-06-30 15:01:46;Is this example in the Ember.js documentation incorrect?;"To be fair,  1.13 was a long time agoThis example is fine: the `model()` hook is called by `setupController()` ([behind the scenes](https://github.com/emberjs/ember.js/blob/v2.5.0/packages/ember-routing/lib/system/route.js#L1675)), which by default sets up a property on the controller called `model`, with the value returned from the route's `model()` hook. This is an example of some of the ""convention over configuration"" features in ember: by providing your route's data via the `model()` hook, you get a bunch of other stuff ""for free.""No it's not. The correct word is **use**. In the application.hbs template, the h2 is calling the return of the model hook (which is set as the model property on the controller) - so this is accessed as model.title. The h1 tag is calling appName, which is set on the controller directly (not the model on the controller)I've been using 2.5 and 2.6 but that looks pretty right. The only amendment I'd make is adding the setupController method to the route.

    export default Ember.Route.extend({
      model() {
        return { title: ""Hello World"" };
      },
      setupController(controller, model) {
        controller.set('model', model);
     }
    });    

"
2016-06-29 23:12:23;Featured at Wicked Good Ember: This ad is written using Glimmer 2 without Ember.js;repo?Is this talk available online?Is this available online anywhere (either code, talk video, slides, etc)?
2016-07-08 19:25:17;Ember + uncss/purifycss or similar;"@ /u/tomdale if you might have any insight into people with a fleshed out example, i'd love to hear it.I'm thinking there isn't an implementation right now. UNCSS isn't easy to integrate with templating environments. Say you have a rule like 

    .firstOutlet .secondOutlet .thirdOutlet h1 { font-size: 55px;}
 
UNCSS would need to know how to render Ember templates to ever determine if that rule was being used or not. That's just outlets, now factor in loops, components, etc. 

As you can see, it would be much more complicated than a typical HTML/CSS implementation, and as such I suspect it doesn't exist yet, and I would be (pleasantly) surprised if it does become a thing. This is something that would be handled by broccoli. Looks like there is a broccoli-uncss project that you can add to your ember-cli-build.js"
2016-07-08 04:47:54;Ember.js, DevOps, and You - Wicked Good Ember 2016;
2016-07-07 16:33:35;Where can the documentation for initializers in Ember 1.13 be found?;"Used to have it bookmarked somewhere, but now this is all I could find: http://emberjs.com/blog/2015/05/13/ember-1-12-released.html#toc_instance-initializers - hope it helpsFor 1.13 this might be the most helpful:

https://guides.emberjs.com/v1.13.0/understanding-ember/dependency-injection-and-service-lookup/"
2016-07-07 16:08:13;Question about Ember;You are going about this wrong. You don't want to store your code in a shared drive on the network. You should be using some kind of version control for this, generally git. Ember-cli automatically initializes a git repo for new projects when you run `ember new`.
2016-07-07 15:26:40;The closing keynote from Wicked Good Ember 2016, hosted on Thompson Island in Boston;Wonder if any of the talks at wicket good will be posted to YouTube.
2016-07-13 20:54:30;Building an Ember App Without a Back-End;"I use mirage for testing and love it. 

But I think it's also worth mentioning that if you want to do rapid app prototyping, firebase has an excellent [ember-data](https://github.com/firebase/emberfire) addon that is really simple to setup. Sometimes having data persist between reloads can help flush out more issues."
2016-07-13 19:09:29;CSS Is Impossible by Chris Thoburn;
2016-07-12 18:13:21;EmberJS Light Table;I've been building a custom table component on top of ember-light-table and I have to say it's very impressive!  This is cool. I used another one ( i think the Addepar/ember-table) pre-2.0.  But I think light table is the one to use now.
2016-07-12 10:40:16;Continuous visual integration for Ember — Perceptual Percy;Founder of Percy here, came here to post this but you beat me to it Gaurav0! :) Well done.
2016-07-12 10:38:19;Creating a Custom Ember CLI Command - The JS Guy;
2016-07-19 16:10:33;RFC: Router Enhancements;
2016-07-18 19:40:26;Route-recognizer by Nathan Hammond;
2016-07-18 17:30:45;Ember Weekend #66: Bug Integration;Why can't I find Ember Weekend though iTunes?
2016-07-29 19:55:04;Announcing The Glimmer 2 Alpha;Nice! Can't wait to start using it. Has anyone done any benchmarking with this new rendering architecture?  I'd like to see some numbers, especially since they are teasing additional optimisations downstream from here.
2016-07-27 11:58:20;My Ember.js TDD Workflow - Ryan Toronto;
2016-07-26 16:48:56;Release v2.7.0 路 emberjs/ember.js 路 GitHub;
2016-07-26 14:08:59;RFC: Asset Loader Service by trentmwillis;
2016-07-25 21:54:38;Ember.js: Ember Data 2.7 and 2.8 Beta Released;
2016-08-05 10:04:36;Bootstrap template;"http://kaliber5.github.io/ember-bootstrap/https://guides.emberjs.com/v2.7.0/getting-started/quick-start/
At the begining of this tutorial you will learn the solution http://yoember.com"
2016-08-05 03:33:17;Failing to save a new model;"You can't directly access the model in a route action via this.get(...). I have two solutions for you. One, pass the model into the action from the template. Two, if you really have to do it you can get at the model using 'this.modelFor(this.routeName)'.

http://stackoverflow.com/questions/35630842/ember-how-to-get-route-model-inside-route-actionYou're not going to create records in your model function on routes.  That's mostly where you would want to load in existing models.  It's also a good idea to keep this kind of logic in your controller.

If you don't already have a controller file, you should generate one the same way you would a route (ember generate controller author) or whatever your template is.

(also, its not a great idea to name an action 'save')

Then your controller will be something like:

import Ember from 'ember';

export default Ember.Controller.extend({

    authorName: null,

    actions: {
      saveAuthor() {
        const newAuthor = this.store.createRecord('author', {
          name: this.get('authorName')
          // change your input value to be authorName since your model doesn't exist yet
        });
        newAuthor.save();
    }
});


[this ember guide to records is valuable](https://guides.emberjs.com/v2.0.0/models/creating-updating-and-deleting-records/)Yes, if possible, use the route for actions.

Just pass the model to the save function (see code on StackOverflow). This step by step free tutorial is quite helpful to understand the main concept of Ember including how could you manage data and models. http://yoember.comYou're getting conflicting responses here, but IMO one of the Stack Overflow answers covers it best. Your overall structure is right. The only thing you really missed is that your save action should pass in the model.

Then all you need to do is 

    save(model) {
        model.save();
        // reset form, redirect, whatever
    }"
2016-08-04 20:38:24;ember-svg-jar: Comprehensive SVG support for Ember applications;
2016-08-03 11:03:17;[Help] Strategy for dynamically setting record on a static page;"So, your back end would have a `page` model? The way the `model` function works, is that your 6, in the example, would correspond to a route parameters...so following your example, it would be `about/6` and when you changed the URL, it would change the page. does that make sense?The application config should provide the settings from the config/environment.js file. Use the setting set in the config file, which can dynamically be set on startup.

    import config from '../config/environment';
"
2016-08-02 14:34:51;Write Better Ember Tests;
2016-08-12 15:21:45;Improving Chat Rendering Performance — Twitch Blog;
2016-08-12 01:26:45;So Ember Conference announced;
2016-08-11 19:55:14;Unit test for Ember Route redirect hook;
2016-08-11 15:42:11;The Ember Inspector - Ember Guides #4;
2016-08-11 11:57:45;Please Help , I need a good resource for leaning ember js 1.1 that is totally free ..All what i found was ember 2 resources;"https://guides.emberjs.com/v1.10.0/

Do you need to work on a legacy app?Via Dash (https://kapeli.com/dash it's OSX I don't have a good suggestion for other OSes) you can easily get a copy of the 1.10 API docs. The ones hosted at embers.com are for the latest version. "
2016-08-18 18:42:50;Using Ember CLI and Raygun;
2016-08-18 14:41:17;Good Ember Developer, Bad Ember Developer;"> Don’t feel entitled to the framework, and don’t complain about changes you disagree with but did nothing to influence.

I love this line. It should be front and center on every open source framework and library.A Bad Ember Developer commenting here because I choose to spend time outdoors instead of sending pull requests.

Good recommendations, but silly article. No need to judge and divide Ember developers in two arbitrarily tendentious sides."
2016-08-16 18:12:17;Many-toMany Relationships with Ember CLI Mirage;
2016-08-25 23:19:14;Automated Ember deployments;
2016-08-25 14:41:55;Ember with D3 from EmberConf 2016;"I haven't seen a good way that front-end frameworks (react, angular, ember) have integrated D3.

From D3js.org

>D3 allows you to bind arbitrary data to a Document Object Model (DOM), and then apply data-driven transformations to the document

I still prefer using d3 data binding for visualizations."
2016-08-23 13:17:56;Ember.js v2.7.1 released;
2016-08-22 22:57:32;Let's build a drum machine #1;"I've just published #2: ""Test driving the object model"":

https://www.youtube.com/watch?v=4vVWwYnICuY"
2016-08-21 15:02:38;Using Dependency Injection to Write Better Tests;
2016-08-31 16:34:40;Does ember not work well with windows 10 or something?;"run in project directory

 $ npm install

 $ bower install

$ ember sI work ( with ember and more ) exclusively on Windows 10 and have experienced little to no problems as far as setup goes. I strongly believe that you somehow misconfigured your environment. Make sure you're on version of npm that's supported by ember-cli ( so probably not the bleeding edge one ).Developing in Windows is a masochist's journey. Get a VM or dual boot because it really has so many hurdles to deal with.There's a lot of info and troubleshooting tips on the ember-cli website (not the emberjs site) for Windows. 


https://ember-cli.comWindows is really underrepresented in open source developer communities, it seems like it's all Linux and OS X when you're looking at Javascript development, or certain back-end languages.  Windows also doesn't has a proper shell (or didn't anyway, is Windows bash out yet?) but the crux of the issue is there are just fewer people using, testing, and fixing Javascript dev tools on Windows machines.  

It's a shame because I'd love to be able to work on my web projects when I'm on my gaming PC but at this point I just don't bother.Install the Ubuntu subsystem that's available for Windows 10 Anniversary Edition, it's easy and you're no longer working on a fringe system for web development."
2016-08-31 06:09:48;Screencast Series: ember-cli-deploy (6 screencasts, 3 free);
2016-08-31 06:08:21;Editing and Validating Forms with ember-changeset (6 video series, 3 free);
2016-08-31 00:03:59;Advice on sorting Rails items;"I would use ember-data to fetch your data if you're not doing so already. Once you have the data in your controller or component you could just use a computed property to sort it. 

I wrote a very simple computed macro addon that is great for immutable sort orders: https://github.com/workmanw/ember-computed-sortby

You can also use the built in sort macro if you want to be able to mutate the sort order (http://emberjs.com/api/classes/Ember.computed.html#method_sort).

if you want to sort server-side, you could just make ember adapt queries to ransackYou can use [ranked-model](https://github.com/mixonic/ranked-model) gem which is better optimized for this staff. When the user reorders the attachments, send an ajax request from your ember app to the Rails API to permanently save the new ordering."
2016-08-30 10:47:07;ember-cli-jsonapi-pagination: An addon adding support for pagination with JSONAPI backend.;
2016-09-09 00:02:20;Ember.js 2.8 and 2.9 Beta Released;Really looking forward to a general 2.9 release.PSA: seeing certain rendering issues in Safari with Ember 2.8.0 that were not there in 2.7.x. Specifically certain templates cause the double render deprecation warning and a completely blank template. I'm going to try to get a reproducible test case and submit an issue.Engines looks like an interesting idea. Anyone using it experimentally yet?
2016-09-08 17:12:23;Acceptance Test your ember addons with a generated app;
2016-09-08 16:20:41;Ember.js v2.8.0 released (LTS);"No blog post yet, but it looks like these features are now switched on by default:

- https://github.com/emberjs/rfcs/blob/master/text/0139-isHtmlSafe.md
- https://github.com/emberjs/rfcs/blob/master/text/0010-engines.md
- https://github.com/emberjs/rfcs/blob/master/text/0136-contains-to-includes.md
- https://github.com/emberjs/ember.js/pull/13716 (no RFC)"
2016-09-08 15:45:12;Import node modules that use ES6 into your Ember projects using a shell script;
2016-09-08 14:16:47;What backend frameworks / APIs do you guys use?;"Node/ExpressRails 5 --api I'm working on a Phoenix project right now. It's my first Elixir project but I come from a rails background and it's similar enough. The decision for me was really that Phoenix Channels > ActionCable - to me anyway.

I'd really like to learn Go but I haven't had the opportunity yetGo backend using the JSON API specification.I've started playing with Lux: https://github.com/postlight/lux

""A MVC style Node.js framework for building lightning fast JSON APIs""

Definitely not production ready yet, but it's in a version 1 (rc) right now.  I've recommended this framework for those just starting out learning Ember (it's has a similar CLI, that and rails5api).Restify, mostly.  Created a simple JSON-API formatter.I've been using Rails 4, mostly because I have an ""ember and rails"" skeleton set up which uses Rails 4. From my experience Rails and Ember get along pretty easily and they follow similar conventions. 

Tho the Rails 5 API-mode looks really appealing. Flask, SQLAlchemy, and marshmallow-jsonapi.Lumen with [Fractal](https://github.com/thephpleague/fractal)hapiI typically use Laravel. I'm using Rails API..Net Core -- working on a JSONAPI library here: https://github.com/Research-Institute/json-api-dotnet-core

Demo with EmberJS here: https://m.youtube.com/watch?v=n3CqOtjKZGc

Any feedback would be appreciated.Just did 2 Wordpress API + Ember projects for fun, not bad I must say!"
2016-09-16 09:00:04;Request for feedback - tutorial based on an ember app;"Thank you for the comments I've received so far. Part 2 has just been published if anyone is interested.Just to let you know, the third and final part of the tutorial series has now been published.

I've addressed the comments I've received so far. "
2016-09-15 14:06:30;With Angular 2 Final released, I'm curious if there are any opinions from across the pond…;"I enjoy the fact that angular cli is a fork of ember cliHonestly, I'm not a fan. If Angular 2 didn't have the name ""Angular"" I think it would be a blip on the framework world. It doesn't do any one thing particularly well, and has made some choices that I think would (and should) alienate developers. In fact, Angular 2 and Angular have so little in common I think it's almost misleading calling it that.

Angular 2 competes very directly with Ember. It's probably the only framework that does, in terms of scope. Most other frameworks in common use are more libraries that can be extended to handle a SPA, or are focused more around embedding components in existing apps. But I don't think it's better than Ember in any way, and significantly less good in many.

Oh, I should say up front that while I was initially against TypeScript, I have come around. I think TypeScript is probably the future for quality JavaScript applications, and that Ember will probably move formally in that direction at some point. That's something Angular 2 definitely does have going for it.

But as an example, take Angular CLI. Ported from EmberCLI, it is intended to offer much the same functionality. And it does to a degree. It allows some scaffolding. But it uses Webpack for building. That means build is a separate command. In Ember, changes saved are automatically built extremely quickly, and live-reloaded. A lot of functionality is simply missing entirely. I'm not referring to things like route generation, which are in development as the app is a beta, but things like dependency management which will never happen. EmberCLI has handling of add-ons meaning something like Bootstrap can be installed with `ember install ember-bootstrap`. This goes well beyond `npm install` (though it does that in the background) also handling bower dependencies, configuration, etc. There is no further setup, just kill the server and restart it. `ember install ember-bootstrap; control+c; ember server;` and bootstrap is immediately available because EmberCLI automatically builds and pulls in its CSS. The same with something like Sass. Type `ember install ember-cli-sass` and any .scss files in the style directory get pre-processed, no config, no setup.

This all might just sound like general convenience, but it's much more than that. The power of EmberCLI means that it can be extended to provide amazing new functionality, such as `ember deploy`, an actual add-on that enables single command deployment to a range of environments, or Mirage, which mocks API requests and allows the creation of a high performance, zero-commitment fabricated end-points for prototyping and/or testing.

I find Angular 2's templating fairly horrible. In addition to the much publicised case-sensitive-HTML abomination, I find the syntax decidedly grotesque. 

    <li *ngFor=""let post of posts"">
        <a [routerLink]=""['/posts', post.id]"">{{post.title}}</a>
    </li>

Just... fucked. None of this makes any logical sense, it's all Angular specialness. Is the thing after the `=` an array? Is the thing before? What's with the asterisk?!

Ember's Handlebars derived syntax is vastly more comprehensible to me:

    {{#each model as post}}
        <li>{{#link-to 'posts.show' post}}{{post.title}}{{/link-to}}</li>
    {{/each}}

In every case (with an exception I'll go into further) when I compare the features and/or functionality of Ember and Angular2, Ember wins absolutely hands-down in its capability, but most importantly in its user-friendliness. Take Universal JavaScript. Both Ember and Angular implement this. Ember implements this in [a few commands](https://www.ember-fastboot.com/quickstart), most particularly by just running `ember install ember-cli-fastboot` and then `ember fastboot`. The Angular 2 equivalent is a clusterfuck of server changes and JavaScript hacks.

There are other areas of Angular 2's implementation I find slightly disappointing. For example, no framework other than Ember has any sort of abstraction for the model layer - Ember Data. They all do direct HTTP requests and convert the data manually. I really like Ember's handling of this. By creating models that map the structure, and adapters and serialisers that handle the implementation, Ember apps are highly portable and flexible, while also being incredibly consistent in their handling of persistence. Firebase backend? `model.save();`. REST API? `model.save();`. Local storage? `model.save();`. CouchDB? `model.save();`. This pattern is one of the best features of Ember, and I'm honestly surprised newer frameworks don't implement some form of this.

There **is** an area Angular 2 beats Ember hands down: performance. Ember's performance in raw benchmarks has never been the best, and Angular 2's has always been excellent. Glimmer 2 should narrow (or eliminate) that gap, but I thought I should acknowledge it. Framework performance isn't a big deal to me. *Good enough* is good enough, and I don't think benchmark figures reflect real world use particularly well. But as I said, it should be acknowledged.

All in all, I struggle to see anything compelling about Angular 2 at all, particularly in comparison to Ember. Its only appeal is ill-gotten popularity based entirely on its name. That's a very real factor, and one that means I'll probably have to skill up in it anyway.I found vue.js and never looked back.I quite like the native TS support but I'm not sure where Angular 2 fits, it's too complicated for beginners/intermediates (check out the quick start guide to see what I mean) but too opinionated for those advanced users who would prefer to pick and mix their libraries.

The React ecosystem has huge momentum at the moment and has a solid answer to most of the questions Angular 2 tries to answer but React does so without tying you into features, libraries, etc that you don't want to use.

React has gained a lot of traction because you can adopt bits of it slowly and gradually introduce new pieces (Redux, React-Router, etc). I just can't see how you'd use Angular 2 without completely rewriting your app.I really love their native TypeScript support."
2016-09-14 17:33:36;Data flow in Ember applications;"This was really well written and I learned a few new tricks n tools to pass data around. 

Currently I've just been doing the data-down (actions/events up) approach. This has actually gotten me pretty far along and as long as you keep your components shallow, you avoid middlemen. Still it's nice to know these other tools exist. "
2016-09-13 23:09:33;Ember.js: Ember Node.js LTS Support;
2016-09-13 02:29:12;The state of affairs with Ember actions;As someone relatively new to Ember, I have to ask, why put model manipulation code in the route? Would it not be easier to put it in the controller since the controller typically gets assigned the model? I'm assuming ember-data is used. Otherwise I guess it would make sense to put it in the route.
2016-09-20 16:49:52;Videos from EmberCamp London 2016;
2016-09-19 18:14:35;Mirage 0.2.2 released, with support for Traits;Thanks /u/samselikoff ! What are traits... ?
2016-09-19 11:24:41;What's your solution for SEO/server rendered pages?;"In my case, I have three libraries which depend on jQuery. One of them is bootstrap. So I've changed to [ember-bootstrap](https://github.com/kaliber5/ember-bootstrap) which replaces bootstrap jQuery plugins with native ember components. And the two other jQuery based libraries reside in the admin panel. My plan is to make the admin panel a seperate [engine](https://github.com/dgeb/ember-engines) which will be lazily loaded so hopefully fastboot wont complain. Lazy loading of engines will come soon as it is being worked on right now. Currently, this is my vague plan for integrating Fastboot in my ember projects.Use fasboot and add this around you deps in the ember-cli-build.js
`
if (!process.env.EMBER_CLI_FASTBOOT) {
    app.import('bower_components/...whatever');
  }
`I'm currently using Prerender.io. Will probably switch to fastboot once it goes 1.0"
2016-09-19 03:44:23;Understanding Ember's resolver;
2016-09-19 03:18:35;"Creating a serverless web app with Node.js, Ember.js and PaaS services: Hyperdev &amp; Surge.sh";"> serverless.

 Unless you are doing [actual offline applications](https://unhosted.org/book/), you are using servers. Author probably meant ""servers that I don't have any say about, I don't own, or maintain""."
2016-09-30 11:27:01;DrupalCon Dublin 2016: Decoupled Drupal and Ember;
2016-09-29 18:05:56;Question: How do I use Ember Data to query for resources that have a specific relationship?;"Is that all your code? I see a lot of issues.
Where is your commenter or posts?
Also, in your filter, you should not use posts again, actually you don't need it at all.
You could do:
`this.get('model').filterBy('commenter.id', commenter.id)...`You should modify your api to accept a query param for commenter so that you can do this.store.query ('post', { 'commenter': '1' });"
2016-09-28 23:12:39;Beginner questions about mixin usage and saving/updating multiple models;"I guess it is personal preference, but I would prefer a [utility](https://guides.emberjs.com/v2.8.0/tutorial/service/) over a mixin for sharing a function.

WRT calling a function rather than an action for the most part, you can just moving the function out of the actions object. Depending on where you are calling the function from you might just do `this.get('someFunc')()` or to call it from a template you can call it just like an action, but as a property rather than a string. 

[Here is a twiddle](https://ember-twiddle.com/19db01d7a835a9416897c7bf2cf1ceac?openFiles=templates.application.hbs%2C)

I hope this is helpful and I welcome any corrections.

Edit: if you import a function as a utility you call it a bit differently than if it is just call a function on the controller or component.Regarding your second question:

Updating multiple models within an action is a bad practice. When you update a form, it should send a put/patch request for a particular resource to the API. This is how REST architecture works. Ember data is built to work with REST API.

Before we can comment on how to design the action method, we need to know the relationship between `user` and `group`. Is it `many to many` or `has many` and `belongs to` relationship?Hi, I don't have an answer to your question but when you were learning Ember 1.5 months ago, what tutorial/resources did you use?
Thanks. "
2016-09-28 13:54:23;A flight of JavaScript frameworks;
2016-09-27 21:34:27;Ember-cli fingerprinting and dynamic assets;
2016-10-07 18:10:59;[Help] How does one side-load resources using JSONAPIAdapter in Ember?;"My bad. Turns out it's as simple as specifying it in the options hash…

    findAll('product', { include: 'skus' })

Bye."
2016-10-07 06:04:43;A pretty test reporter for Test'em! No longer should your test'em output spam your log file or be a bunch of dots!;
2016-10-06 22:33:18;The Guide to Promises in Computed Properties;
2016-10-06 17:04:25;A Belated Post-Mortem of an Ember Rewrite and Other Thoughts;
2016-10-06 16:16:30;Can someone explain ._super() a bit more?;"You might do some custom transformations of the payload before you let the default normalizePayload code run. For example if your server doesn't return a json-api document. 

To answer your second question, arguments is a built-in JavaScript variable on any function. It's an array like object that contains all the arguments passed to the function. "
2016-10-14 18:54:22;Progressive enhancement isn’t dead, but it smells funny;
2016-10-14 18:10:34;Side by side: hot reloading vs full page reloading;"Is this coming to ember? If so, drool.I assume this is coming from the [ember-cli-hot-loader](https://github.com/toranb/ember-cli-hot-loader) addon. I tried it on an Ember 2.8 app and ""kind of worked"".

It only reloads components and component templates but it's really promissing. I think I got hit by this issue https://github.com/toranb/ember-cli-hot-loader/issues/22 which is why I couldn't use it...

But I'm really looking forward to it :)So hot reloading is a much better Developer experience than a full page reloading? 

In other news, grass is green! :DDoes anyone know what is that tmux theme?

edit, looks like it's [this one](https://github.com/toranb/dotfiles/blob/master/tmux/linux_tmux/themes/default.tmux)"
2016-10-13 07:32:45;[Addon] Seeing remarkable performance improvements by using href-to wherever link-to's full functions are not required;Yeah, a lot of people don't realise that link-to helper is a surprisingly poor performer. For simple links it's best to use href-to. This will change when Glimmer 2 is completed. Component performance, with specific reference to link-to, will be drastically improved.
2016-10-11 16:29:42;Why I'm Working on Yarn by Yehuda Katz;Is it likely that Ember CLI will now transition to using Yarn under the hood instead of NPM and Bower?
2016-10-11 11:25:03;Npm module breaking tests. What to do?;"Hey you might have better luck in the ember slack channel. This sub is kind of empty. 
https://ember-community-slackin.herokuapp.com/If it is just one acceptance test than it is most likely with your usage of this addon there. You would have to share some more code to really figure out and any relevant errors from the test or  onerror"
2016-10-21 17:51:14;Watch: Friendly URLs with slugs (EmberMap);_Unless I'm mistaken_, the problem with using `query` is it makes a call to the server every time that route is visited, which makes the transition pause for that return every time. If I have that resource loaded in memory I want an instant transition and maybe even prevent a background reload which I don't think is possible with store.query. Thoughts?
2016-10-18 15:33:30;Ember.js Components with DOM Dependencies;TBH I don't think I like this polling approach. What about using a shared service to notify when a particular item is done loading? Then the items component can respond to an event fired by this service and see if it should render a particular item. You could trigger this event from an image's onload/onerror events.
2016-10-18 08:23:28;Ember.js: Ember.js 2.8-LTS, 2.9 and 2.10 Beta Released (No Glimmer 2, pushed back to 2.10);We're waiting for glimmer 2!!Too bad about glimmer 2. Better they release a stable version rather than pushing it out and hoping for the best.
2016-10-17 19:47:07;Ember Weekend #77: Unravelling a Package Manager;
2016-10-27 15:50:52;BUILD PACMAN book now 100% free. Learn HTML5, ES6, and a bit of EmberJS;
2016-10-27 11:51:56;"[Help] In acceptance tests, having an each loop throws an ""disabled run-loop's autorun"" failed assertion…";"Wrap it in Ember.run.What do you have in your test code?Found the problem!

So I had created this image-loading component which I had used across several components. It preloads the image and fades it in when ready. So essentially had to wrap some of that in an Ember.run.

Thank you all and sorry bout being a nuisance. :*

Update: It wasn't even the image preloader. It was the jquery fade in call. Here's what fixed it:

    img.fadeIn(600, () => {
        Ember.run(() => {
            set(this, 'isLoaded', true);
        });
      })"
2016-10-26 18:25:57;Am I wrong in hating React JS? – Frontend Weekly;"My view is probably wildly warped but I see myself using React for 'normal' sites which need a bit of reactive function, whereas Ember to me is top down single page app down to the routes and everything. So say I'm building a normal site but somewhere I need a dashboard with some interactive data function I'd use React instead of building the whole site with Ember. It's just that I love Ember so much I end up building every site with Ember.Honestly, I think a lot of it comes down to mindset and your kind of... world view.

Ember makes sense to us, it's how we see things working, how we want them to work. But to a lot of other people they see it from a different perspective, and to them the paradigm of embedding a few components on a page is a more appropriate one.

That said, I think that some of the ideas behind that are flawed, too. There are a lot of misconceptions and misrepresentations that suggest things like Vue and React are objectively ""simpler"". But once you start building entire systems with them, managing dependencies, adding functionality, managing tooling, etc, I think you draw pretty close in terms of actual knowledge requirements."
2016-10-25 00:27:31;What ever happened to Routable Components?;"Just recently went to a talk Yehuda gave on the future of ember. TL;DR is that they are still on the road map but ended up being more difficult than they anticipated. If I find the slide deck I'll post back. "
2016-10-23 21:20:19;Ember-CLI v2.9.1 released;Absolutely love how painless ember upgrades are.
2016-11-04 00:10:57;Make your Ember.js web app more progressive - part 1;
2016-11-03 04:30:59;Getting Started with Ember and Data Down Actions Up;
2016-11-02 19:23:55;Ember v2.9.1 released;
2016-11-02 14:30:37;Let's build a Sticky Chatbox;"Pretty clear writeup. Thanks. I like how you show the tradeoffs of each approach. 

I think you're correct in asserting it's more useful to speak of the process than just handing out the answer. Much like good study/homework *should* be :)"
2016-11-01 05:28:33;Updating Relationships Independently in JSON:API with Ember Data - The JS Guy;
2016-11-08 16:32:11;Boston Ember - Ember and Ember Data Core Team Panel Survey;
2016-11-07 17:59:06;Toran Billups on Hot Reloading with Ember-Redux;
2016-11-07 04:02:16;RFC: Javascript Module API;"As a beginner Ember user, having to do stuff like this, 'import { on } from ""@ember/object/evented""' instead of Ember.on, is going to make the learning curve nearly impossible. Just looking at all of those was enough for me to feel it would be easier to learn angular 2 or react than to keep going with Ember. Ember, the way it is now, has just enough of a difficulty curve, but also just easy enough to learn at an acceptable pace to be encouraging. The RFC, while nice for advanced users, would probably be pretty disastrous for new users due to information overload."
2016-11-18 10:18:36;Two-way symmetric relationships in Ember with JSON API - Part 1;
2016-11-17 05:26:40;Looking for EmberJS Devs for a fast growing RV rental marketplace startup;If you haven't, you should post this in #jobs in the ember community slack channel. 
2016-11-15 17:47:24;November Core Team Panel - Part 1;
2016-11-15 00:23:06;Why we love Ember at British Gas;
2016-11-14 23:21:36;Choosing Ember over React in 2016;When people say that Ember has a strong community. What does that mean? Do you lift? Is it because of slack? This subreddit and discuss forums don't seem especially active compared to other  ~~denominations~~  frameworks. Is it because ember is just a nice tool that doesn't have a whole lot of controversy around it compared to something like Meteor?Excellent piece. Enjoyed reading this. That is a good summary of my experience with it over the last half year as well.
2016-11-23 11:23:07;Deveo is looking for a remote full-time Ember.js developer;I wish job posts were discouraged on this subreddit.
2016-11-22 00:11:36;Run ember tests in parallel on CircleCI;
2016-11-22 00:11:16;RFC: Deprecate Ember.K;
2016-12-02 22:56:52;"We need a better teaching &amp; learning story. · Issue #85 · ember-cli/rfcs · GitHub";
2016-11-30 23:13:26;The Travis CI Blog: Tomster and Travis, sitting in a tree: Ember at Travis CI;
2016-11-30 22:11:43;5 Things to Know About Ember 2.10 and Glimmer 2 :: madhatted.com;please, please, please i hope i don't have to learn typescript to stay up to date....
2016-11-30 18:18:00;Ember.js, Ember Data, Ember CLI 2.10 and 2.11 Beta Released;
2016-11-30 06:54:18;Ember Engines website is up!;
2016-12-08 23:40:55;Open sourcing percy-web;What is the benefit of using percy?
2016-12-08 08:22:18;Building a decoupled Drupal with Ember;http://buytaert.net/selecting-a-client-side-framework-for-drupal
2016-12-07 17:21:50;A Masterpiece;
2016-12-07 00:31:15;12 Reasons I Still Choose Ember.js;I'm confused. Where is the part about Ember in this MS/Node video?
2016-12-06 18:31:15;Four Noble Truths of Ember.js;Good article, I really wish people would stop calling Ember an MVC framework though. We've been moving away from it for so long, and the mental abstraction just doesn't fit well. CRS is the future.
2016-12-16 15:44:38;Pow equivalent to host ember apps in dev?;"I've switched to hotel and never looked back: https://github.com/typicode/hotelNo, I don't think so. What kind of workflow are you looking for, exactly? Being a KDE man...I just keep local servers open on another tab in [yakuake](https://www.kde.org/applications/system/yakuake/).
"
2016-12-15 17:34:50;Injecting a service into an adapter;You can definitely do it with `Ember.inject.service`, but that might not always be a great practice. If you're using something like the ajax service, it makes sense. Maybe you can tell us more about your use case. 
2016-12-15 14:01:07;RFC: Deprecate Component Lifecycle Hook Arguments;Guilty as charged! Glad for this clarification. Seems for the best, since all the code that uses new/oldAttrs is usually heavy handed.
2016-12-15 13:51:31;Ember.js: Security Incident - AWS S3 Access Key Exposure;
2016-12-15 00:17:53;Ember.js v2.10.1 released;
2016-12-22 04:38:03;Ember.js v2.10.2 released;
2016-12-21 07:45:23;Built a simple secret santa app to use with my friends. Maybe you find it useful too.;"Simple app written in ember though I'd ideally refactor half of that code in a real production app. https://github.com/milindalvares/secret-santapretty app!

how did you deploy your ember app?Good work dude.  Looks amazing.  I'm just learning ember myself :)"
2016-12-20 14:20:37;Drawers - A gem that brings Ember's module unification structure to Rails;Author here. Let me know if you have any questions or comments or anything. :-)I like this, I think the 12-factor app people have a good idea, that you can't look at a rails app ( models views controllers) and know what a project actually does. The whole pod things let you look at the top level of a project and know explicitly about the different parts of the whole. Interesting.  Not ember related, per say, but I love the pod structure myself and passed along the link.There is a subtle advantage to Rails's defacto folder layout.  When I'm working on an issue in a new view, or perhaps a new controller, I may want to quickly find how I previously coded a similar issue.  Having all the view (or controller) code under a common root can make it easier to search only the view (or controller) code.
2016-12-20 09:00:25;Ember Addon to add cross-browser image filters;Or ember-cli-postcss plus cssnext which transforms CSS filters into svg filters.
2016-12-17 19:27:53;Busting the Myths about Ember – Developer Paradise;
2016-12-29 18:15:42;Dead code detection for Ember applications;
2016-12-29 11:17:45;What's your offline-first stack like?;http://hospitalrun.io/
2016-12-28 15:02:01;Use a service worker to serve assets fast and keep them updated;Any more detail on the project? The readme is pretty sparse.
2016-12-25 06:43:04;Jquery dom manipulation and ember;"Since it's included in the library, I would say it's definitely alright.

However, I'm trying to use jQuery as little as possible nowadays. You get many cool features for free (and usually better code quality) by relying more on computed properties and less on DOM manipulation. If you want to use FastBoot for example, jQuery is obviously a nono during page initialization.Yes, it's fine. It's considered to be a more advanced feature, but lots of developers do this. You'll even find some addons as well.

Ember guides discuss this topic here: https://guides.emberjs.com/v2.10.0/components/the-component-lifecycle/

TL;DR; you should be careful to not mix ember's management of the DOM with a 3rd party libraries management of the DOM. Their properties/attrs can easily clobber each other. When I integrate a jQuery library I typically make a component that is dedicated to this. I use the component's life cycle hooks to keep the state of the component and the jQuery addon in sync. Also, try to keep the template of that component as minimal as possible. 

If you have more specific questions, I'd be happy to answer them.I'm a n00b, but from the expert who's training us:

The only dom manipulation that's ok with jquery is the one where ember has no control of. Only Example that comes to mind: body tag manipulation.  

All other places, if you find yourself trying to manipulate dom, you are not going the right way. Rule of thumb is that you do not do any DOM manipulation with jQuery. Rather, you create an array of data which you store into a property and the loop through with your Handlebars page. Or you show properties.

There's always exceptions, obviously, as /u/doodroller mentioned. But remember that the view layer, being your template, is not ment for logic besides a few true/false if statements, loops and such."
2017-01-06 16:29:38;Write Elm in your Ember app;This is interesting.
2017-01-05 21:26:12;Tom Dale is joining linkedin;"Seems to me like Linkedin is treating top Ember devs like pokemon. Gotta catch em all.

Be careful Yehuda, they are coming for you next. :PI like seeing a big company like LinkedIn betting on Ember so much, even hiring the top Ember talent to deliver a great product. I believe this will give Ember core team members valuable insights into how various organisations handle their development and what's needed in a modern web framework. I expect we'll see many great improvements in 2017, this makes me very excited. 

Also, congratulations to u/tomdale :) "
2017-01-03 19:13:26;Anyone Interested in 30 Days of Ember?;I think this would be awesome. The 30 Days of JavaScript project is really great, and I've seen first-hand how awesome small exercises with quick wins can be for helping people stay motivated. I for one would love to see this. I'd also love to see this happen!Can get some heat in the Ember slack chat.Anything but Youtube, I can't stand Youtube (or video) coding.I'd be interested too. Using Ember since 6 months for professionnal project but I learn every day.interested!
2017-01-03 17:09:07;Let's get Mirage a design refresh and logo!;Why? It's perfectly fine as it is.1100$ wait. what?
2017-01-03 16:08:43;Front End Happy Hour: Ember - Gin & Tomster [Podcast];
2017-01-12 02:02:56;Is emberschool worth $500?;"Ember Casts are very high quality and are now free :D [Earlier Reddit Post](https://www.reddit.com/r/emberjs/comments/5n13t3/ember_screencasts_all_videos_are_now_free/?ref=share&ref_source=link)Hey, creator of EmberSchool here.

The answer is different for everyone, but the biggest question you should ask yourself is: **how much is your time worth**?

Without EmberSchool, you'll be patching together resources from dozens of different places- some of them up to date, some of them not; some using conventional Ember, some using cutting edge experimental techniques; some written well, some written poorly.  By the time your journey is done, you'll have lost a bunch of time (conservative estimate: two 40-hour weeks) in your effort to save money.

$500/80 hours = $6.25/hour.  Are you making more than $6.25 dollars an hour?  If so, buy EmberSchool and spend the time you save working (for more than $6.25/hour).

Let's say your employer is paying you $1,000/week (that's pretty low)- will you want to write that you spent $2,000 of time piecing together blog posts in an attempt to save $500?

Of course, there are some places where programmers are not paid well, and in those cases EmberSchool makes less sense.  There are also some incredibly bright folks (mutants?) who can master giant frameworks in a week just by reading the docs and random blog posts, so EmberSchool would only save them less time than it would normal folks.  If you don't meet those two disqualifiers, and you're serious about learning Ember, EmberSchool is a great choice- it will take you farther than any other Ember intro course out there.OP here ... I've spent a couple of days looking at ember tutorials on the web and they're exactly as described by Jeffrey Biles (emberscreencasts): a scattered hodgepodge.  
 
I started the Demo at emberschool.com and so far it's great.  I'll more than likely sign up next week.

See ya in class, Jeff!Is there an Ember resource that goes into more depth than this? Especially one that is as up-to-date as Ember School?  The challenges and projects push you beyond the instruction and the author is engaged via comments/emails. Expensive, but I think it's worth it if you want to dive into Ember.hell no$500 isn't small change but having used EmberScreencasts I think the value would be justified for an individual with a definite requirement to learn Ember. 

If you are just looking to give Ember a first spin then you wouldn't spend $500 but if you know you need to learn it then I think the time saved would be worth it.

Decent training courses are hard to find for most frameworks, frontendmasters has been good in my experience, as has egghead.io but they can become outdated quite quickly as they don't update the courses over time so some can contain old/incorrect information."
2017-01-11 00:12:48;Ember-Bootstrap has a shiny new website;
2017-01-11 00:11:11;Search the code of every EmberJs community addon;
2017-01-09 23:05:43;Ember Screencasts: All Videos are now free!;"These are super high quality, very gracious they're free now!Spectacular! Is this a limited time only?Really cool thanks! Very, very cool. Is there a way to download for offline viewing?Wonder what happens to my subscription? :)I subbed to this when I first started ember. Was super helpful! 

I still go back occasionally. Awesome that they are free now. Definitely doing you're pay for the community"
2017-01-09 15:12:57;Mirage's new ORM supports one-to-one, many-to-many, one-way and reflexive relationships;"Anyone moving away from Ember to other frameworks (react, angular, vue) is sure to ask whether there is any Mirage equivalent in framework X. After knowing that there isn't any, a lot of them will have no choice but to switch back.

@samselikoff Thank you for Mirage.I decided not to use Mirage more than a year ago because I felt it was limited when I had to deal with relationships. But I've been following its development and now using Mirage again for my Ember app is definitely on my list.I really want to use this for testing but I just can't grasp how to get it to work in the test environment. Does anyone have great in depth tutorials on this as the guides are kind of meh."
2017-01-19 01:42:15;Beginner: Adding CSS per template;"So, out of the box you can put everything in your `app.css` file.  However, as you've probably determined yourself, this can be a pretty hard-to-manage solution as your application grows.

Thankfully, there are a few addons that help make this story a little better. My favorite, which I use on all of my Ember projects, is `ember-CSS-modules`.

https://github.com/salsify/ember-css-modules

That's really cool about this addon is that it allows you to put a `styles.css` file right next to your `template.hbs` for each component.  So, you might have an app structure that looks something like this:

    app
    - application
      - template.hbs
      - styles.css
    - components
      - header
        - template.hbs
        - styles.css
    ... 

Any classes defined inside the `styles.css` will be accessible to the adjacent template using the `local-class` property.  So instead of assigning a `class` to your elements, you'll assign a `local-class`.  If you've never seen a system like this before, that scopes styles to a component, the idea is pretty simple -- take all of the class names in the CSS file and modify them so that there's no way another file has the same class name, and then update the template so that it also uses the new, unique class name. This allows you to keep styles from bleeding into other parts of your app accidentally.

One of the other things I really love about this addon is the idea of composing classes together. Instead of assigning multiple classes to a single HTML element, you can define a class as composing from other classes.

    .header {
      composes: type-36 from 'my-app/styles/typography.css';

      font-weight: bold;
    }

This makes it really easy to share styles between your application while still making it easy to tell exactly where one of those styles comes from, rather than having to `grep` through the whole codebase and find all of the places that you have that class defined.

The last thing that I really love about this addon is that it's built on top of `postcss`, so it's really easy to hook in other transformations (such as `autoprefixer` and `clean-css`) without needing to pull in a separate tool to run those things later on. You should really look into Sass. All of your stylesheets get compiled into app.css, which is then loaded in your index file. There isn't much to gain from loading stylesheets into each template individually considering Ember apps are SPAs and your CSS file probably won't be all that large once it's been minified.

In the end, you load it once on the initial page load and the rest takes care of itself.I think there are two potential ways of answering your question.

The first is triggered by your reference to 'page'. Ember routes and especially components are blocks not pages. They are independent, largely, of the blocks that surround them. So a css file per page isn't a useful mental model. What you could think of as a replacement is 'namespace'. Each route/component is a namespace that you can implement in both the html and the css. Use a unique name to prefix each class and define the classes in their own .sass file for each route/component. Then include (meaning the sass include method call) the child .sass files in the main.sass file. This is essentially what the plugin previously mentioned is doing but more sassy. If you're using the Foundation css plugin then you'll already need includes to pull that stuff in.

The other way of answering this question is to discuss other SPA frameworks. Some are going the way of a single file per component. Each file contains the JS, CSS and HTML template needed for that component. In most cases you are no longer using the actual HTML or CSS languages but JavaScript based replacements which is how they can all go in one .js file. For me this isn't useful as I don't dislike either HTML or CSS and I don't feel a desperate desire to replace them with something aimed at developers rather than designers. Also the file quickly becomes way too big for my tastes. But that's a personal opinion and a reflection of my comfort levels -- I can see the appeal and the idea of a shadow-CSS-DOM is fascinating. In the past, Ember experimented with a feature called 'pods' which was an enforced organizing of related files. This was later deprecated as the implications reached too far down into core but it might return as Ember core is slowly modularized into separate plugin projects. There are several plugins however which aim to auto namespace CSS and allow you modularize your CSS by route/component. Look through the plugin finder website for some useful keywords like 'modular CSS' for example. In general though, Ember is about plugins. You can't be afraid of them too much. Some frameworks fight the concept but ever since Ember-CLI built a foundation for plugin integration they are where 90% of the joy that using Ember is found. There are some absolutely amazing plugins that are auto-installs for me.

PS: there's another way too look at this which is that you're building a 2000 page website and there is so much CSS that it can't all end up into one minimized CSS file no matter how modularized its source is. You need to only include pieces of CSS so that visiting one page doesn't download 10mbs of CSS needed for all the other pages. This is a much bigger goal than a simple Reddit question can hope to answer.https://www.youtube.com/watch?v=rRZuoxoN9zU"
2017-01-18 20:13:19;"Ember CLI v2.10.1 ""Greetings from Munich"" released";
2017-01-27 16:46:45;What is the best / easiest way to get an embedded map with markers in an ember 2 app?;"Ember-leaflet has been my choice. The walkthrough on their site should be sufficient to get you going.[ember-cli-g-maps](https://www.npmjs.com/package/ember-cli-g-maps) worked for me
Ember leaflet? https://www.emberaddons.com/?query=maps

I've used ember-g-maps and it worked for what I needed."
2017-01-26 23:03:09;Ember Sparks – Ambitious UI components for Ember apps;nice work.  we implemented something very similar for the toggle.  looks great.These are nice and clean. That said, I can't see myself using anything but (potentially) the toggle. The buttons don't seem to be able to have an icon on them, unless there's a block syntax. The input doesn't add anything that I would personally want over `{{input}}` and the select seems like it lacks a lot of utility compared to Ember Power Select.
2017-01-25 20:38:40;Component side effects - a new EmberMap video series. Free until 1/26;Really great content. Pros and cons of several choices when using components.I always thought some of my specific component is not following data down and actions up principle but it's easily understandable and not reusable. So from now on I will call those component as SMART Component. 
2017-01-24 12:30:40;Ember 2.11 released;Most changes seem to be in Ember CLI. Happy to see Bower fading away! 😬
2017-01-21 22:56:21;rails ember cli vs rails && ember cli. What's the difference and how do I properly deploy?;"Use a separate repo. Ember CLI is great, and the deployment story is dead simple. Have a look at https://github.com/ember-cli-deploy/ember-cli-deploy/

You build, push assets to some sort of CDN, then update a key in Redis that informs your rails app what HTML to display. Happy to help if you want to pm me. Use the rails-ember-cli gem.

The additional complexity of managing a separate repo and deployment it not worth it when building out a new ember/rails app.

If you go with ember-cli-rails you can always migrate away from it. You can just defer the cost of setting everything up until then ;)

My general advice is to avoid independent deployability (separate repos and build process) until you notice yourself deploying nothing but ember app updates or rails app updates. 

Cheers,
Benyou could always do Node Express over Rails, I personally found it more easy to understand how to build REST API and how it functions :)"
2017-02-03 16:11:25;A note on actions;This is great. I must admit I've been finding actions pretty hard to follow. It think it's one of the few parts of Ember that's not particularly clear.Good article! I was having trouble understanding closure actions when I was trying to get rid of all instances of this.sendAction() in my code. In fact, I think perhaps you should update the article to make note of it. 
2017-02-02 20:27:46;Ember Observer's Code Search;
2017-02-02 06:07:18;Subscribe to get updates from the Ember.js Learning Team.;
2017-01-31 16:54:01;New website for ember-service-worker;Could someone ELI5 what a service worker is in the programming world?
2017-01-31 03:01:06;Convert integers and decimals to words. Need contributors for multi-language support!;"Hey guys I created an addon for converting numbers into text/words and I would like it to have multiple language support. Currently it only has english, if anyone speaks another language and feels like tackling the challenge that would be awesome!

Also if you checkout the code and find any room for improvements please address them, comments are very welcomed!"
2017-02-10 22:48:04;Cascade Deleting Relationships in Ember Data;
2017-02-10 17:55:22;Ember-CLI v2.11.1 released;I think you already submitted this?
2017-02-07 17:24:07;"Ember Testing (Unit, Integration &amp; Acceptance) - Void Canvas";
2017-02-07 17:19:50;Ember Data v2.11.1 released;
2017-02-05 00:42:29;good real estate template for emberjs?;"Ember is just a JS framework, you can implement any template you like as .hbs files.Your best bet is to just go somewhere like theme forest and search for real estate one. I believe they have some good zillow/trulia looking templates for relatively cheap.Start with picking a good and highly customizable wordpress real estate theme from this resource -  https://www.templatemonster.com/category/real-estate-wordpress-themes/ . If you're not a tech savvy person, this way is perfect for you to go.Oh dear, I must have worded this really badly :(  

I am tech savvy and if you look at my github project you will see that I have build a complete property listing website that does a better job than most wordpress templates.

I shouldn't have used the word template in my question.  What I mean is, is there some sort of emberjs project already targeting real estate that I can use as the starting point for replacing the current front end?

Maybe something like this but for emberjs:

http://coenraets.org/blog/2016/11/new-and-improved-ionic-2-sample-application/
"
2017-02-17 18:39:10;"Help me ""Obeying the testing goat"" a.k.a. encourage me to test ember code";"So exact same situation as you.  Ember frontend, Django REST backend.  ~1200 django tests and 3500 ember tests.

Why I love Ember tests

* Because I can move lots of would be Selenium tests to acceptance tests and then leave my Selenium tests to just make sure the api endpoints are wired up.
* I can refactor anything and have confidence I am not breaking the world.

How I test:

* https://vimeo.com/146953048
* integration tests to ensure components render correct text and can interact with certain components.  That's it.
* unit tests to ensure correct model relationships are wired up and model validations are in place.  If a component/route/controller has some complicated logic, I might unit test that as well.  Also test mixins, helper, utils here as well.
* acceptance test for anything involving route transitions.

How I write components:

* dumb components.  Via their api, they should follow DDAU - data down actions up.  So they receive data and send actions back up to the route or controller or top level component.  If your components are sending off xhr requests, changing app state, etc, then you might want to consider moving that logic to the aforementioned places.  It will make testing your component much easier.  Just try to make them as dumb as possible if you can.


One **big caveat** is how your app is structured.  *We are fitting our app into Qunit, not the other way around.*  Most problems (like flakey tests) have usually been due to me like setting state and not properly destroying that state between each test.  Moreover, when I find myself mocking the heck out of everything, I restructure my production code to make it easier to test or move to a different level of testing (integration to acceptance).  Lastly, if my prod code has a sane structure, I know testing will be easy.

So don't expect testing to be easy.  Your application code must be easy to test as well and that greatly depends on if you follow some accepted standards on how to structure your app (which, I understand, might be hard to find).

And yes, testem opening up multiple windows is suuuuper annoying, but I am sure somebody is putting in a fix.  Have seen it brought up a few times in the Ember slack channels.@docxp Yes, obey the testing goat! Great book by the way -> http://www.obeythetestinggoat.com/pages/book.html

There are some considerations…

- Does your Django API only serve one client, the Ember one? Or is the API designed to serve multiple clients, e.g. Andriod, iOS too?
- What is the outside? I think that a true integration test means end-to-end, client and server.
- Since Ember does’t provide true end-to-end testing that is outside the scope of what the Ember test helpers and conventions support. You may decide that you want to write smoke tests with python and Selenium as your functional testing layer.

From the outside in perspective…

1. The outside is the integration between API and Javascript client app.
2. The outside is also any REST request (verb/noun + params?) to the API, so perhaps solid ViewSet tests are need for the API contract (format/responses). Fixtures or factories here could be shared for use with Ember “acceptance” testing, or not. They will however inform the acceptance tests what the API format is.
3. Are you using an API format, e.g. JSON API Spec 1.0? if so how much of that is needed in the ViewSet tests. I guess whatever is easy to maintain, and the what satisfies the client needs.

TDD considerations…

1. Do you have static HTML/CSS from a design or is that in flight too? If not maybe it’s worth writing static prototype content/code in the Ember app first
2. Can you start with Selenium tests that cover the happy path? (perhaps this uses the static content, prior to models, adapters, serializers, components, actions etc.)
3. Can you avoid duplication of tests between the “functional” end-to-end tests and the Ember acceptance tests? 

Ultimately the strategy is up to your project needs.

Ember testing considerations…

1. Make the Acceptance tests simple to maintain, just test the flow, or general user experience.
2. Utilize tools like Mirage or Sinon.js for mocking. Or in the case of using Fetch API just mock window.fetch with a resolved or rejected Promise that satisfies the test case.
3. Now that there are tests from the outside perspective write component tests - Integration tests.
4. Tests components wisely, it’s ok to not test private API inside your components. Test all the options your component can support - e.g. the arguments during invocation. Test all the actions fired, not the side effects they cause.
5. Stub methods or mock services not under test, just test the component itself, avoid using needs and adding a bunch of dependencies. Perhaps use Sinon.js for stub'g. Also you can just extend the component under test within the test and redefine methods or services that are not the subject of that specific test case.
6. Unit test as needed for TDD, if a test is for private API - add a comment that says “if this fails, delete it”
7. Use ember-cli filter `ember t -s -f FIXME` to only run tests you're working on, Need to type ""FIXME"" in the test description for that to work. You can also use `-m ""name of module""` as a shortcut too. If testem get's weird restart or close those extra browsers that are launched.

- See: https://gist.github.com/pixelhandler/3865763ba3a8a8f7529823e0419adc5b
"
2017-02-16 19:15:30;Ember.js v2.11.1 released;
2017-02-14 04:31:57;Previewing revisions with ember-cli-deploy-s3-index;
2017-02-14 04:31:13;Is Your Ember App Too Big? Split It Up with Ember Engines;"Oooooh. I never really got the intent behind engines before. I thought maybe it had to do with running stuff on different contexts (mobile, server, etc) but this makes a lot of sense.

Really nice addition I'm incredibly unlikely to use! This is something I've been intrigued about and thinking about the use case for quite some time; thanks for posting!I've been using Engines for a while now at work. They are a great concept, but be warned they are still really rough around the edges and the documentation is lacking. This is what our company essentially does, except without using the Engine syntax/generators. We include our main app (e.g. 'blog') as an npm module in our other apps (e.g. 'admin').

https://docs.npmjs.com/cli/link"
2017-02-14 04:30:39;Using npm libraries in Ember CLI;
2017-02-21 20:45:02;Testing EmberJS Addons by Nathan Hammond;
2017-02-21 20:37:55;The 2017 Ember Community Survey Preview :: madhatted.com;
2017-02-21 20:37:15;Clean ember addon component customization with ember-spread;
2017-02-21 20:33:59;Ember.js v2.11.2 released;Anyone knows what the changelog is? Can't seem to find it.
2017-02-21 14:08:32;Intermediate test driven development;
2017-03-03 20:05:45;How am I supposed to run test with EmberJS and why should I? Few questions too...;https://guides.emberjs.com/v2.11.0/testing/acceptance/If you use g-map, you need some css to give map element some size, otherwise. Maybe you already have it, but I forgot about it several.
2017-03-01 08:15:25;Ember Community Survey 2017;
2017-03-01 01:11:29;Test Your Apps in Fastboot;
2017-02-28 21:17:58;Ember Data v2.11.3 released;
2017-02-28 21:17:22;Do not confuse environment for deploy target;
2017-03-08 18:01:10;RFC: Add ember-cli-dependency-lint to the default app blueprint.;
2017-03-08 18:00:08;Building a Keyboard Manager Service in Ember.JS – Icarus’ Wings;
2017-03-08 11:05:21;"Remove ""bower.json"" and only create if necessary - enrolled in ember-cli release 2.12.0-beta.2 release";
2017-03-07 22:17:23;Modify data value with a function triggered by controller action.;"It has nothing to do with the if, but the function is not bound, so this inside the function is not the same as this outside the function. Also, what is geocode inside? this.set will only work inside an Ember Object. Also, in the future, please correct your indentation.A couple of things for me: your function is called geocode, which is also a method inside your geocode object. And you're passing arguments through it that I don't see you use. What happens to mylat and mylng? Also, style conventions...Is that myIat and myIng or mylat and mylng (hint, the first two use camelcase, so they're capital i's, not lowercase l's). I'm already confused, and I'm not even into the function yet.

Next, I expect you have a scope problem, caused by your callback function within the if block. If it's running asynchronously, then when you try to alert latlng at the end, it hasn't been set yet by the return from Google maps geocode. Plus, as the other reply said, this.set probably isn't working in there, so even if it's not asynchronous, it only exists within the callback, which might as well be an anonymous function that sets lat and lng and then goes on about its lifecycle.

Try setting latlng to something other than an empty string at the beginning, and I'd almost guarantee that will alert. Either that, or your function is silently failing when you try to this.set the model to latlng.

What happens if you move the alert latlng into the if block scope? My guess is it works there. Is there a reason you're doing part of your logic inside that scope and then some other part outside? It doesn't seem you're returning or exporting it, so why do you need latlng, lat, or lng outside of a successful call to the Google geocoder API? Are you planning to be able to manually set them if they're passed through to your geocode function (myLat & myLng)? If so, why not deal with their logic separately from the API call to Google? Something like:
        
    geocodeLocation(args){
       const google = window.google;
       var geocoder = new google.maps.Geocoder();
       if(typeof(args) === 'string'){
           geocoder.geocode({
               'address':args}, 
               function(results, status){
                   /*Deal with it with 
                   another nested if*/
               }
           );
       }else if(typeof(latLng) === 'array'){
           var lat = args[0];
           var lng = args[1];
           /* 
           geocode({lat,lng}, 
               callback(results, status){
                   //Do other stuff here
                   //With a similar nested if
               }
           );
        }else{
           //This should be bad to get here.
           //Nothing worked properly at all.
           //Probably log an error for tracking
        }
    }
        
This is by no means a solution, but maybe it will get you thinking  about what you're actually trying to do with each piece of information floating around in your original function. Hopefully it was so.wwhat helpful.

Edits: typos"
2017-03-07 08:42:45;PromiseProxyMixin: pure Ember alternative to ember-concurrency;
2017-03-16 21:08:20;Glimmer: Blazing Fast Rendering for Ember.js, Part 1;
2017-03-16 20:22:15;Ember-CLI v2.12.0 released;Can someone tell me why everyone's excited about not requiring bower anymore?
2017-03-16 20:21:37;Ember.js v2.12.0 released;
2017-03-16 15:35:24;Does ember Mirage scale well?;"I'm not sure what you mean. Mirage isn't a production database in the sense of actual use, it's entirely for testing and development mocking. It is **not** an actual persistence layer, but a pretend one.

Something like Emberfire, or a local database connected to an API is how you should be doing backend.Mirage is there to write dummy things for your app, its for testing.

like say you want to make a blog, but you dont want to mess with database and stuff.

with Mirage you can manually mimic the database, to get information from it.

now if you want to do a production app, that connects to a real database, and stores the information, and gets it, modifies it and updates it.

I suggest you use something like http://Expressjs.com with Node.

Here is a really great tutorial

* Videos https://www.youtube.com/playlist?list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X

* Source https://github.com/yamalight/building-products-with-js/tree/master/server

EmberFire will work too, however you're bound by the rules of google, with Expressjs your not bound by anything, you can use and do anything you want.

I would use firebase to store user info like passwords, its the most secure server on the planet, but anything else it's questionable as there are better alternatives, and cheaper."
2017-03-15 05:51:37;RFC: Custom Components API;
2017-03-24 21:38:01;Ember CLI v2.12.1 released;
2017-03-24 20:53:24;Atom Ember Components lets you see all components rendering the current component you're coding and working with;
2017-03-21 06:16:31;Javascript Frameworks: A futile attempt at objectivity;"> Where Ember has struggled recently is sticking the landing. It has some amazing and much needed features in development. Angle bracket components are a perfect example. They were implemented in 2.10, but the feature pulled because it turned out to have some nasty edge cases. Now it’s in limbo. Fastboot trivialises Server Side Rendering in a stunningly well-thought-out package. But it’s in limbo. Svelte Builds are in limbo. Changes to module import approach, unified testing, and other major features are in limbo.

BOOM. 

This is exactly what I've said for the past 2 years. You can add Routable Components and Engines to that list as well. The whole ""Ember 2.0"" pattern is really in a state of limbo with controllers hanging around. While render speed is important, there is just more to choosing framework than performance. It's been two years of tinkering around with the rendering engine. It's time to start improving the ergonomics of ember-core. "
2017-03-20 18:39:43;Authenticate to API;"Create your own API server that auths to their API and fetches the data, and hit that. 

That or see if you can get an API key/token you can use from the client instead of user+pass.What kind of authentication mechanisms does the API support?

Generally speaking, this is the kind of case that would be handled by OAuth, where you would have a flow that would redirect the user to the provider's page to login and authorize your app to access their data.

Alternatively, if the API stores login/session information in a cookie, you can redirect the user to log in at the provider and then set the withCredentials option on your AJAX request so the user's login cookie gets sent when you make API calls to the provider.

If there is really no way around you handling their username/password to the external service, this probably needs to happen on the server side to be secure, and you'd better have the proper protections in place to secure that data.While this may not help if you're not the owner of the API in question for others who are wondering about how to auth with their own API's then I would say JWT with ember simple auth is the way to go.

https://jwt.io/

&nbsp;

http://ember-simple-auth.com

https://github.com/jpadilla/ember-simple-auth-tokenuse http://passportjs.org/ OAUTH authentication on say your Node https://expressjs.com/ API Server.

Also there is no way to secure authentication in a single page application, anyone can get/ see the request with username and password if you authenticate it directly from the application.

Only way is to authenticate it on server side to make it secure."
2017-03-19 23:56:07;Release note: Ember 2.12 and 2.13 Beta;
2017-03-31 08:21:35;Ember's future, with Tom Dale;Linkedin! What have you done to hipster Tom????Where's the rest of this video?
2017-03-30 23:07:45;Lessons learned building a REST API theme for WordPress (with Ember);
2017-03-29 15:46:48;My first Glimmer.js app comes to 42.9KB! Equivalent Ember app is about 200KB (gzipped);
2017-03-28 18:35:02;Our Path to Ember;
2017-03-28 18:15:16;EmberConf 2017 Live Captioning;
2017-04-07 18:12:42;EmberConf 2017 videos;It starts with a private video?
2017-04-06 12:33:18;Help with components;"Think of a component as an individual part, or mechanism with a defined purpose. For example, an accordion. Anything that requires a little bit of JS to operate could be a component. You could easily make an accordion with straight CSS an JS, the component API is just a different way to code your desired behavior. If you haven't ever made simple UI elements with JS, do that to start, and then convert them to Ember components.

You could also do layout only components, for example a contact card. Rather than copy and paste your desired HTML all over the site, you can make a component and just pass in your name, phone, etc. If you every wanted to change the layout, you would only ever have to edit the component template. Think about looping through a list of... Users. You would want each user in the list to have the same general layout. If you look at a framework like Bootstrap, all of the CSS components could be Ember components (like the entire nav bar as 1 component)

The current Ember guide makes you create a map component (if I remember correctly). A Google map (using JS API) requires JS to set up, and that means you could do that setup, within the component lifecycle. Then everytime you create a new component in your page templates, it would auto set up the map and you would just have to pass in parameters. Hopefully that helps.

Components are all about 'scope'. In General, all state and style should be relative to the component. I would start as I stated above, make an accordion component from scratch, maybe a slider (you could probably even use owl carousel or some other library) and get those to work. Those types of components should be easier to grasp then, for example, one that integrates with Google maps.

I don't know any definite resources besides the guides your already working on. I get stuff done by Google searches, then just starting a clean project, and just mess around with whatever I've found online. Problem may be that Ember has changed quite a bit, so be aware of what version you are on, and what version your guide was from. Good Luck.

TL;DR. Components are reusable pieces of code. They are good for elements that require JS to setup or use (and potentially clean up), or HTML that is repeated across a site.Join our Slack group! We are friendly. 
https://ember-community-slackin.herokuapp.com"
2017-04-06 05:31:35;The Glimmer VM: Boots Fast and Stays Fast;
2017-04-05 21:18:27;Ember.js: EmberConf 2017: State of the Union;
2017-04-04 12:38:42;Less than *ambitious* websites with Ember.js;
2017-04-13 16:22:47;This Github Repo will teach you How to find and remove memory leaks;
2017-04-13 13:45:51;What you didn't know about class and attribute bindings in Ember;
2017-04-13 13:18:27;Ember with Yarn vs NPM;With Kats working on the Yarn team, it's a safe bet to assume it's probably only a matter of time till Yarn becomes to default package-manager for Ember.js...right?
2017-04-13 10:07:50;Why I’m excited about GlimmerJS (fast and light-weight UI components);
2017-04-13 02:14:02;The Future of Ember's Testing and the Beheading of jQuery - Coder idiosyncrasy;
2017-04-19 22:08:49;🐹;???
2017-04-18 16:53:04;Deploying Glimmer Apps;"I think this is kind of cool for just tinkering, but it definitely makes me a little uneasy that the future of ember is one without ember-core, ember-router, etc. All this pushing of ""just use glimmer"" from the core team feels like sending mixed signals."
2017-04-16 13:49:45;The state of search engine visibility of Ember apps;"Fastboot is pretty stable now. Using it myself on some projects.I personally think that if the user visits more than 4-5 ""pages"" in a session and needs some sort of persistent state, then Ember (or really any JS-framework) is great. If it's more like sku-based ecommerce, or news publishing, I'd go with something server-rendered. Google can index Ember apps just fine, https://embermap.com is an Ember app and we get plenty of traffic from Google SEO. That said, sites like Twitter, Facebook, and Reddit cannot properly crawl our site - so we lose a bit when it comes to social sharing.

If SEO is your #1 concern, I might not use Ember. While things like Fastboot will help crawlers, it does add more work/maintenance/debugging. If SEO by Google is all you care about, and it's not that important, then Ember is a great choice.
Has anyone tried any server-side rendering service? The site I'm working on has a jQuery plugin that I cannot get rid of, so fastboot isn't an option. I tried using http://prerender.io but its support for Django is antiquated. Tried http://prerender.cloud as well. It seems to load the app properly - yet to deploy it on the main site.My suggestion to you is to keep your marketing-like content (re: the stuff you want crawled) separate from your Ember app. You don't want to have to re-deploy your app anytime you want to update your landing page, for instance.

Easy to setup nginx/apache to source static content for the marketing uris vs dynamic stuff you need Ember for."
2017-04-16 13:10:56;The Ultimate Guide to Authentication in Ember;
2017-04-16 02:20:03;Is it possible to enable new angle bracket glimmer components in any build of ember?;As I understand, they still need to bring the components from GlimmerJS back into Ember before that is available.Not yet! The first step is to provide a primitive that allows users to register custom components to enable experimentation. You can read the [Custom Component API](https://github.com/emberjs/rfcs/pull/213) RFC to know all about that, and then participate in the discussion :)
2017-04-28 16:13:34;Understanding Pure Computed Properties in Ember;About half of my computed properties need to be recalculated when only some of the referenced attributes change. It would be better if pure could distinguish between properties that need to be watched and those that are needed for calculation.
2017-04-28 01:38:47;My EmberJS DC presentation on ember-redux (april 2017);
2017-04-26 22:46:13;Going to ng-conf as an Ember.js User;
2017-04-26 17:33:05;Does Glimmer mean the death of Ember?;"To be honest, I was really hoping that Emberconf would see the dust settle on some big-ticket Ember items - Fastboot, Engines, Modules, tree shaking, svelte builds, etc - and was kind of disappointed that we just got more dust. Don't get me wrong, I get that the GlimmerJS use case attracts more people under the general umbrella. But to me, Ember's biggest current flaw is dire performance of full Ember apps on mobile devices. Which fundamentally comes down to extremely large file sizes. I'm a bit skeptical that this won't result in further resources being diverted away from Ember.js and toward ""Glimmer only"" work. But I certainly appreciate Robert taking the time to address these concerns."
2017-04-25 06:31:48;Crossdomain ajax blocked on Edge and Firefox, working on Opera and Chrome.;"You must configure your server to accept options method. And ask server to say it is okay to accept cross domain request. If you are using rails, you want  https://github.com/cyu/rack-cors
Add to your `Gemfile`
`gem 'rack-cors'`

and then in `config/initializers/cors.rb`

    
    Rails.application.config.middleware.insert_before 0, Rack::Cors do
      allow do
        origins '*'
    
        resource '*', headers: :any, methods: [:get, :post, :put, :patch, :delete, :options, :head]
    
      end
    end
    I don't have any more ideas in this case. My experience is firefox will generally send an option to backend when requesting domain is different (CORS). May I suggest that you isolate the problem. Start by requesting the rest service directly, if that works you can move to using jquery ajax. If that works, then it is ember problem. If not, u may want to try to request from imgur or other public api. "
2017-05-04 13:23:23;An introduction to Glimmer;"Nice! I'm wrapping up a glimmer project now. It's been pretty great, actually. Some little hiccups here and there, and parts that obviously aren't finished, but otherwise, glimmer is basically exactly what I've wanted out of a data-binding framework since I first used Ember.

"
2017-05-02 22:29:03;newbie question: Ember / firebase vote button.;"You should be able to get the id of the post using post.id. You could pass in the id of the element of the action

    <button {{action 'upvote' post.id}}>Upvote</button>

Then in your action call the id will be available as the first parameter. i.e. upvote(id){console.log(id);}The #help channel on the ember slack is a great place to ask these types of questions. Might get a quicker response than Reddit. "
2017-05-02 06:32:30;Ember.js: Ember 2.13 and 2.14 Beta Released;
2017-04-30 21:16:54;Ember Tips: Managing Timeouts And Delays;
2017-04-30 13:53:28;I wrote a free ebook - Ember for Artisans - A beginner book that may well appeal to some visitors here.;
2017-05-12 23:42:46;ember-attacher - a modern tooltip library inspired by tippy.js.;
2017-05-12 19:29:23;"Some advice for maintaining a ""Livable"" Ember App";
2017-05-12 01:38:12;I created a service addon to detect if requests are in progress. Looking for feedback!;Hey, that's really cool and simple. What kind of applications do you think it would be useful for?
2017-05-11 18:59:02;Stubbing Components in Ember Integration Tests;It is great to see articles like this. I often feel like there is not enough information available for testing ember apps outside of integration tests testing DOM rendering.
2017-05-11 16:22:10;The Future of Ember.js: An Interview With Tom Dale at EmberConf - Part Two;
2017-05-18 16:06:26;New Guides for ember-redux;
2017-05-17 19:41:35;Maintainable User Interface Testing with Ember – The Ember Way;
2017-05-16 17:08:13;Ember-tri-state: Render content based on the state of promises;At first I thought this was going to be a meetup for Ember programmers in NYC, NJ, and CT.How much overlap does this have with ember-concurrency?
2017-05-16 17:02:50;A11y: An accessibility guide for Ember developers - Melanie Sumner;"This is a very useful tutorial indeed! Thanks for uploading it. Ember is a really good JS framework for making single page application. It uses two-way data binding, making the model and view components constantly synchronize. On [our webpage](https://mobilunity.com/blog/ember-js-vs-angularjs-developers-2-business-models-to-build-a-team/) we also discuss that it supports Model-View-Controller and modular programming. It also has a very good development speed and great performance. 
"
2017-05-15 11:13:51;Conference suggestions?;"I don't mean to sound snarky, but I would say Emberconf 2018. I've been to a bunch of JS conferences and to Emberconf 3 times. If you're using Ember on a regular basis, Emberconf is so so valuable. 

Beyond the talks, it's an opportunity to meet many of the people you see online throughout the year, including addon maintainers and maybe a core member or two. If you're open to non-Ember-specific stuff, Fluent looks pretty good (it's more general web and frontend stuff). I've never been there since I'm in Europe, but it's been on my bucket list for a while now. It's in mid-to-late June.Hey! For this exact problem, I've created a website that lists all upcoming tech conferences. 
You'll find the upcoming JS conferences in the US here for 2017: https://confs.tech/2017/javascript/U.S.A.
and here for 2018: https://confs.tech/2018/javascript/U.S.A."
2017-05-25 17:33:18;EmberJS Authentication Tutorial;
2017-05-20 00:35:14;Day 1 of learning Ember to contribute to HospitalRun questions.;"So you'll see `get` and `set`. They go way way back to the early days of Ember before ember-cli and transpiling. When it was a pure runtime js framework. In order to support older browsers that did not support ES5 computed getters/setters you had to use these functions.

I believe the plan is to phase these out in the future, obviously can't do it before Ember 3.0. I think there are still some tricky aspects to going to a pure ES6 object model though, with Ember's observables (which keep the DOM in sync with data). There are things like computed properties all over. `.get` will call the function to evaluate it, or with a variable, return the value of it. If you access directly you'd get the computed function, not the value.

eg

    {
        first_name: DS.string(),
        last_name: DS.string(),
        full_name: computed('first_name', 'last_name', function() {
            const fn = this.get('first_name'), ln = this.get('last_name');
            return `${fn} ${ln}`;
        })
    }

Compare: 

    record.first_name // == bob
    record.full_name // == function computedProperty() { } 

vs 

    record.get('first_name') // == bob
    record.get('full_name') // == bob smith

The `.get` makes it consistent.

You'll also see `get` and `set` which take an object as the first param. `person.get('name')` vs `get(person, 'name')` which is a guard against objects that may be destroyed when the code is running. Avoids `cannot call get on undefined` types of errors.

EDIT: Not just computed properties though. Related models. Promises. Other functions. Anything that takes work.I would suggest checking out the EmberConf talks on Youtube, tons of cool stuff and it keeps you motivated to keep learning :-) This is a great place to start learning Ember.js: http://yoember.com"
2017-05-31 20:22:54;Are you using Rollbar and EmberJS? This package can be your logger ninja.;"Exposing a service looks much better than the other rollbar addon for ember.

However, we used rollbar for 2 years until realizing there were better solutions. Rollbar doesn't seem to want to innovate.I rolled my own rollbar error logging into my ember app. Rollbar is a great service. The harder part outside of logging the errors is making the errors useful by adding to something like ember-cli-deploy a hook to upload source maps to s3 that rollbar can have access to. Otherwise, you get errors like ""anonymous function error at line 3 column 7859."" which just sucks to attempt to debug."
2017-05-31 01:54:02;Module Unification RFC Update;
2017-05-30 19:34:08;I am still learning;
2017-05-30 03:41:59;Ember Route Hooks — A Complete Look;
2017-06-09 04:20:57;Loading and Error Substates in Ember;
2017-06-08 12:09:30;Connect to token based API;"You're going to need a server.  No way around it if you want to keep your creds secure.Your API uses just one set of username/password credentials?

You could just store the credentials in your env config and authenticate before any other requests unless already authenticated?

I would advise against storing credentials in codebase but pass them through at runtime. You could write a simple proxy that passes your requests to the other api but with your username and password."
2017-06-05 22:06:03;How 201 Created Teaches Ember.js;
2017-06-05 20:07:13;Each-in helper;
2017-06-04 22:28:30;From Angular to Ember at Verizon Digital Media Services;Mostly agree with all the points, except testing.  Angular has a great test framework... But switching frameworks shouldn't be the reason to start writing tests.  I know, since I've sucked at writing tests on four frameworks now!
2017-06-16 17:44:17;Building a Progressive Web App with Ember;
2017-06-14 09:40:20;addon that enables type checking w/ TypeScript 2.x in EmberJS (experimental);"Hello,
We're looking for feedback on this project :)
The goal of the addon is to provide out-of-the-box type checking for ember, with minimal setup on the users part, and without changing any of your existing application code.
Please try it out and share your thoughts!Just want to share my appreciation for this kind of project. I've been toying with the idea of using Typescript on my production app, but at the moment it seemed to me that using Typescript with Ember was not an easy task

I don't have the time to experiment with this yet, but it's on my radar. 

Best of luck.Have you talked to the folks in the Typescript channel in the Ember Slack? There's a small but passionate community there that wants to bring Typescript into the Ember world. "
2017-06-14 02:12:46;Flexi 2.0.0 released - a layout framework with the power of Bootstrap but the convenience of Ember;
2017-06-14 00:53:33;ember and typescript example application;
2017-06-13 23:40:49;Some First Impressions of GlimmerJS;
2017-06-23 23:01:13;Anyone worked with UI sounds in ember?;"I thought this was pretty cool...
https://www.youtube.com/watch?v=dDPAUcxQ3lA"
2017-06-22 09:12:50;Algolia + Glimmer = ⚡️;
2017-06-30 16:47:24;Glimmer: Blazing Fast Rendering for Ember.js, Part 2;
2017-06-29 21:25:13;Passing parameters to jQuery .on() method;"Have you tried this ?

```
this.$().on('confirmed.bs.confirmation', () => {
    this.sendAction('onConfirm')
});
```

I suspect jquery to rebind the function and override the first param (account.id) with the event.Are there more arguments passed to `confirmDelete`?
What if you do `confirmDelete(event, id)`?"
2017-06-28 18:40:04;Okay, I clearly am in over my head ... How to include jQuery in a Glimmer.js app?;"Try adding:

    import 'jquery';

at the top of your index.ts and use it globally. Never used glimmer or the jquery npm plugin before... But try this:

import $ from ""jquery"";

See more at: https://www.npmjs.com/package/jqueryember install ember-jquery

Then use

import $ from ""jquery"";

in your packages.With the caveat that I bailed before completing the project, this at least got me access to `$` & `jQuery`:

*package.json*:
```
  ""dependencies"": {
    ""jquery"": ""^3.2.1""
  }
```

*component.ts*:
```
import {$, jQuery } from ""jquery"";
```

Got really hyped about Glimmer when it was announced, but if you're at all proficient with Ember that's still the much, much quicker way to get an app up and running. It will get there; it isn't there yet.In our Ember app we have jQuery dependency in Package.json as follows 

""dependencies"": {

    ""jquery"": ""^3.2.0""

  }

Done that, we directly use $(""selector"") in our apps without any import statement.

Have you tried using $ directly?
Last resort - load it via <script> in index.html from some CDN. With HTTP2 it shouldn't be that slow.

Check also Zepto and Cash for lighter alternatives. If you are using Glimmer it means you're not interested in supporting legacy browsers anyway :D"
2017-06-27 06:17:10;Pagination with Ember, Rails, and jsonapi-resources;
2017-06-26 11:15:09;⭐️🚀 spaceship-zsh-theme@2.7.0 is out with Ember.js 🐹 support!;This looks cool. Wonder how hard it would be to port to Fish. 
2017-07-06 16:17:18;Ember 2.14 released;"I can predict what the post will say without looking at it. Performance is faster, Glimmer is better, something mediocre about ember-data spun in a positive way.

Ember-cli probably has pretty good announcement. 

This is not because I'm in the know, it's because it's all that's happened for the past year.I'm slightly disappointed. Finally got around to installing this hoping it would fix the deprecations. Already having deprecations on a newly scaffolded app is pretty disappointing.

I know the universal statement is going to be that it doesn't matter, it's just a deprecation, etc. But I'm trying to capture video of the workflow, and the visual and logical clutter isn't ideal. I also get warnings with every build

    Warning: ignoring input sourcemap for vendor/ember/ember.debug.js

I doubt it's critical, but it's kind of messy.They REALLY need to fix the ember data double rerender issue that was introduced after 2.13.2. it makes apps that upgrade completely break in dev/staging and takes hours to track down. That or at least make an announcement that it will break those envs."
2017-07-05 07:43:02;Making the Jump: How Desktop-Era Frameworks Can Thrive on Mobile;
2017-07-02 16:07:03;What happened to 2.14 stable?;"It's coming soon, there have been some blockers which mixed with vacations, travels, work, made the release slip.
Quoting Miyamoto, ""A delayed game is eventually good, a bad game is bad forever."" 😁"
2017-07-14 18:39:30;YUIdocs Ember component example;"We're working on an easy way to do this in the [Ember CLI Addon Docs](https://github.com/ember-learn/ember-cli-addon-docs) addon. It's not quite ready, but I'd watch the repository and keep an eye out for our initial release.This is still early, but I'm working a component to make this much easier: https://www.npmjs.com/package/ember-component-showcase

Basically it extracts the HBS snippets before compilation and exposes them as a code block.  It also supports using yuidocjs component documentation to present beside those example snippets.

Like I said, still early but could be useful to you."
2017-07-14 11:45:38;[Resource] Yet Another TypeScript Book hosted on GitBook;"This is book I just ""published"" on the TypeScript programming language last week. It tries to be a good introduction and includes about 15 integrated videos supporting the various chapters.

I hope this is useful to you all given that TS can be part of the Ember tool chain.
"
2017-07-21 21:29:37;Has anyone else felt a decline in community size?;"I'm just getting into Ember. I'm a Rails dev and just started learning Ember this week. So add one in the plus column. :)I'd say most of the activity has been on the ember slack. Tooonnnns of channels.

My favorites right now are on module unification, type script, and ember paperWe are switching a major travel site over to it. Could it be that everyone is getting lots of work done with it? 😊Ember addons chart based on data from emberaddons.com: http://www.charted.co/c/3e560b6We went from a 100% Microsoft .NET shop to a 99% Ember shop.You could maybe ploting commits overtime. Git repos are easy to clone and you have full copies of the history. Try plotting commits over time. As well as unique users. Pivot tables are your friends."
2017-07-20 23:46:18;tern-project for 2.14;
2017-07-19 20:05:13;Ember FastBoot 1.0 Released;"Tried to get fastboot to work on our previous somewhat complex apps, wouldn't work. Recently used it to push to production a decently complex app, and it more or less works as advertised. Really great work by the team!FastBoot continues to be a fantastic achievement for the Ember ecosystem. Great job!

The breaking changes caused some inconveniences for me, but being able to just run `ember s` to get a FastBoot app with livereloading made it worth it!I'm genuinely surprised they've gone with the `ember-cli-` name instead of switching the more contemporary `ember-`. I had thought (not sure why) that using `ember-cli-` is an anachronism and that the `ember-` naming convention was the more common. The distinction seems academic right up until you type `ember install ember-cli-sass && ember install ember-cli-bootstrap` and  your whole world catches fire and you wonder why Ember sucks so much. With no takesy-backsies on an `ember install` you have to manually remove the npm package for the broken addon, delete node_modules and do an `npm install`, then install the proper non-trolling add-on: `ember install ember-bootstrap`. The disparity of names seems like a footgun to me. I know this because of the bleeding feet.

Other than that... Fastboot is amazing. It's one of those thing in Ember that I don't think people realise just how great it is. Compare the dev experience of any other framework in this respect - worlds apart."
2017-07-19 03:36:19;Cancer Awareness - Ember Cares;"Keep on improving Ember!

We use Ember as our front end to help biotherapeutic companies design those immunotherapies to fight cancer. [Our single page web app](https://serotiny.bio/pinecone/) helps researchers much more easily design, manage and understand the genetic systems they're using - and we owe a great deal of that capability and ease of use to the fantastic Ember community.


This is the design page (built in Ember) for the [CAR19](https://serotiny.bio/pinecone/part/11693) (requires free login) that was just [approved by the FDA](https://www.nytimes.com/2017/07/12/health/fda-novartis-leukemia-gene-medicine.html) last week to fight leukemia.  If you don't want to log in, this is a (non-Ember) [overview of CAR19](https://serotiny.bio/notes/proteins/car/) that can be built with the tool.

With every Ember update that makes it faster, easier, and more straightforward, that savings is passed on to clients to more efficiently build those therapeutics."
2017-07-18 16:36:18;RFC: Named Blocks (formerly named yields);This seems like an elegant proposal. You can kind of do this now, but it's definitely weird to set up in the component.
2017-07-26 00:23:17;Manually re-binding ember action events;"Can you provide a Twiddle? It’s hard to talk details without code to look at, so that will greatly increase the chances someone can help you!

In case you haven’t come across it before, Twiddle lets you write little demo Ember apps in the browser. You can find it at https://ember-twiddle.comWhy not use a ember-modal-dialog which is designed to work well and smoothly with Ember?For our 3rd party modal plugin, it optionally took an element as opposed to string content. This is ideal as you can just it an element that was ember rendered. Keeps all bindings and works great. "
2017-07-25 18:31:27;Computed filterBy attribute;You should just use `computed.filter` to grab the dynamic filter value inside the callback. The syntax you tried isn’t supported, unfortunately. 
2017-07-24 16:24:22;Ember.js Times Issue #5;Nice, thanks for doing this, been looking for some good ember resources
2017-07-23 05:19:32;Best way / resource to learn Ember?;"Just read through the official guides, they're pretty thorough. There's also ember map (just google it). They've got some free content but also some premium videos that are excellent. There's also workshops out there, don't have any info handy. Https://www.yoember.com gives some very beginner friendly tutorials using Ember.js and I would highly recommend it. Also it's not terribly dated, just be sure to read the official documentation as well https://www.emberscreencasts.com/

http://yoember.com/

were useful for me
There is also [ember 101](https://leanpub.com/ember-cli-101) book which is fairly updated and good book to read to start an app and avoid mistakes.

I can also recommend you [ember igniter](https://emberigniter.com/articles/) blog & [ember screencasts](https://www.emberscreencasts.com/)


This is what helped me out:

* Start with the official [Ember guides](https://guides.emberjs.com/v2.14.0/) - 

* Work through http://yoember.com/

* Pick an API - https://github.com/toddmotto/public-apis - start building something.

* Sign up with [EmberJS Slack](https://embercommunity.slack.com/) and ask questions

Community is great, very helpful :)

P.S. Sign up with [Ember Weekly](http://emberweekly.com/) to stay up to date with whats going on with EmberI highly recommend the Rock & Roll with Ember.js book & associated materials: https://balinterdi.com/rock-and-roll-with-emberjs/

Very comprehensive and easy to follow and learn.You can try https://ember-twiddle.com for playing and useful for getting help quickly.  Visit ember community slack for getting help. for discussion https://discuss.emberjs.comYou may read Ember Cook book. U can try codeschool.com. they are running a emberjs beginner courseJust a general point (which probably applies to a lot of JS frameworks) when you're reading blog posts or stackoverflow answers be sure to check the date. Since Ember went to 2.x there have been some radical changes and quite a bit of what is written a few years back just doesn't apply any longer.

Nthing Yoember.com and the official doco . Ludu course is good if you want to build a sample project :) https://www.ludu.co/course/emberAnyone have an opinion about https://www.emberschool.com/ ? It seems to be a bit expensive (USD $495) but a complete online course. It would be really helpful to hear experiences for people that bought the course.The community for Ember is very small, most guides and tutorials are outdated, I struggled with it, so I went back to vue 2, good luck"
2017-07-22 14:35:30;Ember Cli Diff - A simple tool to see differences between new ember apps;Is this significantly different from https://github.com/ember-cli/ember-new-output?
2017-08-04 13:49:21;Why ember redux?;I'll have to give redux a try, thanks for sharing. Would also make switching to React easier if an opportunity required it.
2017-08-03 07:53:14;When do you make something a component?;"We tend to make a LOT of components in our app. Any time there seems to be a clear separation of concerns, it’s probably time to make a component. 

Components are also the primary method of code reuse and composition. So if you have UI elements that are repeated, building a generic component that can be reused is a good idea. 

Additionally, sometimes it makes sense to do data processing in components due to their powerful composition features. We do this in our app, too — it tends to be a better pattern than Mixins. These components can have no template, save yielding out some data, which makes them easy to use in different UI contexts.

One drawback to having lots of components is that the sheer number can get overwhelming. Thankfully, changes are coming soon to allow components to be scoped to another component, so there are not dozens (or hundreds) of options at the global namespace. Code reuse or encapsulation. Mixin and partials if I just want to organize code.When you are programming a piece of html block always ask yourself these questions "" can this block used in other places?, does this block has a special objective and is my block getting bigger?"" If it is yes, then generate a component.React's step 1 [guide](https://facebook.github.io/react/docs/thinking-in-react.html#step-1-break-the-ui-into-a-component-hierarchy) should also be applicable in Ember components.I'm also on the side of ""make lots of components"". Keep in mind you can namespace them so you'er not cluttering your app directory. "
2017-08-02 00:29:04;Need some advice on preparing for an upcoming Ember developer interview?;"Hey. So one of the great things about Ember is that it has a lot more stability guarantees than other frameworks like React or Vue.

While this doesn't mean that all of the content out there is cutting edge best practice, it does mean that most resources for Ember 2.0 and forward should be applicable for all 2.* releases and even into Ember 3.0.

I would start first with the guides which have a great tutorial showing off a small Ember application.
There are also some great tutorial websites like https://Emberscreencasts.com,  https://embergrep.com, and  https://embermap.com that have Ember 2+ tutorials from seasoned Ember developers (full disclosure I am the creator of EmberGrep and honestly I'd recommend Emberscreencasts.com over my own content since it is now free).

If you have other questions I would also check the Ember Community Slack: https://ember-community-slackin.herokuapp.com/
Or the Ember Discourse Forum: discuss.emberjs.comTry to really understand everything in this image: [Ember Concepts](http://imgur.com/Bn42jdx.jpg) 
 and work through the Ember Guides Tutorial. If you have specific questions just ask. Will try to answer them here or via PM@OP there's a great article that was just posted about how to get started learning Ember and it's a great introduction with steps:

https://medium.com/@jenweber/how-to-learn-emberjs-in-a-hurry-c6fdeae256a0Do you know which version of Ember they're running?"
2017-07-31 20:31:36;Quick Filter and FilterBy Video;I thought this would be a fun video, since someone asked a question about this a while ago. 
2017-07-30 09:59:32;How do I develop / run ember apps on Windows?;"I'm using Bash for Windows (aka the Linux subsystem) for it. Since the Creators Update, everything works fine.Serious: It will probably perform better in a docker container, than on windows native. And you'll run into less oddities. OP can you describe some of the issues you're having so that I can forward them on to the Ember CLI team.

A lot of Ember and Frontend devs use Mac or Linux so there has historically been more support and active development on those platforms for tools like Ember CLI and Webpack, but we want to do better in supporting all major platforms.I use Babun (cygwin, basically) for ember dev stuff, and it runs really smoothly. I've had a couple of Yarn issues, but nothing insurmountable. I am using it in windows machine. I don't find any issues now. earlier I `tmp` file size and long path issue was there. but nowadays lot improved in ember-cli. its working flawlessly atleast for me..I develop Ember in windows as does most my co-workers. I find this question odd because I haven't had anything fail to work due to windows configurations.

Everything has been extremely straightforward and I've installed Ember on multiple windows machines. Like it works exactly as it would in Linux I'd imagine.I work with a few developers that do their Ember work in Windows. I prefer Linux myself...so that's what I use. "
2017-08-11 14:54:34;Announcing ember-cli-typescript 1.0.0;"I think it's great that ember will have more structure to its code now. This only helps with its overall organization and code quality. I think the investment in time learning typescript will pay off huge when you're midway through and application and you realize not only will you not have scaffolding issues/hang ups (thank you emberjs!) but you will also not have to deal with typing problems. 

Edit: also excited that this is (probably) a huge step towards getting glimmer/ember to be cohesive I like that it's a drop in kind of module that lets you progressively update your app.Can some smart people leave their views on this?"
2017-08-08 09:38:31;Loading css assets in the correct order.;Are you importing the files yourself in `ember-cli-build.js` or is an addon pulling the files in?
2017-08-17 23:37:31;I know I'm missing something obvious, but ... using a hasmany relationship as the model for a route?;"I'm dumb. I had this.modelFor('kiosk'), but was trying to access the ""posters"" property directly instead of via .get().

Here's what's working perfectly: 

    export default Ember.Route.extend({
        model(){
            let kiosk = this.modelFor('kiosk');
            return { posters : kiosk.get('posters') };
        }
    });"
2017-08-16 23:36:41;Embercasts 2.0 Preview - Free Video - Learn to Build a Trello Clone in 20 mins;Looking forward to the TDD course, testing is my weakest skill.Do you have any rough date for releasing other episodes?
2017-08-25 06:58:11;EmberNYC Aug 2017;
2017-08-23 16:16:03;Liquid-fire: initial height to animate from?;"You can tell it not to animate the height, but it'd still set the container height to match the new content.

    {{#liquid-if navOpen class=""navItems"" enableGrowth=false}}"
2017-08-22 01:11:27;Load asynchronous global const;"You would want to do this as an application initializer. Service is lazy, that means object will be created when you are requesting using `get`. for the first time there may be chance for data may not be available. To resolve you can move this to different method say `loadConfig(){ return Ember.$.getJSON('/config').then((config) => {
      this.setProperties(config);
    });}` . you can call this in application beforeModel hook. this will ensure that it will be loaded only once. and beforeModel hook will wait for the Promises to resolve. "
2017-08-22 01:01:13;Does Ember do any server side rendering?;"https://ember-fastboot.com/If you Google your title question, literally the first result is the right answer.Yes, Ember does have a first party server-side rendering option using Fastboot. While there are still some things to be aware of, the goal is that most apps should be able to work with Fastboot without too much effort.

From experience I was able to add Fastboot to our recent project in about 30mins. We had two places where we had to wrap some client side only code in an if block, but everything else worked out of the box.

Fastboot is nice since it embraces a single shared solution rather than having a ton of different solutions that may or may not work in your app (as is the case in the React and Vue ecosystems)."
2017-08-19 14:39:05;Question about adapters: why no oracle, MySQL, Postgres adapters?;"Firebase is the special case here, being a database that exposes itself directly to client applications. In almost every other case databases are connected to by servers and ember will communicate with those servers. As another commenter said ember-data is focused on adapters for _apis_, instead of databases, for that reason.Adapters in Emberjs are actually for consuming APIs. By default it Provides json-Api  adapter. But there are many other community driven adapters are there. Most of them are some version of REST Api.

So, you can consider haveing an API in your language of choice (Ruby, Python, Elixir, .Net, Java, Node etc.) and can consume those calls with proper adapeter.  To add to what the others here said, MySQL, Postgres and Oracle can't be accessed directly via a web browser, you need some server component doing the translation, like Ruby on Rails or node.js. You have to look for adapters for those instead."
2017-09-01 20:08:31;Guide to converting modules from using bower to using NPM?;
2017-09-01 19:13:04;Ember.js, Ember-Data, and Ember-CLI 2.15 and 2.16-beta Released;"> Work has begun on internal changes to support tree-shaking. This is still in its early stages but is a focus of current development.

This is excitingDamn just updated our app and addons to 2.14 yesterday.

Love the ember-cli npm import work, makes bower much easier to sunset.Oh, cool, it includes CLI. I thought that would be a few days off.

Very keen for 2.16. Some re-learning for a duffer like me, but a little pain now for tremendous gain later. Ember needs to go on a diet. This should help."
2017-08-30 17:11:29;Does ember-data do any caching internally ?;"It should use cached data, as long as post 1 was in the original response. It depends on which ED methods you use though; some always fetch new data, some use the cache. The second time you go to that route, ember-data will see that model in its store and resolve immediately. Then in the background it will query the backend to make sure it has the latest record. Your templates will update automatically if the new version of the model is different. 

All of this is configurable of course... you can force it to reload or you can set it up so it will only query after a certain amount of time has passed (although that's a little more advanced). "
2017-08-28 06:55:01;Getting started with ember-cli-rails tutorial;
2017-09-07 20:36:33;Ember. Your best bet.;I *do* like having my decisions reinforced...
2017-09-07 08:37:52;Why both Bower and NPM?;"Current versions of ember-cli aren't using bower any more.

Initially, it was bower for everything that goes into the web app and npm for the build system. Since both use JavaScript, it got a bit confusing, for example you might want the template compiler in both the build system and the web app itself.They recently removed the dependency on bower a couple months ago. You may need to update your ember-cli versionThe way npm is now was still pretty new back when ember started. Modules/packages are being migrated to now, though. :)

"
2017-09-07 08:25:44;Firebase holy shit;"That's Firebase, not Ember. It will behave exactly the same if you use plain JS :)That's one of the good aspects of Firebase.

There are many bad aspects though.Awesome isn’t it! There’s a #e-emberfire channel in the ember community Slack with other enthusiastic users :)"
2017-09-06 19:10:12;Ember stylesheets;"You could put your styles in separate css files in the styles folder and then @import them into app.cssGlobal app stylesheets are in the app/styles directory and the default application stylesheet is app.css.  

If you want to use sass look into ember-cli-sass

Once you get a bit more experienced and building more complicated apps look into ember-component-css to isolate your component styles to specify styles for individual components. (non global styles, less merge conflicts ftw)
 


~~also if want to keep~~I asked a question pretty similar to this a few months ago on StackOverflow and pretty much the only answer I got was to use a CSS pre-processor like SASS or LESS and just be very organized with your the CSS from there.

So I don't want to say it definitely, but I don't think there is an addon or tool out there that will directly fix your problem. You'll just have to design around it. :(
A common paradigm in modern day web design is to ultimately serve a single stylesheet for your entire site as opposed to serving individual, page-specific stylesheets. The primary benefit of this approach is that the CSS file can be cached by the client browser and it doesn't have to request/download/parse/apply anything new when the user navigates through your site.

**This doesn't mean that you should be putting all of your styles into the same .css file!!** In fact, that would make it really hard to understand your code. In general, I like the approach of creating a separate CSS file for each component/route/concept in your ember app. As others have stated, you just have to wire all your separate CSS files together in `app.css`. And, of course, keep in mind that all your CSS rules will be applied to every page; make sure to use classes specifically and appropriately to avoid styles bleeding into unintended pages/components."
2017-09-06 16:07:55;Fullstack tutorial with GraphQL and Ember;"does this play in to ember-data at all? or is this a use instead of ember-data sort of thing?I'm not familiar with GraphQL, 

does it basically do the same thing as something like falcor?Tutorial creator, Devan, here! I am swinging in here to say that you might run into a hiccup or two with the tutorial right now. As of Sunday, ember-apollo-client updated to change how it handles the UnsubscribeMixin. It also added the ability to access Observables directly which means I'm working on an update that will instruct readers how best to handle pagination and subscriptions! 🎉

Hope everyone enjoys the tutorial!"
2017-09-15 14:12:51;You can only change what you can measure. Benchmarking webpage load performance.;
2017-09-14 22:06:41;Upgrading a large app with a lot of dependencies from ember 2.5 to 2.8;"At what point does starting the server fail?

I think going version by version is the way to go. The EmberCli repo has a ""app output"" repo (I'm mobile, but just search that). 

Look at the 2.5 sample output and compare it do the 2.6. Then you need to start replacing all the deprecated packages (Ember-ic-Ajax, etc) and updating application code as you go. 

The just do that until the changes get less drastic. 

To be honest, once you get to 2.7 (or wherever Ember got pulled out of bower), I found upgrades to be relatively smooth sailing. 

I just did a 2.6 -> 2.15 (I actually did it in one step, but it's not a huge app). You may also want to look into a new addon, ember-cli-upgrade, which makes upgrading ember-cli versions a bit easier."
2017-09-12 14:22:12;Secrets of the Ember-CLI server - Express middleware with Ember-CLI;
2017-09-21 14:22:20;Ember tests running in Docker Container;this works for me: https://github.com/NullVoxPopuli/dockerized-ember-cli/blob/master/chrome/Dockerfile
2017-09-20 23:43:32;model is empty on controller after adapter sets multiple models;Could you share some code? I'm having a hard time understanding your setup.
2017-09-20 16:50:11;Using URL templates from ember-data-url-templates in custom adapter methods?;
2017-09-19 15:10:57;Any engaging tutorials for learning ember.js that you would highly recommend?;"I always thought the guides were good, but check out the tutorial section here.

https://github.com/nmec/awesome-emberhttp://yoember.com is pretty thorough at building an app from start to finish."
2017-09-19 00:04:19;Custom adapter/serializer to fetch the entire set when an individual record is needed?;There’s an adapter hook for finding a single record that you can override to fetch them all and filter for just the ID you’re looking for. 
2017-09-28 19:08:12;Table appends data instead of refreshing;findAll doesn't just return what's on the server, it returns a special array of all the records it finds in the store, and in the background updates from the server. You'll need to either order the records yourself, or do a store.query instead. I would elaborate, but I'm typing on my phone. 
2017-09-27 20:21:18;Calling methods on a model?;"Nevermind, I figured it out.

For anyone running into the same question, I just called 

    this.modelFor('modelName').startAutoReloading();

in my route's afterModel().I see you've already figured out a solution. If you run into trouble again, try looking up the Ember API docs: http://emberjs.com/api"
2017-09-26 20:14:42;RFC #252: Dropping support for IE9/10 and PhantomJS;As long as IE11 is supported for a long time I'm cool with this. 
2017-09-26 14:22:26;if else in emberJS;"You can create a helper to achieve that, or use the existing standard solution which is the `ember-truth-helpers` addon (https://github.com/jmurphyau/ember-truth-helpers) which will allow you do to that in the templates:

`{{#if (eq user.name 'Jack'}}`

A helper is also simple:


>import Ember from 'ember';
>
>const {
>  Helper,
> isEmpty
>} = Ember;
>
>// Helper to check that a certain value is not empty
>
> export function eq(params) {
> return params[0] === params[1];
>}
>
>export default Helper.helper(eq);
This is a great question. When I first started using ember, I was really tempted to do exactly what you're talking about and write things like `{{#if user.name == ""jack""}}` all over my handlebars templates. In fact, I even added the `ember-truth-helpers` addon to my ember project, just like the top comment recommends.

After spending a year or two coding with ember, though, I've been moving away from this approach. Nowadays, I heavily favor adding a computed property to your component or controller instead of injecting logic directly into your template. When I first started using ember, I was too lazy to add a new computed property every time I wanted to do an equality check. But now, I see the immense value in using them. It's so expressive, and easy to figure out what's going on.

Furthermore, from experience I'd highly advise naming your computed properties something that focuses on their purpose *within the template*. Here's an example of what I mean.

component.js:

    // expressively specify when to show the special section
    isShowingSpecialSection: Ember.computed.equal('user.name', 'Jack'),


template.hbs:

    <!-- This file has no idea what goes into the decision about whether to show the section,
         and all it cares about is whether it should display the section or not -->
    {{#if isShowingSpecialSection}}
        <!-- Here is the special section that you're currently only showing to Jack but that you may
             want to show to others someday -->
    {{/if}}


Notice (1) the computed property starts with `is`, so you know it's a `boolean`, and (2) it's not called `isJack` because it focuses on whether to show the special section, not on whether Jack is the user's name. Later on down the road, you might change the logic that determines whether to show the special section. In this case, since you're only changing *logic* and not *view*, you only have to make a change to the component, and you don't have to change the name of the computed property, which would mean a change to the template.

Finally, a major reason why some people choose ember is because of the purity of the template engine; unlike angular (which relies on the DOM to specify template and view information), it uses pure, logic-less handlebars templates. I like to stay true to the ""logic-less"" approach championed by handlebars and ember as much as possible, and this even means not having equality checks in my templates.

I've always used computed properties that would carry out the check and return either true or false, which Ember's standard 'if' block can handle.There should be an `{{#if (eq user.name ""Jack)}}` available. If not, do you mind posting your version of Ember?"
2017-09-25 13:33:44;Testing ember cli apps with page objects;
2017-10-03 21:23:56;Ember.js: The Road to Ember 3.0;
2017-10-02 19:24:41;Is Ember dying?;"I love Ember. It's so boring and conservative that I can just focus on and build my stupid product. Choosing and sticking with Ember is like choosing a spouse, settling down, and raising a family. Your old friends React and Vue are gonna call you up and send you pictures of the club they're partying at but you'll politely decline to join because you're enjoying a calm relaxing night in front of a warm fireplace, watching the embers dance before your eyes.For me personally, at some point I got tired of having to justify that Ember was ""fast enough"" and that the productivity benefits were worth the tradeoff, particularly on mobile.

So (along with other people on the core team) I have been laser focused on building something that is just flatout the fastest thing available on the web today. I am tired of playing catch up, so instead we are going to jump ahead.

I totally understand why people get the perception that Ember is stagnant. (I helped lead the Status Board design and implementation because I realize we need to get better about communicating the state of the initiatives we talk about.)

But once people see the shit we've been up to, Ember/Glimmer will be impossible to ignore.No. LinkedIn, Netflix, Twitch, Sony and Apple have all made big bets on Ember. Ember Conf was huge. Finding actively maintained addons that solve any problem you come across is simple. ""Ember is died?"" is officially a meme at this point. Core team member here so I have an obvious bias :-p I use Ember almost daily for client work and OSS contribution and I look forward to using it for a long time.

I wanted to chime in earlier, but I was a little busy writing up a small blog post, perhaps it is relevant:

* https://emberjs.com/blog/2017/10/03/the-road-to-ember-3-0.html

Thanks! :-)Why does the fact that the first time ever a JavaScript framework actually achieves a steady state of existence without ever changing and breaking API make one feel it is dying? 

Ember.js is in a good place. The community is welcoming, the code base is solid and stable, and it is still up to speed with recent performance and code styles/dialects. 

There are parts of it like Ember Data that could easily be replaced with outer modules (and enough projects do so), but there is also Glimmer and Concurrency and even a 3.0 release on the horizon. 

So instead you could feel as happy as I d, that the framework that works for you and many others (Apple, Sony, LinkedIn, Bustle, NASA, Netflix, BMW, Audi, ...) continues to exist without having to refactor your project or your development pipeline each month. 

Full disclosure: I work at a company which works mostly with ember for web client projects. I use Vue.js for a few private projects and I keep up with React as well. I’ll take the Ember route for our large scale projects without hesitation, but I understand the need for only parts of its feature set and Glimmer is just too new right now. I would say that Ember is far from dying. It is not growing at the pace of newcomers like Vue, but I think it is getting back to a stage of continued growth.
The Slack team is very active, but this also means that outward mentions can be low since Slack doesn't open up SEO or mentions like SO or other channels. The tag on Medium has been steadily growing lately, and if you keep an eye out to things like Youtube or the Emberweekly newsletter, there is definitely new content and new faces popping up.

I would say from a marketing stance, there have been a few start stops that haven't panned out and that has really taken some wind out of the sails.

I think that because of the rule of 3s in comparison it becomes a longer list comparing React, Vue, Angular, and Ember. From what I can say in my area and potential clients that I talk to, I see more Ember and growth in Ember than Angular 4.I've efficiently built very complex apps using the framework and it doesn't take a genius to make it work for even complicated integrations. I think ember can easily out perform others when just a couple more firms ship products using it. I know I will.That's so weird you say that because I just spent a good portion of yesterday afternoon going over RFCs and github pr's looking at all the new stuff coming down the pipeline in the ember ecosystem.  I work on two huge ember projects for my job and I love that I only have to upgrade the framework when an LTS release comes out.  The stability of ember is one of the reason why the company I work for loves it so much. 

You've seen this right?  https://emberjs.com/statusboard

Also be sure and keep an eye on the RFCs if you want to see what's coming down the pipeline.  I use it at work. We're starting 3 new projects before the end of the year and all will use Ember, just like our last 5 did. I use it on my contract work. I use it on my personal projects. I have not ran into problems with it. I met a ton of new faces at the last EmberConf. I think the wider community may ignore it but that doesn't mean it's dead.An update that I'll post now that a few things have gone live since my last comment.

The learn team has been working hard on https://emberjs.com/statusboard to help keep track of new updates to Ember and things that are on the horizon.
Also, if you look at the progress of the Ember RFCs, there is movement on some very hard things.

Today, the core team announced the roadmap to Ember 3.0.
While it is fairly tame, this blog post more outlines Ember 3.0 from a support standpoint.
It doesn't go into some of the private API improvements and performance improvements that are unlocked by dropping these deprecations.
Here's the post as a heads up: https://emberjs.com/blog/2017/10/03/the-road-to-ember-3-0.htmlHonestly, and sadly, yes it is. It's not on life support yet, but that is clearly where things are heading.

Examples:

* **ember-data** - It's become a complete disaster. The last 4 releases have been completely buggy with backtrace and unload issues. People are complaining they're stuck on 2.12 and no one is willing to help.
* **ember.js** - Major objectives are just completely MIA or DOA. Pods and the unified module layout, Routable Components, Glimmer Components (angle brackets), DDAU. Virtually no new features in the last 2 years. 
* **glimmer** - A lot of the core folks who worked on Ember 2-3 years ago now just focusing on Glimmer. They're people are writing blog posts about how Glimmer is the ""thin Ember"". 

Things are not great. Too little progress on efforts that **they** originally hyped up. Virtually no communication about the state of objectives and what's happening to accomplish them. I like Ember a lot and think it has tremendous potential, but a lot needs to change. I think the lack of marketing is a big factor. Ember has always been the underdog, because it doesn't have big names behind it like Google or Facebook. It never reached *meme* status. Why would a non-tech-savvy project leader make a decision and let their employees work with a web-framework/lib/toolset that isn't one of the big ones out there?

Another factor could also be the steep learning curve of Ember. I don't know if this is still the case, but that's how it's been when I started using it.

I, myself am disappointed in Ember since more than a year now. The reason for that is that I was never able to use ember-cli in my main project due to its build process. Yes, there are quite a few people out there who don't use ember-cli for different reasons, and I think that forcing everybody to use it is a bad decision. When I started the project, I was using a custom grunt/requirejs setup, then two years later transitioned to grunt/webpack. I'm not quite sure whether this was a good or bad decision, because on the one hand, you've got the insanely flexible webpack with all its plugins and loaders, but on the other hand you've locked yourself out of ever migrating to ember-cli. Not using ember-cli also means that you're not able to use any ember addons that easily without writing some complex module imports and workarounds and sometimes even having to fork addons. I'm currently still stuck at Glimmer1, because the Glimmer2 update had introduced many changes that broke my project and its tests, which are using custom test helpers. That has lead to some frustration on my side and I haven't followed the development of Ember since then.

I don't know how the upgrade process of the other frameworks is like, but I personally feel that although Ember has the ""stability without stagnation"" slogan, a six week cycle can sometimes be too fast and people can very easily get lost between all these changes. So this might also be a factor why people could be switching.

*edit*  
Also, many features which had been announced/planned months/years ago are still not implemented, which makes Ember feel even more dead. People who feel like this are looking for alternatives.That seems to be the lifecycle of js projects. I think there are plenty of existing projects in ember and it's not going anywhere, but I doubt it all if a sudden sees an influx of new users. That's just the nature of js projects it seems. Things are only worth using for new projects if they're shiny and new.While GraphQL is fast replacing REST APIs in other communities, Ember core team still vets on Ember Data as the preferred data loading solution. Because of the core team's push for REST API, the ember community as a whole is pretty much ignorant about GraphQL and the power it brings with it. This makes me feel sad. 

Note: I don't have any complain about Ember Data as a REST client. It's doing a great job. Although I'm migrating to GraphQL for my future Ember projects using [ember-apollo-client](https://github.com/bgentry/ember-apollo-client).


Today I completed reading a fullstack tutorial about building a `react` application. Initially it was easy, but when `react-router` got into play, the code started to become messy. In the Ember land these stuffs are quite easy to code and maintain. Convention over configuration mantra of Ember really helps to remove boilerplate code from the application. Coding in Ember makes me happy. And happiness trumps all.I work at a really small shop (five developers). We went from a 100% Microsoft shop to a 98% Ember / Node shop. All of our internal web apps are written in Ember or are being rewritten in Ember. We've never used ember-data so I can't comment on it but I love working with Ember as do the people I work with. We have plenty of projects coming down the pipe that are being written in Ember.


I don't see Ember dying anytime soon. Every few months there is a ""the sky is falling"" post in just about every framework. If you enjoy working with Ember then promote Ember.Sadly I’m starting to feel the same way. The fact that Ember insists on doing things its own way instead of adopting libraries from the wider web community is really starting to hurt it imo.

I’ve recently started doing client work in React (using the excellent Nextjs framework) and there are many things I wish Ember would adopt:

- Webpack integration. Let’s face it, nobody uses Broccoli outside of Ember.
- Hot module replacement. Working on my large Ember apps has become frustrating. I have to constantly endure 20+ s rebuild times whenever I change a line in my component file, as opposed to my React project, where it literally takes a second to update just that component (plus, it keeps all the state intact)!
- Redux for state management. Because Ember Data is a bit of a mess right now. I know there’s ember-redux, but it still feels icky to use since it’s not the “official way”.
- A better folder structure. Basically all my Ember apps right now are a mixture of pods and “classic” folders, with some annoying quirks. The new module unification RFC will hopefully make this better, but I sometimes wish it were as simple as React, where you just JS-import your components from a path and give it any name you want. 
- Reliable CSS-in-JS solutions. This is usually a controversial one, but in my experience, styling components with libraries like styled-jsx is actually pretty great. Ember has ember-component-css and ember-css-modules, but they’re simply not as good. It also doesn’t help that the core team seem reluctant to embrace componentized CSS, and think that global Sass stylesheets are still the way to go. 

Just to be clear, I’m incredibly thankful for all the productivity Ember has given me over the years and I still consider it one of the top web frameworks out there. I also think that Ember’s pitch of being “an SDK for the web” is awesome, however, I don’t see it becoming that if it continues to derail from the rest of the web community’s adopted standards.I switched from ember to react because ember attempted to make all of the decisions for me and i felt like i was fighting ember when i wanted to customize anything. With react, because it's just the view library, i feel like i'm WAY more control of my projects. It's less magic. I remember upgrading the ember version and figuring out how to accomplish what i wanted to do in ember-data to be such painful processes. With react, it's just the view library you update via npm/yarn. There's also tons more third party packages to take advantage of. I don't think ember has anything to convince me to start a project with it over react these days now that i'm not scared of creating my own build process with webpack. https://dockyard.com/blog/2017/10/04/why-dockyard-uses-ember

I will leave it here as it’s interesting read and related to the topic.What does that mean empirically though? Its market share isn't as high as ""competing"" frameworks, sure. At the end of the day, it's a mix of addon ecosystem, ""right tool for the problem"", and coincidence. The addon ecosystem in Ember just makes sense to me - pull down someone's work, overwrite parts of it if necessary (even if just to add one line of code to a specific method). React works better for certain problems on certain teams. But Ember is a strong bet in the long run. Watch as your successors on teams inherit and improve your Ember projects instead of rebuilding them. Love Ember but I will pick Vuejs over it every time.>I'm sad

[Here's a picture/gif of a cat,](http://random.cat/i/zsr8l.jpg) hopefully it'll cheer you up :).
___
 I am a bot. use !unsubscribetosadcat for me to ignore you."
2017-09-30 18:38:46;Test-Driven Ember - a book about TDD in Ember available for free;"Halfway through the book and I really like it. 
Only down note is the use of testSelector from ember-test-selectors which is deprecated, but it doesn't remove any value from the book though, really great content."
2017-10-13 01:16:39;Loading multiple models in a route but making one not blocking.;"If you're using something like Ember Data you can just use the route to kick off the longer request (but not block on it), and then access it from the global store in your controller.

    // route.js
    model(params) {
      // kick off short query
      let post = this.get('store').findRecord('post', params.post_id);
      
      // kick off long query
      this.get('store').query('comment', {
        post_id
      });

      // return short query so UI is blocked
      return post;
    }

    // controller.js
    Here you can access your second query either via

    post.get('comments')

    or

    this.get('store').peekAll('comment').filterBy('postId', post.get('id'))Moving non-blocking data calls to a service is a great idea, though I don't think you need this complicated of an interface with the service itself. I would just have the controller use computed properties to alias the data from the service; then when the API call resolves, the page will re-render to display the new data without you having to manually set anything.Couldn't you just use the afterModel hook in the route?[render-promise-before-it-resolves](https://emberigniter.com/render-promise-before-it-resolves/)"
2017-10-12 00:58:02;Listen for new added properties on a computed function;"I don't remember if it works in your version of Ember, but 

    .property('config.[]') "
2017-10-11 17:10:04;Ember.js: Ember 2.16 and 2.17 Beta Released;"That modules API, looks really hard to use.This is awesome! can't wait to upgrade!

Looks like we're one step closer to having es6-style syntax officially supported. :-)"
2017-10-10 20:56:19;Glimmer Progress Report;The 16bit opcode optimizations are really fascinating from a purely CS perspective, but the web-worker optimization really get my heart racing. The incremental rendering is also amazing, i bet thats going to be amazingly faster.I want to know when I can 1) use Glimmer without typescript 2) share components between an Ember app and a glimmer app
2017-10-10 11:38:11;One Year with Ember;"I need to show this to one of the project managers at work. We are doing a rewrite of a meteor app, and he wants to use React. I want to use Ember. Maybe this will help convince him.I've been an Ember developer since before it was called Ember (even worked with Sproutcore 1.x, but that's totally unrelated to modern Ember anyways).

I can only concur with the conclusions of that article. Whenever I look into React and Angular, I don't see a solution to the problems while developing web applications, I only see tools that can help me coming up with my own solution. I don't have time for that, my customers demand quick turnaround, and if I tell them that I have to write a web framework first, they'd call me crazy. With Ember, I can just create a few files to describe the business logic and the usual HTML/CSS, and I've got a product I can show to people.

Now, the problem with Ember is that it's very hard to learn, because so much happens under the hood. It's not the framework for novice programmers who just know a little bit of JavaScript from a web design course they attended a few years ago. I've seen people fail to understand even the basics of it after weeks of trying.I agree with the article, I still think it’s the best bet. However the use of Ember Objects with get and set keep making things difficult. You can’t use the JS you know. You have to learn the EO API instead. "
2017-10-19 15:15:31;Curated List of Ember Learning Resources;Cheers for this.The website looks very good. There seem to be some performance issues which you can test using Google [Lighthouse](https://developers.google.com/web/tools/lighthouse/).
2017-10-18 14:05:14;When to use computed properties on models;
2017-10-18 13:08:55;Glimmer Redux;yay! \o/
2017-10-18 03:59:24;What’s that little virtual browser when doing Ember test?;Not a browser. It's just a container where Ember renders your app.
2017-10-16 10:51:42;How Ember.js Enables Us to Focus on Shipping Features;Good article, have you posted this in /r/JavaScript?I like the nice article, but the social stuff covers most of the reading space on the left side of the screen. https://imgur.com/NGZU2SE
2017-10-27 03:14:18;What is the right structure of fastboot backend implementation;"Have you looked into the [shoebox](https://github.com/ember-fastboot/ember-cli-fastboot#the-shoebox)? What [fastboot](http://ember-fastboot.com/quickstart) codes are you referring to?Did you try asking your senior developer what they’d prefer?

Short of that, you might want to decouple the API server and Fastboot server so you can scale them independently. In that instance Fastboot would be running in a separate server than the API. I really don’t understand what

>	Fastboot must be inside ember

means, though. Your Ember app is just running in a Node environment through Fastboot, it’s not a totally separate thing from the client-side Ember app. "
2017-10-24 17:15:14;How to build two apps within one Ember projects?;"I literally have this case. Web app written in ember.js and a chrome extension written in ember.js and they share some of the same code.

So I have two separate ember-cli apps. Then I have a private addon where all of the shared code resides. That addon is soft linked into both ember-cli app directories (some people use `npm link` for this). The key that makes all of this work right is implementing the `isDevelopingAddon` hook in the addon. This allows the running app to be rebuilt when the addon code changes. Look at the ember-cli project.  You'd probably be better off having a separate job just for the extension."
2017-10-24 02:07:23;Ember QUnit Simplification;Super psyched for nested modules! Awesome to see ergonomic progress making its way into ember.
2017-10-23 21:32:47;How to validate query params in Ember.js – the Ember way;
2017-11-02 13:58:17;Ember Intl format while typing;You need to mask the input. You should probably get in the slack channel for ember. The help channel is really good for helping with stuff like this. [Does this work for you?](https://ember-twiddle.com/a3eaa71da9b874c470ca1c9716dcf01b?openFiles=controllers.application.js%2C)
2017-11-01 22:21:16;Support all the currencies;Have you taken a look at [ember-intl](https://github.com/ember-intl/ember-intl)? Also...perhaps [Money.js](https://www.google.com/search?q=javascript+convert+currencies&oq=javascript+convert+currencies&aqs=chrome..69i57j0l5.5856j0j1&sourceid=chrome&ie=UTF-8) could work here?Definitely look at ember-intl
2017-10-30 21:48:15;EmberJS in Docker Container;"Thanks for contributing!

As an alternative, I find this Dockerfile to be especially well maintained: https://hub.docker.com/r/danlynn/ember-cli/I tried https://hub.docker.com/r/danlynn/ember-cli/ since it looks up to date and the problem I had was that file watching was really slow for some reason through the container for a large project I am working on. Do you know if your image is any different? Have you found file watching slow at all?Can someone explain what you use docker for with Ember? I use docker-compose for my backend local dev + production but am confused what the use case for pitting ember in it. 

"
2017-10-30 07:45:01;Testing with Relative Dates and Timezones in Ember;
