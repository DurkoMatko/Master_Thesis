date;submission_text;comments_text
2012-08-21 17:02:31;AngularJS and the Goodfilms Mobile Site - Part 1;
2012-08-22 12:59:32;How do you start an AngularJS project?;
2012-09-18 08:41:57;John Lindquist - YouTube;
2012-09-17 19:03:55;Single-page apps with Angular and Node/Express;
2012-09-12 00:54:42;Using Yeoman with AngularJS;
2012-09-22 11:51:39;angularjs debug;
2012-10-14 18:06:20;Announcing the Release of AngularJS Scaffold;"This is sweet. I'm looking to do the same with the [Yeoman](http://yeoman.io) project, which is still very much in early stage development. This could provide some inspiration. +1 for AngularJSForgot to mention in the title, it's for using AngularJS with Rails.seems nice, will check it out this weekend. great that some people start to post on the angular channel. it's more or less dead ;(Similar project for Grails here https://github.com/robfletcher/grails-angular-scaffolding"
2012-10-31 17:18:19;color-scheme editor for Sublime Text using Angular.js;"Oh man this is awesome. ThanksI like it quite much.

Can I use this somehow to create syntax highlighting for a language which does not yet have one? I'm asking because I couldn't find any regexes (or anything else) which would define scope boundaries for example for comments. Or my only option is to still edit the xml manually?"
2012-11-07 21:20:33;AngularJS Q&A Hangout;
2012-11-14 23:37:02;AngularJS Batarang 0.3.0 Released!;
2012-11-26 13:09:14;Instagram Slideshow with AngularJS;
2012-12-03 19:48:09;Does AngularJS offer something like a .complete() callback?;No, it's a pretty primitive promise implementation. You'll have to either add another promise to it, or just put a function call on the end of both.
2012-12-05 20:29:47;Directives demystified;Okay, they're not really mysterious, but this is by far the simplest and most concise example I've found. It strips away everything but how to use a directive. The custom component videos are equally great, and take the topic a bit further (http://www.youtube.com/watch?v=A6wq16Ow5Ec&list=UUKW92i7iQFuNILqQOUOCrFw&index=15&feature=plcp, http://www.youtube.com/watch?v=nKJDHnXaKTY&list=UUKW92i7iQFuNILqQOUOCrFw&index=13&feature=plcp).
2012-12-05 01:32:35;Angular Modules - A new community database of third party modules. Submit your modules now!;"I was kicking around the idea of a searchable database of third party angular.js modules in the mailing list. I've released the first iteration of the site.

I'm hoping to collect feedback on what would make this database more useful, and I am also looking at common patterns so we can hopefully create some best practices when creating modules.

One of jQuery's biggest strengths is it's wealth of plugins, and I believe that angular's extensibility is one of it's biggest advantages. Hopefully by sharing useful modules we can promote angular and make it better.

The site itself is open source, and I am welcoming [issues](https://github.com/jimrhoskins/ngmodules.org/issues) and pull requests.

https://github.com/jimrhoskins/ngmodules.orgAngularUI seems great, will try it today.

jQuery Passthough could prove handy.just an idea. There a lot of great angular jsfliddles floating around, maybe you can make a section for them

Otherwise, I like the idea. Hope to see it grow"
2012-12-17 18:09:38;AngularJS MTV Meetup: Best Practices (2012/12/11) - YouTube;
2012-12-14 11:56:14;Show More pagination with angular.js;
2012-12-12 23:20:13;Looking for feedback on ngmin - a prototype AngularJS minifier;
2012-12-24 23:56:25;What to do for graceful degration? AngularJS for people without JS?;"I ask this in all seriousness. Who doesn't have JS enabled at this point? It's my understanding that even screen readers work with it?

I feel like most one page apps are not concerned with SEO and whatnot?If it's a requirement that you must support people without JS then I'd suggest not using a JS framework. Otherwise you'll end up with a lot of duplicated code."
2012-12-24 11:23:45;Getting Django URL Patterns to Play Nicely with Angular's $routeProvider;
2013-01-04 18:49:54;AngularJS: 6 Months Later;
2013-01-15 15:36:05;Building Huuuuuge Apps with AngularJS;"I've done something similar on a project but with a modules folder in the root and subfolders for each module. 

https://github.com/robbyronk/mpga-d3/tree/master/js/ng-app-mpga

I also set up the H5BP Ant build script for minification of the CSS, JS and HTML. It took some small modifications, but once I got it working it's been great.
The relevant modification is build/build.xml in https://github.com/robbyronk/mpga-d3/commit/d97eeade0a8dc681f8ef8afbe4d7888c1a600f19."
2013-01-13 23:01:36;A different take on angular routing.  Wouldn't mind getting some feed back.;"I'm confused, can't you technically do all of this stuff with the current routing?

Even the return of data, etc.

    $routeProvider.when('/test', {
          controller: function($scope, getReq) {
             getReq.success(function(data) {  
                $scope.data = data;
             });
         },
         templateUrl: 'test.html',
         resolve: {
             getReq: function () {
                 return $http.get('/MyData.');
             }
         }
    });

Not that I would *ever* do anything like the above. It seems like it would be hard to test and maintain.

... I'm just playing devil's advocate... I'm not downplaying your idea. I'm for anything that helps make Angular better somehow. I'm just a skeptic."
2013-01-10 23:04:10;I built a fast and clean alternative interface to YouTube using Angular and Foundation. Feedback welcome.;"AngularJS, the best framework around.I really like what you did there. Even though I find myself troubled in searching for items:

What i really would like to see is that you safe searches along the back and forward navigation.

Also: Why this name?The ability to make playlists would be cool, like when I do a [search](http://toogl.es/#/search/fukkk%20off) it would be nice to check videos that appear then click a button that says ""Play Selected"" or ""Add to playlist""

Dunno just a thought, it would be sorta cool to be able to create stupid one off playlists of music that aren't linked to my youtube account.Nice work. I'd like the ability to see a user's profile, specifically their uploaded videos and (most importantly) playlists.

Angular, it just makes things better.Really nice work, thanks !"
2013-01-09 18:40:54;AngularJS Dashboard -  shows the latest angularJS related stuff from Twitter, Github, StackOverflow and Reddit.;"Built it as part of learning angularJS. Inspired by Ember Dashboard. http://code418.com/ember.js-dashboard/

repo: https://github.com/ericzou/angular-dashboard
Feedback or PR welcomeExcellent framework, the best around.Nice work...still I'm wondering what use GitHub sees in letting me know that a lot of people subscribe to the repo. Without the subscribe messages this would be a lot more useful I thinkLove it, this is great. Any way you can add Google+? There's a lotta AngularJS talk goin' down there."
2013-01-21 15:06:54;New release of AngularJS Scaffold to generate single page rails apps using Angular and Bootstrap for CSS.;
2013-01-29 20:23:29;Stack-Ed - AngularJS edition;"""Couldn't Load Question."" and ""No Accepted Answer."" when they have both present."
2013-01-25 20:15:39;AngularJS is too humble to say you’re doing it wrong;
2013-02-02 12:02:33;Egghead.io - short Angular.js screencasts;"awesome, these are really useful, sent $5 ;)"
2013-02-13 18:29:15;stackoverflow: How to save only changed objects on server. Restful service + angularjs;
2013-02-25 02:27:43;How to think in angular if I have a jquery background;The [AngularJS FAQ](http://docs.angularjs.org/misc/faq) is also really helpful. See 'Common Pitfalls'.
2013-02-23 14:56:28;Updating multiple controllers with one polling service;"Im not sure what you want but Poller is the same instance in all your controllers.

You are overwriting data because data.response = r.data, maybe you want to set up an array end push the response data in to it?"
2013-02-20 01:58:28;AngularJS Unicorn Directive;"Finally!HAHAHAHAHAHAHAHAHAHAHAHA!!!!

....pointless"
2013-03-05 16:30:48;How to handle SEO optimizations of AngularJS in node;"How much SEO do you really need to do for an AngularJS app?  You shouldn't really be using AngularJS for a website.  It should only be used for Web Applications.  Most, if not all, web applications shouldn't be indexed by search engines.

Anyway, thanks for your article on this.  I did learn something :)."
2013-02-27 21:34:57;How to Integrate Codemirror with Angular UI;
2013-03-07 21:55:57;AngularJS for jQuery Developers;There are a LOT of people coming from jQuery to Angular including myself, this article is pure goldI love angular so much. I think it's the next jQuery. By that I mean in 5 years everyone will know it.
2013-03-07 00:29:54;play with angularjs, mongodb, and heroku in this web hackathon;
2013-03-17 18:33:05;I feel like I'm missing something here. For pretty much any use case I've considered, AngularJS is extremely limited. Could someone help me out a bit?;"This post may help you: http://blog.artlogic.com/2013/03/06/angularjs-for-jquery-developers .  I see you talking about the need to 'update' things.  You don't need to do this.  When you're thinking you need to update the data on screen, you're doing it wrong.  Update your data and let the declarative bindings handle the updates.  The only time you need to 'update' things yourself is if you modify a value outside of an Angular construct like a controller, directive, filter, or service.  Then you just need to call $apply() with the value to notify Angular that the value was changed.  I saw your post in the G+ community and the answer you got on the user state is pretty much the way to handle that.  You set up the bindings in the html so that when the user isn't logged in, it is either not displayed or you can have it redirect to a login template. 

Angular is a real departure from how we've been thinking about building web apps.  Once you get the concepts down, you'll find it is a lot less friction (and code) than the traditional way of developing apps with libraries like jQuery.

Also- I like using ng-include over ng-view.  Both ways of managing routes are perfectly valid though.Hi Dragory,

I wish I had the time to go through all of this to help out a fellow coder but sadly I don't.  I can tell you that you are a bit off course and are doing things a bit incorrectly.  What I can do is direct you to the official AngularJS Google+ Community group where you will more than likely get a lot more response than here.  This sub-reddit has far less participants than the Google+ Community.

https://plus.google.com/communities/115368820700870330756

Cheers,
meenie> First, the whole ng-view thing feels like we're back to the days of static pages with everything copied from page to page. For nested views, I had to go look for a third party library - something which I feel like should be part of the core functionality of the framework.

You're actually using ngView incorrectly in that case.. by core design, at least. The idea behind it is that it represents a single state. Having nested views defeats this purpose.. and as far as i can tell, this is the core of the reason why sub views were not accepted into the core.

Generally speaking, if you want to load more templated resources, look into ngInclude."
2013-03-26 12:30:12;Build a Twitter Game;
2013-03-24 12:15:55;Fun with AngularJS;
2013-03-22 01:40:24;"Early access to my book, ""AngularJS in Action"" (and 50% off with code: angjsau)";"Hi, 

Bought a copy just before =).

Just wondering - 1. Any ideas on when the best chapter is coming out? =)

2. Will you be discussing how to persist/update data from backends? (Polling, Websockets, or whatever else). A webapp for one user isn't too useful... Lol.

Good luck with the writing!

Cheers,
Victor[deleted]The coupon has expired. :/ Any chance you could generate a new one?Thanks a ton!! :)Just bought a copy. Thanks!A friend at work was telling me about this yesterday morning and then you posted last night, so I went and purchased a copy last night.

Are the chapters going to come out online in order?"
2013-03-21 18:07:01;How To Use ngRepeat;Bonus points if you nest two ng-repeats and develop some arcane function to handle `numbers:3` where needed.
2013-03-20 02:12:31;Having some problems with a nested object.;"I have a feeling that it has got to do with the ""index"" field. Since this is used as a filter while displaying the comic, I suspect it to be playing a role here.  

However, I might add that the code could be improved. Instead of using `ng-repeat=""comic in comics|filter:index""` why dont you use the `comics[index]` as your scope?  

Anyway... what you can do is `console.log()` each scope value to see their contents and then you will be in a better position to identify for yourself the cause of the issue.I would rewrite it like so

    var index = $scope.index;
    var comics = $scope.comics;

    $scope.next = function () {
      if (index + 1 < comics.length) {
        index++;
      }
    };

    $scope.previous = function () {
      if (index > 0) {
        index--;
      }
    };

    $scope.first = function () {
      index = 0;
    };

    $scope.last = function () {
      index = comics.length - 1;
    };

    $scope.$watch('index', function (i) {
      if (comics[i]) {
        $scope.selected = comics[i];
      }
    });

Computing pointer as difference between id and array length begs for problems."
2013-04-02 16:14:06;Mastering WebStorm for AngularJS: YouTube Livestream Event Tuesday, April 9;
2013-04-01 19:47:06;Password generator;You should auto-select some sane defaults and generate a password on load.
2013-03-31 18:01:24;"Firebase bindings for AngularJS announced; Firebase may be all the backend you need";This look amazing!Tried it out last night. Super easy to use. I'm considering using it for 2 of my current projects. Could save some serious time.
2013-03-28 15:55:53;Do you use jQuery anymore?;Less and less.  And their decision to drop IE6-8 means I will be using it even less.  To me, that was the big value proposition for jQuery: making the APIs for the various browsers the same.  Without that, I'm not sure there's anything in jQuery I need other than as a dependency for plug-ins.
2013-03-27 09:51:23;My first full AngularJS Project is live. Maybe you'd like to see.;"Did anybody else read the link as MetaMethLabs?Could you explain why AngularJS was used here? As in, it seems like it could also be rendered using simple static html - why AngularJS specifically?  
Super simple site using AngularUm, it's not working properly for me. Is it because I have JavaScript disabled?

/joke"
2013-04-05 07:50:29;Meteor Leaderboard, but in pure Angular.js?;"I would recommend that, for server-side, you use a library like Socket.io (or equivalent in other languages) and that in angular.js you create a [service](http://docs.angularjs.org/guide/dev_guide.services) that would wrap the client-side code of the library you used.

Yes, it is more work than meteor but you can use any server-side language you want.

After that you would use angular.js as normal, with controllers, directives, etc.You could do this very easily using Firebase which has its own set of angular bindings (search angularFire) and is real time and persistent by default."
2013-04-16 23:52:27;A sudoku game with angularjs;
2013-04-12 14:18:52;AngularJS's declarative markup;"You're spot on. The alternative, with jQuery selectors and binding events would be a maintenance nightmare in a large application. With ng-click it's much easier to find and debug.

Angular is actually very well thought out. I've been working on a large application for the past year and Angular has proven to be one of the best decisions.
I love how Angular helps writing less code and especially code where the intention is more clear, being more declarative.

My problem with Angular so far is with the documentation. I have to learn a ton of vocabulary just to read the docs, and some of these words have specific meaning in Angular that doesn't perfectly match how they are used elsewhere.

Just take a look at this list: module, controller, model, view, provider, factory, service, injector, directive, compiling, linking, scope, filter, route. Here's an example from the docs:

> Use $provide to register new **providers** with the **$injector**. The providers are the **factories** for the instance. The providers share the same name as the instance they create with Provider suffixed to them.

It makes at least some newbies dizzy. 

I also have some problems with modularity, in the sense of being able to lazy load parts of the app as they are needed. It doesn't seem possible to create/load directives after the bootstrap phase is completed. Many have posted questions about how to tackle large projects in a more modular fashion.

That said, I still think my way ahead is with Angular. It's just so radically different from jQuery that I feel amazed.>It's not global
One reason why onclick=""whatever()"" is so frowned upon is that the whatever() function had to be global for it to be recognized.
With Angular's ng-click=""whatever()"" approach, whatever() is just a function on the $scope object for whatever controller that markup is using, which means you're not throwing everything into the global scope. This has the added benefit of making it easily testable (testability is very highly valued in the Angular community)

Angular is amazing for a multitude of reasons, but this, to me, is one of the most significant. In an Angular app, if I want to know *why* something happened, I only have to look at a controller in the scope hierarchy. In a jQuery app, I have to hope that whoever authored the behavior did a simple class/Id selection (which can be quickly found with a simple text search), because the code accessing the DOM element could be anywhere.Very nice article. 2 months using angularjs here and I love the architecture. very easy to maintain and change (plus the added emphasis with testing makes testing easy)Nailed it"
2013-04-22 12:31:40;Writing Reusable AngularJS Components with Bower;
2013-04-21 21:31:25;Diving into AngularJS;
2013-04-20 02:28:49;Things I love about AngularJS;"`<button ng-click=""dudes.splice($index,1)"">Delete</button>`

This kind of thing is fine for prototyping but it starts to get messy very quickly. What happens if you want to add a confirm dialog before deleting?  What if you then decide you want to add a key-binding that deletes the item? What if you have checkboxes next to each item so you can do batch delete operations?

In real-world applications you will start to learn pretty quickly that it's much better to abstract this kind of thing into functions.Your first example was technically and aesthetically better.  the whole point is to get away from having code in your html.  get that shit out of there.Omg code everywhere"
2013-04-19 05:11:11;I made an open-source google reader replacement with AngularJS, check it out!;"No demo? I'm definitely not logging into my gmail. Give us a demo account.Nice job.I like this.

I started working on a similar idea, but mine was node.js based for the backend and AngularJS+Bootstrap for the frontend. I didn't get very far past the layout and part of the REST API, but I basically wanted most of the work to be done on the client side, and stored in localStorage, and use thee REST API to track/cache updates.

Kudos to you for seeing the project through."
2013-04-17 22:47:56;AngularJS Ordinal Filter;
2013-04-30 22:32:20;Testing Angular Filters;
2013-04-26 17:07:59;I don't expect any credit for this but I found it very useful so thought I'd share - Angular Cheat Sheet;"Thank you; that looks useful.Not to be a diva, but Angular specifically recommends against creating controllers like that. It says it in it's documentation. The correct Angular way would be :

var myApp = angular.module('myApp',[]);
myApp.controller('myController1', ['$scope', function($scope){ var foo = ""bar""; }]);

It's done this way to limit the scope of controller... I believe a {{foo}} within the controller would generate bar."
2013-04-26 12:25:31;Help with getting AngularUI Sortable demo working;"I suggest that you post this to Stackoverflow - if not done already.I think it is probably the order in which the libraries get loaded. 

What does the console say?"
2013-04-25 16:21:35;AngularJS: 6 Common Pitfalls Using Scopes;
2013-04-25 09:12:00;Question about client side auth(angular) + mongodb;"If you don't want your API key exposed to the public, you won't be able to talk directly to MongoDB right from the client. There isn't a way around that.  

You will have to send the data to your webserver first, which will in turn make the call to the database. "
2013-05-06 17:49:00;User service / User model examples?;[deleted]Try https://github.com/angular-app I've learnt a lot from that
2013-05-06 17:07:34;AngularJS Best Practices: I've Been Doing It Wrong! Part 2 of 3 - on testing;
2013-05-03 12:43:49;AngularJS JSON Date to Date string filter (suggestions?);"i think this solves the problem from the wrong side.  check out [this stackoverflow discussion](http://stackoverflow.com/questions/10286204/the-right-json-date-format).  the /Date(2093903290253)/ format is a non-standard .NET craziness - it doesn't have anything to do with JSON specifically.

i recommend exposing date time information through your JSON services as [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) - you can use this format without a javascript interpreter, and with a javascript interpreter all you have to do is:

    var myDate = new Date('2011-06-02T09:34:29+02:00');"
2013-05-03 02:16:01;Enhancing Angular Promises: Returning new promise of field or method called from original promise’s result;
2013-05-01 18:33:11;Sharing Data, State and Models on AngularJS: Alternatives, comparison and my solution;
2013-05-14 00:54:11;Introduction to Tyto. A simple framework based off of angular.js;Is there a live demo?  A written description of what it can do and how it works?  1 min videos and a website with just a link to source isn't going to grab very much attention.fyi www.tyto.io (from the video description) doesn't work.  tyto.io does.
2013-05-13 22:58:50;ngAnimate Your AngularJS Apps with CSS3 and jQuery Fallbacks;
2013-05-10 16:26:24;A Reusable Bootstrap Modal AngularJS Directive for Forms;FYI - there's an entire Angular library that brings Bootstrap over to Angular. http://angular-ui.github.io/bootstrap/
2013-05-09 21:53:33;4SQ API + AngularJS + Rest example;
2013-05-08 22:07:11;Anyone know what's up with the broken AngularUI site and what we're supposed to do in the mean time?;"I am surprised they didn't finish things before pushing it live. I can't remember the last time I saw a ""site under construction"" logo. "
2013-05-20 10:32:44;angularJS pagination by date;Depending on the number of records, you should definitely let the server (and your database) do the actual filtering. That said, it does not mean you can't set up the filters in a UX friendly manner on the client side. I can imagine that the filters are added and removed client side, and via API calls sent to the server where super fast queries will run against your database of choice.
2013-05-20 05:14:55;AngularJS ng-Grid and ngGridFlexibleHeightPlugin not working as I expect;"changing the height to
    var minHeight ={ minHeight: $scope.myData.length};      

worked for me  "
2013-05-17 18:08:44;Proposed Angular's WebPage structure;"Dude, I know this post is not gonna be huge but I want you to know how bloody fantastic it is. 

Actually I'm using that same structure myself ""one main controller"" and I wanted to use URL routing so each separate tutorial (I'm building an interactive tutorial site) had it's own URL, but I thought that would force me to use several main controllers, one for each, and that I wouldn't be able to have any common models (essentially user state data). I asked a few people about it, including even in the Angular docs but didn't get an answer. 

Not only have you answered my question but you've shown me what an easy and ideal structure it is to follow, so thank you very much for that, I'm gonna get cracking right away! :)Here the same post but with Code Highlighting in the Blog :) http://www.blogeek.com.ar/2013/05/18/proposed-angulars-project-structure/Hi mgonto, I tried re-factoring but of course I never considered that linking to one of the URLs listed in routeProvider would throw a 404 error. 

Of course if you're not arriving at the original URL ur not getting the js file and the browser isn't aware of the routing system. The most common suggestion I found was to use a rewrite rule on .htaccess. I just wanted to ask you if that was what you did or if there is a better method.Hello again mgonto, I thought you should/might like to weigh in on this :)

http://stackoverflow.com/questions/16697217/angular-routing-setup-gives-is-not-a-function-error/16697412?noredirect=1#comment24047671_16697412"
2013-05-15 15:33:18;AngularJS and $compile;How do I insert the compiled ng-view into the page?
2013-05-28 15:59:59;Security with Angular JS [30 minute screencast];"A brief look at some common-sense ways that you can secure a web application written with Angular JS and Laravel 4. By watching this screencast you can expect to learn about:

* 3 common-sense ways to secure your web application
* angular.constant
* ng-init
* ng-sanitize
* Laravel 4 CSRF support, route filters, and built in protection

Resources Bundle: http://bitly.com/bundles/dmosher/6

Source Code: https://github.com/davemo/end-to-end-with-angularjs/compare/370eddc83f...f2e04b5c9a"
2013-05-28 15:58:25;"The ""Magic"" behind AngularJS Dependency Injection";Alex, you need some help with your typography
2013-05-28 05:36:18;[Beginner Tutorial] - AngularJS in 30 mins;"Every time I scroll the page I want to punch my monitor. That share thing is annoying as shit and made me stop reading.Broken on my phone. 

TOC pops up in the middle of the screen and won't go away. Not bad but as I stated in the disqus comments, filtering does not work as intended. It searchs in all the subelements, not only names. Thus searching for 'rock' brings the people with it in the music list. To fix this, using filter: {name:searchText} works but this time the page does not bring any results on first load. I couldn't find a way to do it better."
2013-05-28 01:03:13;Any good angularjs tutorials or books? Or a road to angular mastery?;"Just watch all the [egghead.io](http://egghead.io) videos and you should be good to go.I've been working on a screencast series that should get you up to speed pretty quickly; I've got 3 parts so far:

* Part 1: [Intro to Angular JS](http://www.youtube.com/watch?v=8ILQOFAgaXE) [50 minutes]
* Part 2: [End to End with Angular JS](http://www.youtube.com/watch?v=hqAyiqUs93c) [52 minutes]
* Part 3: [Security with Angular JS](http://www.youtube.com/watch?v=18ifoT-Id54) [30 minutes]

Also, +1 to the egghead.io videos; they are excellent.Here's some recent tuts I read


* http://blog.artlogic.com/2013/05/02/ive-been-doing-it-wrong-part-1-of-3/
* http://blog.artlogic.com/2013/05/06/angularjs-best-practices-ive-been-doing-it-wrong-part-2-of-3/
* http://blog.artlogic.com/2013/05/08/angularjs-best-practices-ive-been-doing-it-wrong-part-3-of-3/
* http://thenittygritty.co/angularjs-pitfalls-using-scopesI'm reading [the book by Brad Green & Shyam Seshadri](http://www.amazon.com/AngularJS-Brad-Green/dp/1449344852/ref=sr_1_1?ie=UTF8&qid=1369714443&sr=8-1&keywords=angular) now, and its pretty good. Its brand new, and by a couple guys who worked on the project at Google.Dan Wahlin has a great 60 minute intro to AngularJS that will help get your head wrapped around some of the concepts:
http://weblogs.asp.net/dwahlin/archive/2013/04/12/video-tutorial-angularjs-fundamentals-in-60-ish-minutes.aspxHonestly I thought the [tutorial on angularjs.org](http://docs.angularjs.org/tutorial) was decent.Note that I'm an author with ng-newsletter.

We work very hard to make our posts digestible and concrete with loads of examples. You should check us out at: http://www.ng-newsletter.com/posts/beginner2expert-how_to_start.html
After reading a bunch of tutorials and watching videos scattered here and there, I came across this collection that really ties everything up together neatly. It's basically a long list of learning materials created by others, but structured in a sequence that makes it all easier to understand.

http://www.thinkster.io/pick/GtaQ0oMGIl/a-better-way-to-learn-angularjs

It includes most egghead vids, specific bits and pieces of the AngularJS docs, parts of a book, etc. I wish I had this when I started!"
2013-05-27 09:25:25;Google I/O 2013 - Design Decisions in AngularJS;
2013-06-04 09:14:16;What goes around comes around (Javascript testing with Jasmine and Karma);
2013-06-04 09:11:26;Use Ng-bind in AngularJS;Also, http://docs.angularjs.org/api/ng.directive:ngCloak
2013-06-04 02:38:55;Angularytics: The solution to tracking page views and events in a SPA with AngularJS;
2013-06-03 18:35:06;ng-boilerplate - Non-Trivial AngularJS Made Easy;I wish it used SASS over LESS.
2013-06-03 12:01:17;DRYer AngularJS Directives;
2013-06-11 23:41:09;AngularJS with REST API example;
2013-06-11 09:28:55;AngularJS directives and the computer science of JavaScript;"Hey,

The guy here is setting and getting values using val() and text().

He should instead use ng-model and {{}} to get and set values.

Not really nice tutorial nor good usage of AngularJS."
2013-06-09 16:40:59;So how do I make a jQuery plugin work with angularJS?;"Hey, 

I made a Directive for datatables, and it's heavily commented. It might help you on your way, since angular's docs pretty much sucks.. 

https://github.com/maktouch/datatables-angular-directive

Basically, if your jquery works like this


    $(""#hello"").heyhey();


You can make your directive like this


    <div heyhey></div>

This would be the directive.

     angular.module('helloDirective', []).directive('heyhey', function () {
      return {
        restrict: 'A',
        link: function ($scope, $elem, attrs) {
        	$elem.heyhey();
        }
      }
    });


If you want

     <heyhey></heyhey>


Just replace A with E

     restrict: 'E',


$elem is a jQuery lite object. 

Directives seem pretty complicated, but they are worth figuring out. Really, the right answer is a directive. I have struggled with directives, but they really are what makes AngularJS so unique. Search for examples, put in the work and it will pay off. 



Easy Answer:  [Angular UI jquery passthrough](http://angular-ui.github.io/ui-utils/#/jq)

Right Answer: [Learn to make directives.](http://www.egghead.io/)I'm having a similar issue with the `jQuery Cookie Plugin` plugin. Directives don't seem to be applicable here, and accessing cookies is definitely something that should be available in controllers and services. 

ngCookies has quite a few critical issues and isn't ready for prime time yet."
2013-06-09 16:36:30;Building an AngularJS Filter;Link seems dead..
2013-06-07 17:06:45;Collection of AngularJS learning resources;We should get this into the sidebar.This was passed around my office today.  It is a fantastic find, it helps flesh out the some areas that the official documentation doesn't. In particular the services section help me tremendously today.Epic.Excellent. Thank you so much for doing this. I'm just getting into AngularJS coming from the ExtJS world and I am having a real hard time thus far. I needed this!
2013-06-18 22:17:38;AngularJS Service for access to Google API with Javascript Client (and RequireJS);
2013-06-18 14:04:22;How do you document your AngularJS applications;"The same way I document any code. I use descriptive names and well-structured code. Or at least I try.

Uncle Bob says that every time you write a comment, it's a failure of yours to write readable code. I tend to agree. And those huge block comments at the top of the file will be out of sync the next time a commit is made anywayWe don't. Job security. *evil laughter*I use JSDoc, usually a block at the top of the file explaining what this file is for and a block above each controller/directive/filter. 

For controllers, I'll put a block above their definition explaining what it's for at a high level and then some more specific blocks in them for function definitions (with params). 

Usually I only put one block above filters/directives that explain them.

Finally, some inline comments throughout for the parts that aren't obvious at first glance.

I would like to hear what other devs have going on as well.Docular (https://github.com/gitsome/docular) has been released, which allows you to generate the same doc style as the Angular docs.

It was announced in this thread: https://groups.google.com/forum/#!topic/angular/rlItfQhqlC4"
2013-06-17 15:46:47;Mastering Web Application Development with AngularJS (RAW available);"Don't know the authors nor the publishers. But I just recently bought it and received the RAW (read as we write) eBook edition. It's a very complete writing that also teaches Best Practices with recent releases of AngularJS and JavaScript development in general. Idiomatic stuff. I can absolutely recommend it!> We assume that you’ve got working knowledge of HTML, CSS, and JavaScript.

Can someone who has read the latest RAW version elaborate on how much JS knowledge is required? Is basic js (at the level of someone who has never taken a js class but who can handle jquery) knowledge enough?[deleted]"
2013-06-16 20:01:23;Optimizing Anagular Templates with Grunt on Heroku;
2013-06-16 15:53:19;The MEAN stack: Mongo, Express, Angular, Node. Definitely my weapons of choice!;If this is your stack, you should check out [SailsJS](http://balderdashy.github.io/sails/), it's a young project but hopefully soon it will have tighter integration w/ Yeoman & AngularJS. [deleted]I'm still looking into Node. Would something like MEAN still require a proxy, be it nginx, Apache etc? 
2013-06-25 21:43:14;First Restangular final release: 1.0.2;"Congrats Martin!

Thanks for all your hard work. You've saved me hundreds of lines of code :)."
2013-06-24 17:09:23;Easy access to IndexedDB using a helper library (IDBWrapper);
2013-06-24 09:32:39;Learning JavaScript Design Patterns;not exactly angular specific, but definitely a good read.
2013-06-24 09:31:23;AngularJS Fundamentals - Online Training Course for Developers;It requires registration to view. =\
2013-06-22 05:35:17;Avoid empty and duplicate records to get pushed in AngularJS;
2013-06-28 19:56:44;Making AngularJS search-engine-friendly (through headless browser cache);Is this still necessary?  based on my playing with Google webmaster tools against an angularjs site, Google is actually waiting for the js to finish before indexing the page
2013-06-28 17:44:56;Why I Chose AngularJS;[deleted]
2013-06-28 16:05:22;UI effects and elements - how do you do these?;"You can use the ngAnimate property for lists (ngRepeat) and other stuff (ngView) as documented [here](http://www.nganimate.org/).Angularjs actually uses jQuery for a lot of things if it is available (otherwise it uses jQuery lite). In the example that you listed, the iElement variable in the directive actually is a jQuery element already.

The only issue with using other jQuery plugins is that you generally need to wrap the plugin in a directive, although this makes it much nicer use (in my opinion)
"
2013-06-28 14:55:20;ngGrid table - remove row;"Did you figure this out? I'm guessing you need to think Angular. I haven't messed with the grid but if it works like everything else in Angular, then the grid is just a representation of the data. Just modify the data. If your row's ID is 25, find the record in your data that matches and delete it. The grid should update accordingly. I played with ngGrid for a few hours and decided there was some flaw internally that wasn't binding the data to the view, rendering it essentially non-angular in its approach.  

I tried poking around for what might fix this, as I liked it otherwise, but I couldn't figure it out and gave up.  I'm now using ngTable which seems a little better in its data-binding, but less featured in most other areas. "
2013-06-28 08:24:37;Building a Web App From Scratch in AngularJS;"Another nice intro article.  

The only glaring omission I can see is testing.  The angularjs  team seems to emphasize testing as much as possible.   "
2013-07-09 19:27:18;Performance considerations for complex, lengthy models;"Can you make the sorting/filtering/searching processing happen on the server instead? You'd obviously be introducing latency because of the requests but that might be more tolerable than a sluggish UI...I had a similar issue and I solved it by using pagination. Manipulating an array of 900 objects is pretty fast: drawing them isn't. If you only have 10 or so on the screen at a time there don't seem to be any notable performance issues.

You can build your list of pages whenever the sort/filter changes. I have an array of chunks where each one is the page size, that way I can step through the pages with no heavy processing required. "
2013-07-09 18:25:49;Full-Spectrum Testing with AngularJS and Karma;
2013-07-08 15:03:28;Controller modifying directive contents? (and other doubts);
2013-07-08 13:13:33;AngularJS Edinburgh Meetup;
2013-07-07 06:55:05;Tracking PageViews on a SPA with AngularJS;
2013-07-16 14:03:54;AngularJS filter to create clickable links out of URLs;"Hey enkarta, good start.  I've made some improvements to speed it up a bit with less loops and using the tried and true `for i` loop :). All though I did add a couple of lines ><.

https://gist.github.com/meenie/6018010

For anyone wanting to use this type of filter, you will need to include the angular-sanitize.js library, include `ngSanitize` as a dependency, and use it in a `ng-blind-html` diretive.  Here is a [Plunker](http://plnkr.co/edit/LU7HWqgBeUaibMQ7gdJT?p=preview) with an example.  Just start typing a url/email in the input and you will see it in action :).We have the [linky filter](http://docs-angularjs-org-dev.appspot.com/api/ngSanitize.filter:linky) for that."
2013-07-15 14:55:35;Code Reuse in AngularJS - Making directives work together;
2013-07-15 14:48:50;Hacker News Filter Made With AngularJS;
2013-07-14 07:28:14;StandHub - A tool that connects people who need help with a specific topic or issue with tagged experts.;two day AngelHack project using AngularJS and Firebase.
2013-07-12 08:50:39;Radian = AngularJS + D3 + open source;
2013-07-23 19:08:27;Lazy Loading Image With AngularJS;
2013-07-23 17:21:43;Securing AngularJS Applications with Play;
2013-07-23 17:19:46;Huge list of Angular JsFiddle examples;FYI : Fiddles can be opened in Plunker using a URL like: http://plnkr.co/edit/fiddle:<fiddleid> also, append @<version> to open a specific version. Sweet. Great list.
2013-07-23 17:18:04;AngularJS Directive for Mobile Sliders;
2013-07-23 06:27:45;Fast Mobile Clicks with AngularJS;"Page is 404ing now. URL changed to

http://joegaudet.com/angular/mobile/2013/07/22/fast-clicks-with-angular-js.html
"
2013-07-30 16:17:46;Chaise Blog: building a diary with Angular.js, Grunt.js and Cloudant;
2013-07-30 13:18:02;dropstore-ng · Dropbox Datastore bindings for AngularJS;
2013-07-30 13:16:57;Try, Catch, Fail: Angular JS: Validating Form Elements in a Repeat;"Nice work. I am about to venture into this, so you've saved me some time :-).I actually just used this blog post to make a custom validator and it would have taken me ten times longer without the blog post. Definitely helpful.Rly awesome!! Add elements dinamically is exactly what I was looking for!
Thank you :)"
2013-07-30 13:16:33;How to get started (Part 1 of the AngularJS - from beginner to expert in 7 steps series);
2013-07-29 18:21:37;How CoffeeScript makes AngularJS easier and faster to write (xpost /r/javascript);
2013-08-06 20:39:53;New X-Men promo website using AngularJS;
2013-08-06 20:01:16;$watch how the $apply runs a $digest;This is a fantastic article. Really helpful.
2013-08-06 19:59:16;Animating with AngularJS;
2013-08-06 16:46:16;Angular UI Router as the infrastructure of a large scale app;
2013-08-06 15:33:52;Scopes (Part 2 of the AngularJS - from beginner to expert in 7 steps series);
2013-08-13 23:15:40;AngularJS 1.2.0-rc1: spooky-giraffe;This great news. The new animation stuff looks much better and makes more sense. Hopefully the ui-router team can update to use 1.2.0 soon :-).
2013-08-13 21:54:44;"Following angularjs tutorial by building social network site. Step 9, angular-bros are loading data from phones.json. I'm loading data the same way from file.json, but my http.success(data) has things like ""/n/r"" added, which isn't what I want. Created file.json in sublime text 2. Please help?";In Firebug or Dev Tools, look and see what the request and response content-types are. If it's text instead of json, that's probably your issue.
2013-08-13 17:10:07;Is there any way to know my directive is loaded into the web page? Directive won't render and I want to know if it's ~there~ and I screwed up the html or if it isn't and I forgot to add a file to the base page... Thanks!;"Start with console.log('Inside directive:', this); from inside the directive.Load up Batarang and check for the scope.  Also check the console.  Seriously?  Check your html source, output something to console.log.  Set a break point in the sources tab of dev tools, open up batarang, take your pick...and...Google debugging javascript."
2013-08-13 14:01:26;Angular help: using select boxes with server-side validation;"I'm going to preface my comment by saying I've only been working with Angular for a couple months so this is just a suggestion and maybe it will help you look at the problem differently.

So if the postback is de-selecting the university choice then you could do this:

On the page_load you know what selection was made so re-order the university list so that the selected one is at the top (I know this is undesirable but I haven't yet had my first sip of coffee).  Then when the page reloads instruct Angular to select the first item in the university list using the ngInit directive:

    <select name=""institution_id"" ng-model=""institutionId"" ng-init=""institutionId=institutions[0]"" ng-options=""option.id as option.name for option in institutions"" required> ... </select>

Can't you fetch all the universities from the beginning and then use angular filter to filter the university select list based on the state. That seems easier. Or are there too many universities to load at once? "
2013-08-13 14:00:51;Directives (Parts 4 and 5 of the AngularJS - from beginner to expert in 7 steps series);
2013-08-20 13:32:02;Error Message Minification with MinErr;
2013-08-20 12:48:28;Services (Part 6 of AngularJS from beginner to expert in 7 steps series);
2013-08-19 21:32:04;Introducing MacGyver: swiss army knife for AngularJS;This is pretty cool - solid docs also. I'm wondering is there a reason you decided to overlap some of the directives included with Angular-UI? 
2013-08-19 03:50:29;The Infinite Path of Scrolling With AngularJS;I love this idea tremendously, unfortunately the execution of this idea seems to be very buggy so far (at least on a mac, using chrome). scrolling down works well, but scrolling up to quickly breaks the page. I'll definitely be keeping an eye out for updates, and will use this tons if it gets more stable
2013-08-18 15:48:09;variable error?;"Obvious mistake: you've spelled them differently.

    $scope.abilities = []
    $scope.abilties.push(""strength"")"
2013-08-27 22:02:17;Any small scale apps to look at to get an idea of best practices?;"There are angular-app and ng-bootstrap to look at. Angular-app is a fully working angular site and ng-bootstrap is a great start to a full fleged website. I'm going to build a small app for my girlfriend soon that I might open source. She's a kindergarten teacher and currently uses these really verbose paper forms to log misbehavior by her students and I figured I could whip up a simple alternative with Angular and Rails that will make her life easier.

I obviously won't link to her version of it, but I'll probably open source the generic code for others. I can't promise it's ""proper"" Angular code but it will be a real app that does real things and will work, so there's that at least."
2013-08-27 21:09:54;Votr Part 4: Angular JS and Authentication with CouchDB;
2013-08-27 19:09:14;Next steps (Part 7 of the AngularJS - from beginner to expert in 7 steps series);
2013-08-27 18:38:06;5 Cool New Features in AngularJS 1.2;
2013-08-27 18:37:29;AngularJS Masonry Directive;
2013-09-03 23:59:45;Multi-line ellipsis without jquery (need to access innerHeight from angularjs element);I know you don't want to use jquery, but in cause there is no angular-specific response, I found the dotdotdot plugin to work great, particularly with the datatable plugin to eliminate oversized row heights for fixed widths. 
2013-09-03 21:45:26;Differences Between Providers in AngularJS;This topic is posted here as often as cats on r/pics.
2013-09-03 19:17:44;A Proposed Pattern for Rails and AngularJS;
2013-09-03 19:16:12;Bootstrap’s Tabs and Lazy Data Loading in AngularJS;Where are you defining the factory for the tabsetController?
2013-09-03 19:15:14;Using the AngularJS Package for Sublime Text;
2013-09-10 23:38:55;Newbie question: best way to load in content on a single page application?;"First off: try to separate the state of the application from the page-ness of it in your head. Just because you are making a 'single page application' does not mean you can't do fun and non-trivial things with state. For example you could have three states here in your app:

* not authenticated, log in form displayed
* not authenticated, registration form displayed
* authenticated, welcome screen (or whatever?)

So then code:

* Services are singletons, so are great for managing state that will persist across multiple views/controllers - store the current user in there (or not, if not logged in) and provide methods to manipulate it (login, logout, register).
* Controllers manage the data and behaviour of the view - use a separate controller for each state mentioned here. Take the data from the form and send it to the service to perform your authentication, receive updates from the service and move between states here too
* Views are the visual representation of the scope of a controller (urgh, words) - keep it as simple as possible and don't put any logic in here if you can put it in the controller instead

I hope this helps. A bit more clarification of your problems would be useful for a more granular answer :)[deleted]"
2013-09-10 14:33:42;D3 on AngularJS using directives and services | ng-newsletter;
2013-09-09 19:58:14;How to mock AngularJS modules and inject them in your testacular tests;
2013-09-09 17:53:02;Advanced Directives - Combining AngularJS with Existing Components;
2013-09-09 17:52:47;Introduction to Directives;
2013-09-17 17:54:21;AngularJS + Cloud Endpoints: A Recipe for Building Modern Web Applications;
2013-09-17 17:53:58;Diving deep into the AngularUI Router;
2013-09-17 17:53:40;Displaying json array data with Angular JS and ng-grid;
2013-09-17 13:59:17;"ng-conf and ""girl tickets"" discussion";"I'm all for including more women, but this seems really... poorly worded.I feel that having conferences discriminate between men and women could be alienating and do more bad than good. I think the proper way to remedy this would be to have a third party (Ada Initiative, Pyladies, etc.) encourage women to go and possibly subsidize tickets.

Conference holders could work with and support these groups, but I think when they try to get directly involved, there's a high chance of them handling it poorly (see exhibit A).[deleted]Meh. Pretty lame. It's not like you're going to scare up all these girls who are petrified of going to conferences because they're afraid of nerd sexism.

I think you'd have better results advocating children in schools to take up programming. Don't target women; just target everyone. There's equal rights, and then there's feminism. If kids want to program, they'll program. Don't start forcing girls to get into computers. That's so stupid.

TL;DR: Singling out women with prizes is still sexism.It sounds awkward when it reads ""girl tickets"". Ladies/Women would have been more appropriate."
2013-09-16 16:35:57;Prototype Angular UIs Without A Backend | OpenSource Connections;"HA! Talk about simultaneous invention. I see the ""Lie to Me"" post, the guy pretty much solved the same problem but a little bit differently. Here's [his blog article](http://codevinsky.github.io/development/2013/09/12/lie-to-me/)

I generally just add a cache using $cacheFactory and then add fake data there. Then each $http request (or on each $resource I make) I just add the cache in the options.

I should l2rtfa I guess, that is pretty cool."
2013-09-24 19:25:06;Super-simple translation support for Angular.JS;This looks amazing! Thanks for the link. I was going to build exactly this! Saved me a lot of time :)
2013-09-24 19:14:48;ng-options and ng-change;"I believe you're looking for ng-model.   For example:

    <select ng-model=""user.OrganizationType"" ng-options=""o.id as o.orgtype for o in orgtypes""></select>

Your selection automatically updates the $scope value of ""user.OrganizationType"" so you can use it on the ng-change directive. Also, if your select allowed multiple like this:

    <select ng-model=""user.OrganizationType"" ng-options=""o.id as o.orgtype for o in orgtypes"" multiple></select>

Then user.OrganizationType holds an array id values.  This also works for objects too (if you want to track more details than just an id."
2013-09-24 17:40:37;Breaking the Ice with AngularUI Utils;
2013-09-24 16:53:30;General architecture advice for my 1st AngularJS project?;"I suggest using [angular ui router](https://github.com/angular-ui/ui-router) as it supports multiple views, nested views, and abstract views.

For project structure I suggest [angular seed](https://github.com/angular/angular-seed) or [angular-app](https://github.com/angular-app/angular-app). Alternatively the [yeoman angular generator](https://github.com/yeoman/generator-angular) is a decent tool. Generates the initial directory structure and has sub-generators for controllers/routes/services/etc. However the generator for routes does not work with angular-ui-router, so if you go with that you have a little bit more to do manually.

I would HIGHLY suggest using angular-ui-router over having each view be a directive. I used to do the latter, and while it works, I feel like it is not what directives were made for. Using the angular-ui-router and abstract views makes things seem more in line with the Angular way.

Also, I know it sucks, noone likes doing it, but try and follow best practices for BDD, write your tests first, then your code, angular lends itself very nicely to this paradigm and accepting it will make your life easier. 

edit: formatted links correctlyI would recommend using [requireJS](http://requirejs.org/) for Javascript and module loading. Not only does it help your site load faster, but it also helps break up all the Javascript you'll be ending up with. [Here is a good seed project using requireJS with angularJS](https://github.com/StarterSquad/angularjs-requirejs-seed).

My one other comment would be I'm not 100% sure each view would need to be its own directive... However, I don't have a TON of experience with directives so maybe someone else could weigh in.

Either way, good luck! I've used Angular for a few projects now so far and I love it.I may only be a few steps ahead of you, but here are some other things to think about:

What is your server technology and IDE of choice?  There are some variables in there too.

I've been looking at angular-seed and ng-boilerplate and I think I'm going to take lessons from their structures and use my own template instead.  This is due to the other components I want to use that don't quite seem to fit in as nicely.

Also take a look at breezejs for data management.We started an Angular project from scratch. Instead of using something like Require, we ended up using the Closure compiler to make JS builds for the team - this enables us to serve both debug-level code, as well as aggressively compressed/optimized versions as one JS file.

One of the main lessons I've learned from my 3 month crash course in Angular is to not be afraid to aggressively refactor.  Angular is awesome if you're being Angular in your abstractions and discipline. The minute that starts to leak (e.g. DOM manipulation in a controller, business logic in your markup), things can start smelling bad.  Don't get too reliant on event passing, either.  Whenever you start to write $emit or $broadcast, ask yourself, ""do I really need this?""

To avoid scope issues, get into the habit of writing stuff like:

    MyCtrl = function($scope) {
        $scope.firstName = ""Robert"";
        $scope.lastName = ""Smith"";
    };
    
as

    MyCtrl = function($scope) {
        $scope.name = {
            first: ""Robert"",
            last: ""Smith""
        };
    };

This is to avoid issues when attempting to access the variables from a child scope.  You force Angular to resolve them to the appropriate scope before writing.  i.e. `$scope.lastName = ""John""` from a child scope will create a `lastName` attribute on the child scope, not modify the parent's.

Finally, don't be afraid to write your own directives.  It's actually pretty easy, and can save a lot of trouble when it comes to implementing custom behavior within your application.

Good luck!This is a good article:

http://ruoyusun.com/2013/05/25/things-i-wish-i-were-told-about-angular-js.html"
2013-09-24 15:35:09;AngularJS testing in the wild survey.;
2013-10-01 20:39:13;How to integrate AngularJS with Rails 4;
2013-10-01 16:51:04;Consuming REST APIs with Restangular: The AngularJS way;Many of the slides appear black to me.Funny! We just posted a new post entirely dedicated to Restangular http://www.ng-newsletter.com/posts/restangular.htmlDoesn't work at all on iPhone unfortunately. 
2013-10-01 16:42:26;Restangular on Angular;
2013-10-01 04:11:06;New site dedicated to Learning AngularJS;What's wrong with egghead.io?but... it's not build with AngularJSWhat? My IP is blacklisted? I cannot acces this website. :-(
2013-09-30 14:15:17;AngularJS Video Tutorial: Using angular.bootstrap to Initialize Your App;
2013-10-08 23:13:22;Preventing Navigation in an AngularJS Project;Thanks for this! We could reuse this almost identically in our application.
2013-10-08 19:31:30;Building a very advanced web-based music player. If you're into large music collections and archiving, we could use your help.;"do you have the ui designs done? what kind of help are you looking for exactly?
"
2013-10-08 17:10:59;ng-trans.css - plug-and-play transition for AngularJS;
2013-10-08 17:09:14;Angular Animation - Under the Hood;
2013-10-08 11:58:43;directiv.es : A bunch of AngularJS. With examples!;
2013-10-15 19:42:13;Creating Extensible Widgets Part 1: jQuery to AngularJS in 30 seconds;
2013-10-15 16:04:21;The Wonderful Wizard of AngularJS;
2013-10-15 13:22:40;How To Unit Test An Angular App;
2013-10-15 13:22:03;Logging Client-Side Errors With AngularJS And Stacktrace.js;"Great article as always!
"
2013-10-15 13:21:27;Advanced Testing and Debugging in AngularJS;
2013-10-22 17:37:54;Favor single http request over chained promises?;"When possible, one big call is better than 10 small calls.  It isn't always possible but you should strive to make your calls chunky not chatty.Early optimization is the root of all evil. 

Make it correct then make it fast. Wait until it becomes a problem, then solve it.  There have been a few times when my team has gotten into this type of debate/discussion, done a premature optimization - then later on another choice that we made would of solved the initial issue in a better/different way anyways. 

One thing to consider, is how frequently you are needing to all say - findAllFilters, and how often the data returned from it will change given the same input parameters.

For example - if you call it with getSeriesAsync(1,2,3) - will it always be returning the same set of data (more often then not). Then instead of worrying about doing everything in one big call, could make smarter use of caching - call it once with those parameters, cache the results - next time the service gets called with the same parameters - pull it in from the cache w/o going back to the server.

I do think that there can be some merit to doing everything in one big chunk/call, but still leaving the flexibility to call it on an as-needed basis.  

One of the solutions we have for loading many related/similar chunks of data at once, (ie: code-value lists), is the ability to call a service like getLists(['ListName']), or, getLists(['ListName1','ListName2','ListName3']).

Another thing to consider - what is the problem you are actually trying to solve? The dislike of how 'chatty' the application is just from a 'it rubs me the wrong way', or - are you getting annoying data-flicker-in. ie: The screen/template loads, then parts of the screen populates at different times as the data gets returned from the server?

A more appropriate solution if that is the case could to be using resolve on your controller to resolve the data before instantiating the controller and displaying the template. Then, if you are still having performance issues/disliking the 'chattiness' of the application - consider wrapping it up into one big call later on.

One challenge that I find from a more conceptual standpoint, is trying to draw the line at ""what should be a service concern vs what should be a client/consumer concern"" - on older applications where I work at, I've seen the back-end get bastardized in so many ways to meet the concerns of the client/screen that a big inconsistent mess has sprouted up, and it can usually boil down to 'the person responsible on the front-end was being lazy and didn't want to make an extra service call to fetch related data - nagged the person responsible for the back end enough for them to either include it, or to make yet another service method available to get the data with this new thing included"" and it gets messy."
2013-10-22 16:30:44;Angular Facebook Utils;"I'm implementing security in Angular right now, and I would avoid a single-provider authentication library like the bubonic plague.  No downvote because it's always interesting to see new angular code right now!

The best I have seen on the client-side is https://oauth.io/, and I am using http://passportjs.org/ with node.js (but not Express).  I went server-side because

I really do hope that the angular team addresses security in a future release.  I just posted a semi-roadmap to this subreddit and nowhere in it did they mention the ""s-word""."
2013-10-22 16:30:04;What you need to know about Angular SEO;
2013-10-22 13:23:52;GoAngular - build realtime, collaborative apps with AngularJS and GoInstant;GoInstant is not very clear what the price of their service is. Which for me translates to expensiveAnyone that's tried this out have thoughts on it versus Firebase? Or other alternatives?
2013-10-22 02:11:38;Cards for Humanity: a fast-paced online version of the popular card game, Cards Against Humanity (built in Angular);"Nice. Had some fun in the game. Good work!
This is really, really cool. Wasted about twenty minutes on it, congratulations!Had fun with that, thanks!"
2013-10-29 20:28:52;Testing promises with $q in Jasmine/Karma;"The problem is not that $q is not able to be injected, but that $q does not have a flush() method - I suspect the error message in your console reads ""$q.flush is undefined"".  Easy mistake to make.

If you post some more of your code (showing the actual usage of promises in your controller) I'd be happy to help you get it right.

Alright, they responded with an updated plunker. http://plnkr.co/edit/rbaS9U8z977Gyyk67cgg?p=preview

The issue was that we were instantiating the controller before we navigated to the state.

Now that we know the reason, it makes total sense to me, not sure why I didn't see it last night :(


edit: If you were trying to access the state data outside of the 'ui-view', I would use a service for controller to controller communication.

edit: I was also kind of a dick last night, sorry about that."
2013-10-29 16:47:03;Building a Google Calendar Booking App with MongoDB, ExpressJS, AngularJS, and Node.js – Part 1;"Cool article, also bets last name EVER.Cool article. I am just not the appeal behind doing this in node. You cans probably do this in python without all that callbacks and whatnot.
Btw I am node and python dev and I use node heavily but for real time apps only e.g messaging between clients, push notifications, live editing which are all parts of EdTech tools for students. 
Good article nevertheless."
2013-10-29 16:46:26;Rapid chrome app development with angular;
2013-10-29 14:10:43;Conditionally Mock $httpBackend;Make sure you add a task to your build process to strip those mocks out for production, otherwise your app will break horribly if anybody gets boxed in an iframe and tries to visit your site.
2013-10-29 11:19:11;Have you switched to protractor yet?;"I tried it and did not like it. But I did switch to using Selenium Webdriver for my e2e tests and am really liking it. (I code my webdriver tests in Go, not JS)No yet.

I use AngularScenarioI'm interested to see what the reaction is at ng-conf when the team announces they're moving to protractor (I'm pretty sure this is the case) for e2e testing. Karma does have it's issues, but it's nice to have a test runner that does unit + e2e by simply switching a config. "
2013-11-05 16:49:32;Using the AngularJS FormController to control form submission;
2013-11-05 16:13:24;UI-Router presentation at CincyNg meetup;
2013-11-05 14:34:01;A Glimpse of Angular.js $scope via Example;
2013-11-05 14:33:42;AngularJS: Referencing the parent scope in a directive;
2013-11-05 14:32:20;AWS JS SDK - The Canonical Angular Guide;
2013-11-12 06:43:42;"To ""controler as"" or not to ""controller as""? That is the question.";"yes - use it.

The point of angular as far as I see it is that you use controllers to provide functions that you may need and actually glue together the code within the template.

Doing the $scope.ctrl = this trick means that the controller has to know that it should be exposed on the scope. Using the ""controller as"" instead means you're working on the template and now you want to bring it in.
"
2013-11-12 04:35:51;Boobs with angular.js;....why is it telling me that my phone has a virus and I need to install something from the play store? What the fuck. I just want boobs. highly impressed that you deeplinked the boobs:D haha cool maanI'm not 100% sure of what you're trying to accomplish with your project... but hey, boobs!
2013-11-11 20:11:05;[Angular-UI] When to use modules vs states?;"Presumably you would be able to add or remove modules without breaking things or have the module all on its lonesome and still work, however your example is a bit too fine grained for this since if you remove 1 of the modules your app does break.

With your example I probably would use 1 module for all of the auth stuff (login, logout, etc) and then you would have a fully encapsulated auth module that could be used in any app you need auth.

I think of a module as an atomic unit, where pulling something out may break functionality of the module, but pulling the module out of the greater app does not break the app."
2013-11-10 19:34:38;Using the AngularJS Package for Sublime Text Wednesday, September 11, 2013 11:05 AM by Michael Does anyone know how Sublime Text compares to the Jet Brains Web Storm AngularJS plugin?;"Sublime text is free, unlimited trial. Save your 70$ and go with that. There's a huge plugin ecosystem that with a little fine tuning can be made equitable to the built in helper in web storm. Sublime text plugin is pretty good and it suffices for me. I like the autocomplete syntax. I've never tried JetBrains.

Here are some examples:

    
    controller('NameCtrl', ['$scope', function ($scope) {
    }])


    directive('name', [function () {
      return {
        restrict: 'A',
        link: function (scope, iElement, iAttrs) {
          
        }
      };
        }])    

    angular.module('moduleName', [])

    
    preface: I primarily use vim. before, I primarily used sublime.

There are two key Angular developers that I saw use Webstorm to their full potential for Angular development: Misko (the creator) and the egghead.io guy, John Lindquist. They sparked my interest. After using it, i can say if I had to pick between the two for developing an Angular app, I would most definitely go with Webstorm. A few key features that makes it for me are the live debugging with the JetBrains browser plugin, seeing the page update as I type in the IDE (albeit you can achieve the same thing with a grunt task and livereload), and the support for TDD with karma.

To not make this entirely 1 sided: The github support is marginal, at best. Branching and remotes were a pain. I ended up giving up and managing the repo files through the command line.I love WebStorm. It does everything but somehow still feels lightweight. Shortcut keys galore. They have a free 30 day trial, give it a shot.   Jet brains all the way because the advanced introspection will help you identify problems before you run tests or check the browser. 70 vs hours saved per month. "
2013-11-10 07:11:42;How do I convert an object returned with $resource into an array?;"[rtfm](http://docs.angularjs.org/api/ngResource.$resource)

*: it's mentioned multiple times in the official docs.You should use yourResource.query() to make it return an array. "
2013-11-19 23:32:11;Building Models in Backbone and Angular;
2013-11-19 21:11:15;Adding Config to your AngularJS app;"Like the comment on your article says, making a service probably would have been a better implementation.

Also, angular-seed is terrible for any non-trivial app."
2013-11-18 10:20:24;Parent directive with ng-repeat inside;Check out the answer [here](http://stackoverflow.com/questions/13471129/angularjs-ng-repeat-finish-event). You can add a directive to detect the last element in ng-repeat, and then you can notify your directive from there using some event.
2013-11-17 13:17:35;Are there any good reasons to start with the default router found in Angular before switching to the much talked about UI Angular router?;"From experience I'd say don't use the default. We did and it's part of our technical debt. It's holding us back from doing things we need to (thus part of our debt). If you're comfortable with the idea of the UI router and already plan on using it later, why wait? I don't know of any advantages to using the default router.I can't see a reason that you must know the Angular router. If you ever do need to know it, it's not terribly difficult to get down. It's certainly one of the easier parts of learning Angular.I'd say just go with ui-router. It might be worth rolling out a few demo/proto-type apps to get your head around how to use it properly before trying to build a real project with it. 

I'm talking like '2 days worth of fiddling on a weekend toss-away project'. I've been building a rather large app with Angular over the last few months, and we recently made the switch to the ui-router and have been very happy with the change. 

Our older pages that were sort of retro-fit to play-nice with the router are a bit messy and need some more refactoring, but the areas that have been built with it in mind are better off for it. Once you get your head around nested states / multi-views & named views, it does change how you think about building your pages, and generally for the better.

If you plan on eventually using, I'd say start using it now.Someone can correct me if I'm wrong, but I believe UI Router has less support for view animations. I think you can do it, but it's more hacky.I don't use either router.  I've found it much easier and robust to roll my own state and view management.  I have two methods: load_state_from_url and save_state_to_url and I hook them up to the locationchangesuccess event and a watch on my ui_state object.

I never find myself ""fighting the framework"" trying to figure out how to get it to do what I want.  State changes are typically done by manipulating properties on ui_state directly, semantic events or methods exposed by the controller.  

I don't use href in my links.  My use case is an app rather than content and so I don't need every button to be a valid link.

I will say that ui-router has come a long way since its early beginnings.  In particular the ui-sref directive solves the worst problem with routers.  It's horribly brittle to have the URL structure spread between the route declarations, the views and the controllers.  I'll be trying ui-router in some test projects soon."
2013-11-16 17:40:42;What's the best/fastest/practical website to learn JS? (in one weekend);"Not trying to be dick but you have no chance of success.  Do your best to get this angular seed project running over the weekend: 

https://github.com/angular/angular-seed  

If you get that running, you'll be on your way.  Not very far on your way, but it's a start.
[deleted]JQuery isn't a language. It's a Javascript Framework same as Angular JS. If you know JQuery then you can do AngularJS you just need to learn the calls and how the framework pieces together. It's going to take you longer than a weekend really though I would start with the AngularJS website and then just search ""learn Angular"" on this subreddit. If you want you can try to learn NodeJS later and have a full stack written in just Javascript.For something hands on, go through the tutorial on the AngularJS site: http://docs.angularjs.org/tutorial

This will hold your hand as you gradually build out a simple application. Note that Angular is pretty deep. I know that you said you don't like books, but I *highly* recommend making your way through the excellent book **Mastering Web Application Development with AngularJS** by Pawel Kozlowski and Peter Bacon Darwin. This has been the best resource I have found to date for explaining the how's and why's of Angular.I found [this](http://www.youtube.com/watch?v=i9MHigUZKEM) to be a nice, though simplistic, jumping-off point.  There's a lot more to learn to operate well, but taking it slow at first makes everything go faster later."
2013-11-26 22:33:00;Routing question;"Ok, [here](http://plnkr.co/edit/ujwoOEn45YqjJMF2OwHi?p=preview) is a fork of your plunker.

edit: Here is what I did,

First, I added a link to the 'games' view. Click that and it will take you to a list of all your games. I did not implement the 'game' view, since I think you can figure it out from how I did 'games'. 

Look in the source now, you will see that I removed your 'mainController' and added a service, 'JsonSvc', and a controller, 'GamesCtrl'. 'JsonSvc' requests your games object and returns a *promise* <- this is important.

In your routes, I added the 'GamesCtrl' as the controller for the 'games' view. I also added a 'resolve'. 'resolve' is a map of things you want to inject into your controller. One of these things can be a function that returns a promise. So, we can make a function that returns 'JsonSvc.get()' because it returns a promise. 

In your ""GamesCtrl', I injected '$scope' and 'games', you add your map of resolves by placing the keys after all your other stuff (in this case '$scope'). Now you can set '$scope.games' to this 'games' object. Anything in resolve is 'resolved' or 'rejected' before the routeChangeSuccess event, so your http request has completed by the time the controller gets 'games'.


Let me know if you have any questions.

Something you might want to think about, that is more advanced, is integrating with IndexedDB, so that you can just store the games in memory and query it. Something like [this](https://github.com/webcss/angular-indexedDB) maybe. I haven't actually done anything like this before but it would be a cool little exercise. 


edit: I decided to make a [fork](http://plnkr.co/edit/cz8WpZujqfgtosYvbNPV?p=preview) with angular-ui-router instead of the built in ng-router. I would also suggest upgrading to angular 1.2 now that it is actually released. This allows you to leave out the ng-router module and replace it with angular-ui-router."
2013-11-26 19:14:15;Excellent series of testing AngularJS with Karma and Jasmine by NeoSavvy.;
2013-11-26 12:49:07;How do I exclude angular code generation in Yeoman ?;"Abramz*

I am not sure you understood what I said. Here are some (not all) of your options, based on my advice you quoted.

1. Use angular-generator, which is based off of the angular-seed project. 
 
  Advantages: you a nice starting point and the ability to generate your files. This cuts down on start up time and you don't need big snippets. 

  Disadvantages: until btford switches angular-generator to the ng-boilerplate seed style, it does not scale to non-trivial apps. Yeoman is hard to customize unless you dig deep and really learn it. Angular-generator is pretty complex and a bit of a pain to customize.

  Note: if you do go this way, and are using WebStorm, [this video](http://www.youtube.com/watch?v=KBueufmUgdw) by John Lindquist (egghead.io) will help you integrate yeoman with WebStorm.

2. Do not use yeoman. This means you can use a seed (angular-seed, ng-boilerplate, your own) or not if you don't want, and you can use snippets in the place of generators. 

  Advantages: since you aren't stuck with 1 way to structure your app, you can get better structure than angular-generator. You can reuse your snippets. 

  Disadvantages: You have to make or find snippets, you have to make or find a seed, you have to make or find a good Gruntfile or other build tool configurations.

3. Make your own generator. 

  Advantages: just the way you like it. 

  Disadvantages: you want to write your app, not a build tool, this will take a lot of time to get right and not a good idea if you aren't going to be getting your mileage.


disclaimer: these are my opinions and are no way ""the word of God"" or the way you have to do it.

You can also PM me questions if you want.

edit: spelling"
2013-11-25 22:11:46;Practical AngularJS Part 1 – Introducing AngularJS;
2013-11-25 19:36:23;An easy introduction to AngularJS;sahp
2013-12-03 18:17:05;25 days of Angular - Day 3: Preventing flickering on Angular;Kind of surprised ng-bind wasn't listed as a solution to prevent flickering. I often prefer this method over ng-cloak.
2013-12-03 04:47:27;Videogular | A video player for AngularJS;
2013-12-02 19:05:11;25 days of Angular: Day 1: the short guide to services;I found this very useful, thanks!Sweet. Just starting an Angular Project, looks like it'll coincide with these great tutorials. Always appreciated :) !
2013-12-02 19:04:37;25 days of Angular: Day 2: A short guide to Routing;
2013-12-02 08:24:58;Dumb question, UI-router features over default router;"Some of the benefits I like with it:

- Nested states
- Multiple views, and named views
- Able to reference states instead of URLS for navigation - can make things less brittle if you decide to change what the URL should look like
- Can share data between states and their children
- Can have more granular control over resolving things
- If setup right, can have more control over when a controller/view gets destroyed and re-created.

Sample scenario for using tabs.

Template looks something like:

    <div class=""tabbable"">
        <ul class=""nav nav-tabs"">
            <li data-ng-class=""{ active : $state.includes('TabDemo.Core') } ""><a ui-sref=""TabDemo.Core""><i class=""fontello-icon-doc-7""></i>Core!</a>
            </li>
            <li data-ng-class=""{ active : $state.includes('TabDemo.Party') } ""><a ui-sref=""TabDemo.Party"">Party</a>
            </li>
            <li data-ng-class=""{ active : $state.includes('TabDemo.Bill') } ""><a ui-sref=""TabDemo.Bill"">Bill</a>
            </li>
        </ul>
    </div>
    <div class=""tab-content"">
        <div class=""tab-pane active"">
            <div class=""panel"">
                <div class=""tab-pane-control"">
                    [this is on all tabs]
                    <div ui-view=""header""></div>
                </div>
                <div class=""panel-body"">
                    <div ui-view=""activeTab""></div>
                </div>
    
                <div class=""panel-footer"">
                    [this is on all tabs]
                    <div ui-view=""footer""></div>
                </div>
            </div>
        </div>
    </div>

Then with the state - each active tab, can also be linked. I can now have URLS to

* #/SomeSection/123/Tab1
* #/SomeSection/123/Tab2
* #/SomeSection/123/Tab3

When setting up the states - on the top level for 'SomeSection' - I can setup stuff in the resolve that I need for each tab, or maybe just the first tab - but that resolve data is then available to all of the child ones.

Also, when going from Tab1 to Tab2 - the controller/template for the entire screen doesn't get destroyed and re-created, just what is needed for the child tab that is affected.

I can also specify markup for things like the header/footer that would be available across all tabs, but with using named views - if I wanted Tab 3 to have different information in the header/footer - this is very easy to accomplish. 

Then, lets say - on Tab 3, I want to be able to link to a child-entity on there, I could have

* #/SomeSection/123/Tab3/view/SomeChildRecordID

I then have quite a bit of control over what controllers get affected by this, what I want my URL to look like - I can now easily deep-link to this object. 

Previously, if I wanted to have something using the default router, the controller that handles 'SomeSection/123' - the entire thing would get destroyed/re-created each time the parameters after it change, unless I used query-string parameters and set to 'reload on search' to false, but I still don't get the benefits of multiple views/named views.

It becomes a big mess of <div data-ng-show='someExpression'> and just became a bit of a mess, and crazy stuff like

* #/SomeSection/123?activeTab=tab3&someChild=id&action=view 

I have done the above using the normal routing + the Angular UI tabs plugin, and things quickly became a mess.

Since moving to UI-router and cleaning things up, must say - I like it a lot.
http://angular-ui.github.io/ui-router/sample/#/

http://egghead.io/lessons/angularjs-introduction-ui-router

https://github.com/angular-ui/ui-router/wiki/Quick-Reference

http://joelhooks.com/blog/2013/07/22/the-basics-of-using-ui-router-with-angularjs/

http://www.ng-newsletter.com/posts/angular-ui-router.html



Go forth and learn my friend.Excellent question! I just started a little project that is heavily based on ng-boilerplate and I was wondering the same thing.The pre-beta warning is kinda scary. Do people really use it in production? "
2013-12-10 19:29:43;25 days of Angular - Day 10: 25 percent off a whole year of SEO services from Brombone;
2013-12-10 18:30:26;ng-splitter: Simple pane splitter for angular.js;"I see that you have taken a splitting approach (which is to say each pane gets subdivided into n children. That is very cool and is just like the approach taken by: https://github.com/angular-ui/ui-layout

I've been working on a different approach to replace the dependency on jQuery's ui.layout in Plunker. My WIP is can be seen at: http://embed.plnkr.co/xpNMrTXLaP7PduU2OJbg/preview

Key differences:

* Reliance on a single directive 'fa-pane'
* A pane can attach to one of the 4 borders or the center
* There can be multiple panes of each type (except center)
* Min, max, target sizes in % of total, % of remaining or in pixels
* Panes are togglable
* Pane order and anchors can be reconfigured dynamically to radically change the layout

One challenge I faced is that dragging a pane containing an iframe will not work reliably unless you put some sort of masking element over the iframe during drag.

Keep up the good work.
"
2013-12-09 21:51:17;Restangular 1.2.0 released. Now with Promise Unwrapping support for Angular >= 1.2.0;Aaaannnnddd I'm already out of date.  I could've used this exactly 24 hours ago. 
2013-12-09 20:02:48;Angular Models;
2013-12-09 18:10:11;25 days of Angular - Day 9: Creating a real-time presence system;"Would've been more interesting without Firebase. All this is is a service and controller wrapping a provided JavaScript object that does all the heavy liftingFirebase really are trying hard to get their marketing into every nook and cranny that they can find. Unfortunately, since they revised their pricing, it is a non-viable option for most if not all use cases.

For the user counts and the associated prices, you would be silly to pay that much when you can easily implement comparable functionality with a few simple node.js libraries."
2013-12-17 18:45:44;25 days of Angular - Day 17: Build a real-time OS dashboard with Pusher;These tutorials are great.  Keep them coming, please.
2013-12-17 18:19:42;Simple CRUD using Angular, Bootstrap & Node;"Thanks for this!thank you. great work! 
Looks like I know what I'll be doing over the holidays.

Any other tuts you could recommend to enhance upon this?Please upload source code this tutorials on Github :DIs anyone else tired of seeing ""simple crud"" apps day after day? We get it, it's easy to make a small app. How about throwing some complexity into the mix!"
2013-12-16 19:20:17;AngularJS Cascaded Selects;
2013-12-16 18:24:20;25 days of Angular - Day 16: Announcing AngularFire v0.5.0;
2013-12-16 04:04:58;Authentication in Single Page Applications;"This is a nice article. One of the things I have been looking to find are how people integrate Single Page Applications with a REST services and  web socket communication.

The issue I am dealing with is securing the socket communication and handling the security of a REST service via some type of token...Why is the $timeout promise necessary in checkLoggedIn here since the $http.get is also a promise / asynchronous?"
2013-12-24 17:49:30;25 days of Angular | Egghead.io -- Directives in 5 minutes;
2013-12-23 20:21:54;25 days of Angular | Win Firebase Credit and raffle;
2013-12-23 12:39:44;AngularJS Hub;
2013-12-22 23:02:18;angular-ads: a directive that makes ads out of affiliate links;
2013-12-22 18:58:34;25 days of Angular | A Few of My Favorite Things: Isolated Expression Scope;
2013-12-30 23:58:51;Implementing workflow in AngularJS - Is this the way, or is there a better?;I like the angular-http-auth module https://github.com/witoldsz/angular-http-auth we used it for our application to great success. 
2013-12-30 20:02:20;Handling keyboard interaction on an Angular app: An Angular Mousetrap wrapper;"I figured someone would wrap that library for Angular.  :-)

Three Questions / Comments:

1. Is there any way to use [Mousetrap's prevent default](http://craig.is/killing/mice#api.bind.default) with the module?
2. Would it make sense to pass the event object into the apply?
3. It looks like this requires Underscore or Lowdash, is that correct?  If so, you should make note of that.  Alternatively, since it's only a single function call being used, it might be better to replace that with the raw JS:

        for(key in mousetrap) {
            if(mousetrap.hasOwnProperty(key)) {
                Mousetrap.unbind(key);
                Mousetrap.bind(key, applyWrapper(mousetrap[value])); 
            }
        }

    It's not really that much bigger, and reduces dependencies.

It's nice to see these sort of little add-ons for Angular!shouldn't

    <div class=""pager"" w-mousetrap=""{left: previousPage, next: previousPage}"">

look like

    <div class=""pager"" w-mousetrap=""{left: previousPage, right: nextPage}"">

The first way just doesn't make sense and I don't know angular enough to know better."
2013-12-30 17:10:31;Routing directly to data...?;"Sorry if that's not the issue here, buy after reading the other answers, I think that what you are missing here is to enable html5mode in the location provider ( http://docs.angularjs.org/api/ng.$locationProvider ). Without that, the angular route will be given by whatever is after the hash. In HTML 5 mode, the route with be decoded from the location path.Angular is a really powerful front end tool. My advice would be to put all templates stuff into angular using partials, and redesign your node back end as a simple API returning json data. That's how Angular is meant to used.Now you have separate routs in the client, Angular, and on the server, Express. What I would do is add templates on the client to display data sent from express. Or do you want to render the views in express?Have you figured this out? I cant tell from the comments..but what you want, is what is called a SPA(Single page app) so the client handles the ""URL Routes"". A URL Route in angular, on its own, doesnt communicate with the server, its all client side.

On first page load to where your application is hosted, is the entire javascript app. There should only be one actual ""page render"" route accessed. After that angular does it all.

When you're saying you are getting stuff like
http://localhost/data/1234#/data/1234  or http://localhost/users/1234#/1234 

This does not sound like a single page app. Would I be safe to make this assumption, each of your express templates that send to the clients have the exact same angular JS loading?"
2013-12-30 07:07:09;Angular.js example application;
2013-12-30 05:09:20;Build Podcast | 056 AngularJS;
2014-01-07 22:50:44;Cookies vs Tokens. Getting auth right [crosspost from proggit];"I think he really mixes things. Cookies vs Tokens is simply about the way of transmitting the authentication value. Therefor the following points are absolutely nonsense:

""Stateless (a.k.a. Server side scalability): there is no need to keep a session store, the token is a self-contanined entity that conveys all the user information. The rest of the state lives in cookies or local storage on the client side.""

Cookies can just be as stateless as tokens, and tokens can be just as stateful as cookies.

""Decoupling: you are not tied to a particular authentication scheme. The token might be generated anywhere, hence your API can be called from anywhere with a single way of authenticating those calls.""

Here the same. It just depends on WHAT you send within your cookie or token.

""Performance: we are not presenting any hard perf benchmarks here, but a network roundtrip (e.g. finding a session on database) is likely to take more time than calculating an HMACSHA256 to validate a token and parsing its contents.""

It does not make a different whether you send a cookie or a token (besides a few bytes overhead with cookies). What you do with the information on the server side has nothing to do with the way of transmitting.

""Login page is not an special case: If you are using Protractor to write your functional tests, you don't need to handle any special case for login.""

And again. You can return a cookie and token within a login page or not. It's not bound to one method.I was looking for just this thing!

Now, if I could find a way to easily use tokens with web sockets..."
2014-01-07 21:32:20;Is there a way to initialize Angular $scope state from DOM?;"What you probably want is to use `ng-init` for this, until you can more cleanly separate the defaults into a more maintainable state.I'm also sort of new to angular, but you can call angular controller code from a DOM change event, e.g.:

    <input type=""file"" name=""file"" ng-model=""state.filename"" onchange=""angular.element(this).scope().uploadFile(this.files)""/>

I'm guessing that the above can be used instead of ng-change because the files attribute is coming from the DOM, but I might be wrong.  Perhaps using ng-change would work just as well.

Note that state.filename is just our internal variable scope, e.g. scope.state.filename

"
2014-01-07 18:24:58;AngularJS Form Validation;Your site looks *amazing*!  What technologies/plugins are you using?I really dislike validation that's too eager to inform you that you're wrong. From a development point of view it makes sense that the ui updated to the current state of the form. From a ux point of view it's highly annoying to be told I'm wrong before I finished entering data. Yes I know the e-mail field is incorrect, I'm still busy entering data.You should use the **for** attribute in labels. That way, when you click on the label it will jump to the corresponding input element. The UX part is something I miss in every form validation how to. I personally also dislike moving UIs very much. I type something, and suddenly the whole interface shifts and moves, just to show an error message. I continue typing and everything moves again to make the message disappear.
2014-01-07 13:45:44;Add a Back End to Your Angular App With Firebase;"Would be nice if this would persist to a MSSQL db.Firebase can be used as a REST API without the real time 3 way data binding as well. It's not really why it was made and pretty much all the stuff out there is focused on the real time aspect, but if you don't need real time it is available. 

https://www.firebase.com/docs/rest-api-quickstart.html"
2014-01-07 03:44:59;Step by practical step app in AngularJS;
2014-01-14 20:00:43;Flexible directive names in AngularJS;
2014-01-14 18:09:32;Practical End-to-End Testing with Protractor;
2014-01-14 16:36:37;Ask the AngularJS Team a question, answers streamed during ng-conf this week. (x-post from r/javascript);
2014-01-14 16:01:00;Flattening Promise Chains;
2014-01-14 16:00:11;Angular Structure: Refactoring for Growth;
2014-01-21 19:24:39;Embedding Angular in the physical world;"This is a fantastic tutorial with Arduino / AngularJS. Seriously, take a look at the whole thing. The code on github is well documented and very easy to understand.

I definitely got some interesting ideas for some HTTP projects from this tutorial!"
2014-01-21 18:53:20;Mock Unit Testing an AngularJS Local Storage Service with Karma and Jasmine;
2014-01-19 03:26:28;execution context that persists across async tasks with zone.js - ng-conf 2014;
2014-01-18 00:01:44;A Practical Guide to AngularJS Directives (Part Two);"A great set of introduction articles on Sitepoint from Sandeep Panda around Angular directives. The [full index](http://www.sitepoint.com/series/a-practical-guide-to-angularjs-directives/) is worthy of a bookmark IMHO.

Breaks down one of the more complex Angular topics for the novice into easy to read/digest language.Awesome post.  thanks for the information."
2014-01-17 18:39:45;Firebase hosting (beta) - apparently is free;"Just tried it and it's stupidly easy get it all up and running then deploy an app. Very cool!But the firebase service itself isn't free. It is ridiculously expensive when you factor in how few connections it allows.Firebase.io is bad ass.  I ran through the fantasy FB tutorial and was pretty amazed.  Damn it's a good time to be a developer.
Have any of you tried implementing something like firebase with your own backend and DB? I really like the idea of transmitting live data between multiple parties, but I really don't want my data getting into the hand of a third party.
After reading a bit concerning the topic I think socket.io in cooperation with a few technologies could work out and shouldn't be all too complicated to implement. Anyone have prior experience on anything like that?"
2014-01-28 19:28:05;Making Angular SEO Friendly with Prerender.io;
2014-01-28 15:45:39;Building an AngularJS Dialog Service;"I ended up rolling my own by copying the pattern if not the specifics from the angular-ui bootstrap project.  The basic idea of having a modal service that returns a promise is something everyone should learn.  

Use the force, read the source!  I've learned a lot by reading the angular and angular-ui source.Hmm this is an old post. I'm not sure whats wrong with the current ui.bootstrap $modal service. Infact I find $modal to be better than the old $dialog."
2014-01-28 01:44:37;Combine two controllers (my noob question on SO);
2014-01-27 16:48:46;[Help Request][Noob] $http.post not working like I expect it to;"You're not showing us any code. That is what you're doing wrong. Preferably in a fiddle or a plunker (Use google, if you don't know what it is).Angular submits data differently and I bet that's what's going on here.  Try adding this to your PHP to put angular's JSON data back into $_POST:

    //handles JSON posted arguments and stuffs them into $_POST
    //angular's $http makes JSON posts (not normal ""form encoded"")
    $content_type_args = explode(';', $_SERVER['CONTENT_TYPE']); //parse content_type string
    if ($content_type_args[0] == 'application/json')
      $_POST = json_decode(file_get_contents('php://input'),true);
    
    //now continue to reference $_POST vars as usual

Stackoverflow question: http://stackoverflow.com/questions/11442632/how-can-i-make-angular-js-post-data-as-form-data-instead-of-a-request-payload/19870028#19870028You can probably do this on your PHP:

$data = json_decode(file_get_contents(""php://input""));
$data[ 'test' ];

Angular will send your parameters as application/json by default."
2014-01-27 07:13:35;angular-paginated-resource: clean server side pagination via headers;WOW! this is exactly what I was looking for. I didn't even think to use the http headers!
2014-02-04 23:01:23;AngularDart — Superheroic MVW Framework for Dart;"nice to see that angularDart has now a dedicated landing page. I'm really looking forward into its future.I'm excited for Dart and AngularDart. I gave a presentation on both at my local meetup and REALLY like what the Dart crew has done with the platform. I hope it takes off Just when i rewrote my project to angularjs they show me this? SighJeez. What are these childish adjectives? ""Superheroic""? Like if you use it you suddenly become a Hercules or something?"
2014-02-04 19:54:44;ngAnimate preventing app from displaying;Turns out the version of Angular and angular-animate weren't the same. This was the cause of the issue.
2014-02-04 19:34:27;My love affair with AngularJS;"I have a new (standalone) single page app for enterprise that uses Angular and replaces clients thousands of times larger. I love it there.

What scares the crap out of me is how e.g. Wunderlist will lose state and the app stops working. I am working on a big side project that is using full on Angular (mean.io seed) and I am somewhat terrified of that when I get too far along in development to switch"
2014-02-04 18:19:43;Creating a Visualization App Using the Google Charts API and AngularJS;
2014-02-03 18:25:03;Please help. IE8 refuses to start App.;Are you including es5 shim and json3?  If not, try adding those and see if your problems disappear.ItS going to be hard without seeing the code but make sure you are only using angular as attributes rather than DOM elements and make sure your ng-app is both an attribute and a class Check the page render version in IE. My app never shows up on IE 10 because it keeps rendering the page using IE7. I haven't figure out why yet but I don't really care right now. 
2014-02-11 22:31:08;Interactive AngularJS Tutorials (Found on /r/webdev);"I really like the concept of having a live workshop in a tutorial for AngularJS, and this is nicely executed at that, but the tutorials themselves are misleading and confusing.

Describing what kind of code your user should write isn't enough compared to actually showing the code, and this often is not described very well. The author seems to be okay at English, but there's just enough of an obvious gap that communication is a little rough in describing what we're supposed to do, which seems to move a little quickly as well. 

For example:

> Remove the ng-app attribute and set it id with value foo. Invoke the method .bootstrap of the AngularJS global object - angular with first argument the root element of your application and second element empty array. You can use jQuery's CSS selector since jQuery is included in the page.

I was not clear that this meant change ""<div ng-app>"" to ""<div id='foo'>"" until I read it a few times. It's just not proper English. 

Also, all we had done in this tutorial up to this point was make a single div with the ng-app directive in it--no Javascript or intro to AngularJS architecture/concepts--and now we're talking about AngularJS global object and .bootstrap, root element of an application, etc. As a novice I would have no idea what I'm supposed to be doing, and just bug out of the tutorial.

Anyway, this is a great site, but I think maybe more work on the tutorials, or outsourcing them, will be necessary for it to be useful other than a proof of concept or a personal project.I thought it was awesome. Honestly it's exactly what I've been looking for, since I learn a lot better through doing that simply reading about. Add more tutorials. 10/10 would recommend, would bang.

EDIT: that said I think /u/Switche is right in saying that it seems like English isn't the creators first language. No major mistakes that I found, but it does make it a little harder to follow. I would be willing to help you guys out if u want someone to edit the text.This is awesome but definitely needs to be a little clearer.  Also the tutorial on controller communication has a typo with ""emit new parent-message"" when they should be emit new ""child-message"" so that it can communicate with the ParentCtrl controller.

But I am digging these and will go through more of them.Good idea, but needs a more clear explanation."
2014-02-11 19:23:37;AngularJS Scopes: An Introduction by Example;What about whether I should be manipulating scope properties to begin with?
2014-02-11 18:35:35;Why AngularJS Will Be Huge;"Honestly, angular has made front end development so much more fun. I cannot recall a framework that has such an impact on my productivity, or enjoyment. Not to mention it helps so much with code organization and code maintenance. My only wish is that it existed 5-7 years ago.Great article, but ... isn't it already?I always see angular or backbone in job listings. Rarely ember. Guess which one I have experience in?I look forward to when Angular has a rich enough ecosystem of directives/widgets/plugins/etc to completely remove the need for jQuery ones, or needing to wrap directives around jQuery ones. 

It's getting there - and I've often found that I can write a native angular directive to accomplish the same functionality without needing to create a directive to wrap around an existing plugin, but one thing that some less experienced developers seem to do is freak-out that they can't use their dozens of jQuery plugins easily.  Angular UI, Ionic, etc are a good start.

After working with Angular heavily for a year, it's always a bit of the shock to the system when I need to go back and do maintenance code on older applications that is a mix of a rolled-myself framework + jQuery.  
lets be honest about that web search chart. It's just because it has a higher learning curve not because more people are necessarily using it. i love angular regardless. 


p.s. ionic framework is pretty cool too, but the docs are very sparse and some of the stuff with ui-router is still a little buggy.So this guy went to Angular conference and people there said Angular is the best thing ever? Didn't expect that.

> For managers, it means it's time to rethink which technologies your team should invest in, and what skillsets you'll need to hire for in order to build the increasingly complicated and powerful frontend apps users expect.

Explain me how this ""must know AngularJS"" is different from ""must know jQuery"" or ""must know some other library X"".

I still don't understand why IT keeps on hanging on to those keywords. This year it is AngularJS, next year node.js and 2020 it is something else. I think it is a bad idea to hire/refuse to hire someone because of some single library/framework. After all most of those you learn pretty quickly."
2014-02-11 18:30:48;Building AngularJS Bootstrap Popover Directive Tutorial;
2014-02-11 18:08:06;What could be causing this issue where the view doesn't update in Chrome?;"Apologies for a non-descriptive answer, but try setting up a $watch

edit: [read this](http://angular-tips.com/blog/2013/08/watch-how-the-apply-runs-a-digest/)try this

  {{tiles | filter:query | filterBy:allFilters.length}}


edit: there was a '(' where a '{' should be"
2014-02-18 23:49:16;New to angular. Can I get a small code check?;"Don't really see anything wrong! You have a controller which initializes the scope boolean var to display the popup and define the click event interaction function which toggles it. Both need to be on the scope. 

You can simplify this ternary statement:

    $scope.displayMenu = $scope.displayMenu === false ? true: false;

to just this: 

    $scope.displayMenu = !$scope.displayMenu;

You could also write this as a [directive](https://egghead.io/lessons/angularjs-useful-behaviors). 

If you're new to angularJS, I highly recommend reading this short article: https://github.com/angular/angular.js/wiki/Understanding-Scopes

Also, this: $scope.displayMenu = $scope.displayMenu === false ? true: false;
Can be re-written as: $scope.displayMenu = !$scope.displayMenu;angular authors say you shouldn't do any dom code in controller, so 100% should be in a directive"
2014-02-18 23:30:47;ebook: AngularJS in 60-ish Minutes by Dan Wahlin;[His video](http://www.youtube.com/watch?v=i9MHigUZKEM) has been a huge help for me grasping the basics of angular.  I think any beginner should check it out.This was the first video I watched when I began learning about angularjs, very very helpful. highly recommend!
2014-02-18 20:48:37;Adding presence and storage/playback features to an AngularJS app;"This thread has been linked to from elsewhere on reddit.


 - [/r/webdevnews] [Adding presence and storage/playback features to an AngularJS app \[/r/angularjs\]](http://np.reddit.com/r/webdevnews/comments/1yh4on/adding_presence_and_storageplayback_features_to/)


*^I ^am ^a ^bot. ^Comments? ^Complaints? [^Send ^them ^to ^my ^inbox!](http://www.reddit.com/message/compose/?to=totes_meta_bot)*

"
2014-02-18 18:26:52;How to Learn AngularJS - Your AngularJS Sherpa;Highly, highly recommend this to anyone looking to learn angularjs. It clarified a lot of the basics for me.
2014-02-18 17:10:29;Comma separated thousands for number output;"The built-in number filter will do it easily: http://docs.angularjs.org/api/ng/filter/numberHave you seen this?

http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript

Could put this into a directive.

edit: Ignore me, see callmejay down below."
2014-02-25 17:07:53;AngularJS controller inheritance;"Yes

http://stackoverflow.com/questions/18461263/can-an-angularjs-controller-inherit-from-another-contoller-in-the-same-module

But no, use a service

http://stackoverflow.com/questions/15386137/angularjs-controller-inheritanceYou really shouldn't do that even if it is possible.

If your controllers are generic or bloated enough to make you want to create duplicates, you are probably doing it wrong.

In addition to using services as /u/Newworldodour suggests, consider if some of the logic belongs in directives."
2014-02-25 15:42:01;Client ORM with Breeze service for Angular;"Been tempted to look into this a little more seriously. Awhile ago we did a big refactor of a project from our own custom ORM to Entity Framework, had discussed moving to Breeze at that time - but figured tackle one large thing at a time. 

Does seem like introducing Breeze would simplify things a little more. 

One thing I haven't been able to quite get my head around is where to introduce access control. There is a case of ""Person X can view Y type of record"", which I can get my head around of how to do with this. But the ""Person X can view Y type of record, only if X,Y,Z is met"" (correct role, record is in correct status, etc).

In older applications I've worked on, this type of logic was usually done in the stored procedures as the number of tables we had to join to figure out access was rather complex. Trying to simplify this in the new application I'm building, sort of have it working now - but not sure where it would fit in with OData/Breeze."
2014-02-25 13:43:32;AngularJs Bootstrap Components Tutorials- Part 3 – Building Tabs Directive;
2014-02-25 12:21:36;Select something ... without the extra junk. An AngularJS directive.;This is cool, I will use this. 
2014-02-25 10:44:05;Suggestions on building a code editor using AngularJS?;look at firebase, angularfire and firepad.
2014-03-04 23:47:35;'Resolve' in AngularJS routes, explained as a story;"At my last local AngularJS meetup I was advised by most everybody there to ditch angular-route and take on angular-ui-router. So far I've found it much more intuitive and useful, despite not overly different in syntax.

Is this a common trend in the community?"
2014-03-04 23:47:18;Mastering the scope of the directives in AngularJS;">By an isolated scope means, any changes from the parent scope is going to alter the directive scope and vice versa.

Great proof-reading, there."
2014-03-04 23:46:53;Real time model persistence using local storage;
2014-03-04 23:43:23;Angular JS blog series – Detailed Angular tutorial about migrating a client app from Silverlight to AngularJS;
2014-03-04 19:44:06;ELI5 Directives;"> At a high level, directives are markers on a DOM element (such as an attribute, element name, or CSS class) that tell AngularJS's HTML compiler ($compile) to attach a specified behavior to that DOM element or even transform the DOM element and its children.

That is not what you want here. I can outline directives if you're curious, but what you're looking for is a http factory. I've created a plunker for you to see how using a http call to show it on the page: http://plnkr.co/edit/tuV3737wJZrQhg3yUuZc?p=preview

You can also make the server call when the program runs instead of as a response to a click. (be sure to use ng-cloak!)
If you want conditionals you can put some if statements inside the .then

If you intend to share the result across controllers you would setup a controller to store it. I can show an example of that too.

Let me know if you have any follow up questions.It does not sound like you need a directive. When I was first learning angular, I discovered the rule, if you think you need a directive, you don't.

Only 2 reasons to use a directive.
1. You MUST access a dom element.
2. You are making a reusable control.

You almost never need to access the dom directly."
2014-03-11 17:06:45;Diving Deep with Dependency Injection;"TL;DR - wouldn't JavaScript be so much better if we made it look like Java."
2014-03-11 12:03:54;Better data handling of RESTful API with nested-resource;"Seems pretty cool to me. While I wouldn't say ""better"" than Restangular (and what's wrong with lodash? I think it's great), I'd certainly try it out for this little project I'm working on with Django Rest Framework behind the scene. Would be glad to comment on it. Nevertheless, great job, I like the flow of it."
2014-03-10 17:24:48;Preferred loader / workflow for AngularJS?;"I use [browserify](http://browserify.org/) with gulp rather than concatinate.  It allows you to essentially say ""this file depends on this other one"" and then it takes care of concatinating them in the right order. 

So I have module for my controllers.  I'd have an Controllers.js like thus:

    var angular = require('angular')
    module.exports = angular.module(""app.controllers"", []);

    require(""./FooController"");
    require(""./BarController"");

Which simply creates the angular module and then requires two other files.  Then, I can have files that live next to Controller.js, such as FooController.js:

    var angular = require('angular');
    var module = angular.module(""app.controllers"")

    module.controller(""FooController, function() {
        // controller definition
    });

The trick here is just omitting the second param to angular.module() will return an existing module rather than creating a new one.Hey. Glad you asked. I'm working on a loader for AngularJS that basically hijack the calls to angularjs.module() and import the dependencies before executing the module. 

It's on github; look for angularjs-loader. 

My next step is more unit tests and a concatenation script to help compiling. Once that's done I'll be at RC for version 1. 

Hope you like!This is an example of using requirejs - https://github.com/tnajdek/angular-requirejs-seed

I'm interested in hearing about other (preferably more implicit), methods thoughResolved it for now by reordering the stream based on the module declarations. Had an idea last night, reordering the files before concatenating, and bumped into an existing plugin: https://github.com/mkleehammer/gulp-deporder/

Since it's not angular specific, I wrote my own gulp plugin that reorders the stream based on the angular.module() declarations it finds. (If an angular.module(""foo"") is found before angular.module(""foo"", []), it only inserts it after the latter is found. 

Seems to work for now, if interested I can throw it on github!"
2014-03-10 15:38:43;Sharing async model data between controllers;"You're headed down the natural evolution of an AngularJS user. It takes a while to develop a natural intuition as to whether or not a Controller/Service/Directive is appropriate. 

1) The number of callbacks you have defined within the controller is unnecessary. You are right to assume there is angular magic happening in the backend which makes 

      $scope.netIncome = function () {
            return $scope.totalIncome - $scope.totalTaxes;
      };

unnecessary. This should be all you need:

      $scope.netIncome = $scope.totalIncome - $scope.totalTaxes;

Through the ""magic"" of angular, as you referred to it, properties on the scope have watches associated with them. When any one property of the scope is modified, a digest will kick off and make any necessary updates to the rest of the scope. This includes updating netIncome if totalIncome is modified. 

2) You are right on here. I like to keep repeated logic either within the Controller of a reusable directive or within a service with deeper functionality beyond making HTTP calls. For this scenario, I'd suggest moving the functionality of calculating surpluses and net income into a richer service. It's up to you exactly how it's organized, here's a blog post I found about sharing services. 

http://viralpatel.net/blogs/angularjs-service-factory-tutorial/

I feel the purposes of the services in the example will end up very similar to what you're doing now. Just think of BudgetData as a low level service like MathService, rather than doing simple math, it's making a request for the latest budget data. The additional manipulation you are performing on the BudgetData result is similar to what is happening in CalculatorService, calculate your net income and service. Follow the pattern as to how it's consumed in CalculatorController, since that code can easily be reused by other controllers. 

3) I find this to be a dangerous game. Right now, everything is great because you are the only consumer of the data, what should happen when you are dealing with concurrent users making edits to the same budget data? Unless the result of your budget data request is some insane amount of data, I'd stick with making those HTTP calls. HTTP requests are cheap and low effort, trying to figure out how to guarantee the user is working with the latest data and having knowledge of when another use has made an update can get very expensive with regards to effort.

Edit: Forgot #3"
2014-03-09 22:48:25;"Published Beta version of ""Practical AngularJS"" Book (in both digital and print format)";
2014-03-18 17:41:53;Handling Checkboxes and Radio Buttons in Angular Forms;
2014-03-18 17:03:49;AngularJS Routing Using UI-Router ♥;angular should just merge their router or abandon it. ui-router is mucho betterI just implemented this on our project at work.  There are a few limitations with it that I hope the Angular team improves on when they implement their own version in 2.
2014-03-18 16:41:33;Angular 2.0 Dependency Injection - Applied To Backbone TodoMVC;
2014-03-18 08:30:55;Angular 2.0 - Design Summary;">We’re working with the Traceur team to build support for a few extensions like annotations and assertions.

Would that even be considered ES6 anymore? Seems a bit misleadingThe proposed collection of modules that will comprise the data persistence layer are really exciting: https://docs.google.com/document/d/1DMacL7iwjSMPP0ytZfugpU4v0PWUK0BT6lhyaVEmlBQI hope this time they will have a proper module concept, instead of this half baked stuff they have now."
2014-03-18 01:03:07;FireUser user management library for Firebase at v0.4.0 - now with routing;
2014-03-25 20:55:36;Let's Make Full-Ass AngularJS Directives;"I am not sure I like his approach on directives at all. I dont see the need tu use jquery with angular (besides boostrap drop down etc). We can use 'element' in link function to access the DOM element, instead of adding $document in the controller. And also binding events in a service? That is really strange use of MVC overall
"
2014-03-25 19:22:10;Object-oriented AngularJS services;
2014-03-25 18:46:39;Create a reusable AngularJS input form component;
2014-03-25 14:45:23;Using Angular's Amazing Flexibility to Extend the SCRIPT Directive;It's possible to have multiple directives with the same name, and they both execute. So, why not just write another script directive instead of using a $provide decorator?
2014-03-25 14:33:18;Problem: Dynamic classes resetting;Here is a Stackoverflow link to a question I had. The question was answered, but it lead to a new issue. I explain that in the comments of the suggested and answer and I will here as well: when I leave the page the dynamic class reverts to blue and not the last clicked one. The buttons that I am affecting are on a different page than the ones with the changeToX funcion. The dynamic class keeps resetting to blue once I close the page that changes the class. Hopefully, you guys can help me. Thanks, Ben 
2014-03-31 21:34:33;Writing More Maintainable Angular.js Directives;"Isolated scope is good, but don't forget about ""scope: true"" -- this creates a new scope that still inherits from the parent scope. This usually works better, in my experience, when working with ngModelController and directives made by Angular."
2014-03-31 20:40:28;How would you create pinterest style overlays in angularjs?;"Okay so first,I would just use ui.router. The Angular ngrouter as it is, just isnt up to what it should be, and I think many here would agree, just use ui.router.

So theres a couple ways to do this, sure. And yes you would have to do some checking on the ""$stateChangeStart"".

So firstly, checking the FAQ of ui.router, you can see there is a section that talks about how you could go about opening a modal, based on a state.

[On Exit On Enter](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#how-to-open-a-dialogmodal-at-a-certain-state)

Now how you can make it open between a flat page, and a modal state using the above answer from the FAQ, is listening on the $stateChangeStart. For Example

>$rootScope.$on('$stateChangeStart', 
function(event, toState, toParams, fromState, fromParams){ ... })

[Look here for more details](https://github.com/angular-ui/ui-router/wiki#state-change-events)

if you are coming from a state, obviously you are already in the app. So if the fromState/fromParams are empty, you most likely entered the app state directly from the URL, so perhaps change routes accordingly showing a flat page, instead of the state containing the onExit,onEnter.

Perhaps theres an easier way, a better way, a more creative way but off the top of my head, this is what was most obvious to me using ui router, which seems to be how you were originally thinking this would work. I dont think this would be a hard thing to implement. Good luck!No dual routing needed.  Use $location to change the url when the modal is opened.

    // get the current path
    var current = $location.path();
     
    // change the path
    $location.path(current + '/my-fancy-item-slug');

Setting the path in this way does not cause a reload."
2014-03-31 10:58:50;Full stack design pattern for AngularJS apps;
2014-03-31 10:32:40;open source angularjs multisignature bitcoin wallet;"Hi all!

We open sourced our multisignature bitcoin wallet client and we'd love feedback on how to improve the app (in particular perceived snappiness)

We're also looking to offer btc bounties for contributions to the project on github (both development and translations)

Cheers! "
2014-03-30 15:15:55;AngularJS & Seo losses;"Using an external service as you mention will have no impact on SEO, as  when Google crawls your website they will receive the fully rendered HTML.Using Angular out of the box will give you zero seo benefits since nothing is actually on the page when it renders, so nothing for the search engines to index. Best case is what you already mentioned which is prerendering.The only way to make sure you don't get dinged is to really reply on the ""progressive enhancement"" philosophy. Where you build your site like a layer cake, each layer adding more spice than the last.

Your server should render down clean, semantic HTML. With nothing else added, what your server sends down should look like a really well organized word document.

Then add the CSS to get your layout looking the way the designer laid it out. At this point, I would still not start getting Angular and JS in the mix. Get your site navigation, site structure, pagination, etc. rocking and rolling sans JS. Once you have a solid, navigable site that has no JS needed to get around... Insert JS.

At this point, Angular or whatever JS you want can add animation, interactivity, re-organize the DOM, pull down content via AJAX, have at it...

This may be a little more work, and take a little longer than just having Angular in the mix from ""go"". But it will result in a site that is both SEO friendly, and has enhanced interactivity with JS.

A word on pre-rendering sites. I have not used any particular one myself, but I have re-built sites using the method that they use to serve up SEO friendly content for JS powered sites. In my experience, if SEO is a key driver of your site's success, I would still not chance their use. I have always found this method to perform less successfully than the method I outlined above. They end up taking just about the same amount of time to get right, but their is a lot less guess work, and possible error associated with a ""progressive enhancement"" driven site.

TLDR; If SEO is important, do not use Angular out of the gate...progressively enhance your site HTML -> CSS -> Structure/Nav -> JSIf you're worried about SEO, you might want to rethink how your assembling your page.

Frameworks like angular are more focused towards web apps. Things like project management, interactive applications, online spreadsheets. That type of thing. Not to say angular isn't suited for anything else. 

If your page is mostly static, and doesn't expect the majority of visitors to be doing lots of data entry, perhaps a traditional server side framework would be better.Same results, using prerendered HTML snapshots. Just takes a little tickling of the server.
Do not pre-render pages!

 http://searchengineland.com/bing-offers-recommendations-for-seo-friendly-ajax-suggests-html5-pushstate-152946

Bing and google can handle angular with no extra work.Prerender.io and similar tools can only provide a snapshot of the fully rendered website. That means they only make sense if you're using hash-bang URLs (`#!`) with the ""escaped fragment"" URL served by a prerenderer -- the prerendered page will have no JS at all, so it won't be useful to anyone but crawlers.

There's just no easy way to make pre-rendered Angular views work with JavaScript enabled (basically you have to give up on routing and anything that requires any kind of state).

If you have a hybrid website (e.g. SPA with some static content that should be indexed by search engines), I like using Angular's ""html5"" mode for routing and just including the static templates on the server-side if a matching route hits the server. The template will still be overwritten on the client-side (which is a bit redundant) but at least it will work fine without JS.

Most crawlers these days understand JavaScript, so you should generally be fine if you use Angular's ""html5"" mode. The only drawback is that it doesn't work with IE9 and below.I've built a front end for wordpress in angular. The original php pages render the content for non-javascript devices, while redirecting to their corresponding angular states for those that can see it.

I haven't pushed it to github yet - hoping to do that this week, after a couple of job interviews. It will be here when it is:

https://github.com/Jon-Biz/angularpress
"
2014-04-08 19:11:52;Maintaining Large AngularJS Apps: Refactoring;
2014-04-08 18:33:58;(x-posts from /r/javascript)An AnglurJS service I wrote for graying out parts of your page while waiting for promises to resolve. My company let me make it public today! Let me know what you think!;Looks interesting, but I wish you had some online demo.I've had great success using: https://github.com/ajoslin/angular-promise-tracker for the same effect.
2014-04-08 16:29:00;Building the 2048 game in AngularJS;Using a simple game as example for a guide explaining the main concepts of AngularJS -- good job! This is absurd to the point that I can't tell if it's a joke or not.  2048 is a fairly simple game, and this article details how to completely over-engineer it and make it artificially complex.
2014-04-08 16:13:06;Getting around the limitations of ngApp (with ngModule?);
2014-04-07 20:45:10;grunt-angular-modules-graph · a grunt plugin that generate a dependencies graph of the modules of your angular application;Neat! Does it work with resolves?
2014-04-15 17:50:10;Improving ng-repeat Performance with “track by”;What about using `track by $index`?
2014-04-15 16:50:37;Deep Linking a Tabbed UI With AngularJS;"This second attempt is much better than the first.  I really like where this is going; it gives me a solid start on implementing dynamic tabs (with deep linking!) in my current project. Thanks for sharing."
2014-04-15 11:12:23;Angular 2.0 and Durandal Converge;"I think it's interesting that mergers and buyouts of platforms can happen on such an individual level with so little red tape. This post makes it sound like Eisenberg just met and got along with the Angular team and got a better job offer. It's like the soft buyout.

I don't mean this negatively; this has always been the way of the software world. There are benefits to be gained in pooling talent, Eisenberg is free to make this choice, and intends to do as right by his supporters as can be expected.

I just think it's interesting that a Google entity sucked up a whole framework like this.This is huge news. 

If you don't consider Angular big now, this is going to launch it to the moon. With the integration and ideas brought in by Rob Eisenberg, merged with current 1.x innovation, I predict another huge wave of revolution in the front-end technology scene very soon.I can image AngularJS become THE goto framework, with level of improvements this suggests, its not a matter of how, but when"
2014-04-15 04:16:44;AngularJS & Popup Windows;
2014-04-15 02:10:45;Drying My Controller Code Out;What you're looking for here is services. You should have a User service that reads the cookie data and has it available for other controllers to fetch (in this example).
2014-04-22 21:50:33;httpi - A Lightweight $resource-Inspired Module For AngularJS;"I wonder how this compares to restangular https://github.com/mgonto/restangular? Sure this does look better than $resource, but it does not seem to address all the concerns with $resource that the restangular project does solve https://github.com/mgonto/restangular#differences-with-resource. 

Happy to hear some arguments for this library, I am always on the look out for great libraries to handle REST resources.Great stuff. Thanks to Ben Nadel! I'm not sure if Ben actively reads this subreddit. I'll try and reach out to him to get him to join us because he produces a ridiculous amount of good Angular content and would be helpful to have in the community."
2014-04-22 16:05:24;Tiny i18next filter for angular.js;"Not bad but not useful for languages with more than one plural form (eg. russian.) 

Pluralization suffixes should be kind of: _one, _few, _other for example..."
2014-04-22 10:09:00;Using JSONP With $resource In AngularJS;
2014-04-22 08:16:40;Learn to refactor your AngularJS code.;A good read. I totally agree about the part on $broadcast(). I've just re-factored a large project that was a complete nightmare to understand. When you have to ack-grep every single broadcast you've got problems.
2014-04-22 08:09:38;Easier Angular Directives with SweetJS;
2014-04-29 19:26:29;Piely.net -- small Angular site to show off and ask for feedback;"I would really like to use your site, but I need to be able to put a legend or some titles to individual pieces of the pie graph.

Also I would advise not to use clientside and serverside rendering together for one request. Too much complexity and for what? Angular directives are much more powerful than anything you can cook up with jade on the serverside.Isn't there an angular color picker you could use instead of using the hex values for colors. 

http://ngmodules.org/modules/angular-spectrum-colorpicker"
2014-04-29 18:53:31;Need some help calling a ui-modal from a http status code interceptor.;[deleted]
2014-04-29 13:22:32;Video game programming in AngularJS. Step by step making of the classic Minesweeper game.;"The title should be, ""An Incomplete Guide to Building a Minesweeper""It's a good start.  I'd like to see the next installment."
2014-04-28 21:41:27;Using CSRF protection with Express and AngularJS · Mirco Zeiss;
2014-04-28 17:00:39;Angular Part 5 – Adding A Service;
2014-05-06 23:51:48;Issue with setting a scoped var to a function result;"For ""Product B"", you are not returning anything.

For ""Product B"", Change:

    priceTotals: function() {
                totalUpPrices(this.children)
            }

To:

    priceTotals: function() {
                return totalUpPrices(this.children)
            }

edit: code formatprototypal inheritance"
2014-05-06 18:28:25;Data-binded elements not populating on load until I click around.;You're changing the model outside of a $digest cycle. Without seeing your code, I couldn't tell you where this is.Are you using `$http` or one of its derivatives for your AJAX calls? If not, it will never trigger a `$digest` until you perform another action.
2014-05-06 18:12:10;An Introduction to the AngularJS Directive [Part 1];
2014-05-05 19:33:22;Rails + Scope + History;"http://stackoverflow.com/questions/17178943/does-my-ng-model-really-need-to-have-a-dot-to-avoid-child-scope-problems

Could be related to your issuesThe specific issue with the scope was solved using http://stackoverflow.com/questions/19338684/angularjs-force-re-rendering-full-refresh-a-directive-template and http://stackoverflow.com/questions/14608258/updating-html-element-outside-of-ng-view + redefining the problem which helped me find those two helpful pages.

I still don't know about the back issue + history related to Rails however...I posted on Stackoverflow a thorough explanation of the back button / history issue and my attempts thus far to solve the problem if ne one wants more info.

http://stackoverflow.com/questions/23506629/angularjs-rails-back-button-warning-tried-to-load-angular-more-than-onceSolution was to remove turbolinks and (maybe; not sure if this part was relevant to it working) having the Rails layout render a view and then within that view have the ng-view."
2014-05-05 16:10:28;Adding tags/classes to sub-strings;"You simply didn't made your regex global. Your regex should have this format: /strToMatch/g http://plnkr.co/edit/SQXSCSGhqcVFcsRLFct3?p=preview

You were running the regex against scope.item.text for each branch of your if statement and putting the result as element.html.  so if you have two matches, the last match will overwrite the first.  instead of being additive.  "
2014-05-12 20:19:16;Understanding Angular's Magic: Don't Bind to Primitives;I love this kind of article because it tells you why not to do it the wrong ways and not just why to do it the right way.
2014-05-12 20:04:23;The depths of AngularJS's watches;
2014-05-12 08:51:35;Watching an object inside a service;"Where do the changes in settings come from?
If functionality is the same on every 'page' (ie. doesn't vary, depending on what controller is loaded) you could have a separate controller for the filtersettings which does the watch/update, rather than merging the filtersettings watch/update into multiple controllers. 

The multiple pageControllers could still have read-access to the service, but would never write to it (the service is kept up to date by the new, long-lived, filterServiceCtrl).

JS objects are pass by reference, so if you put an object on the scope you can change it's properties and every instance will be updated without any watches.

    $scope.filterContainer = FilterService.filterContainer;

Then any changes to filterContainer.settings will be shared by all of your controllers.  You just have to access it through the filterContainer reference,

eg

    {{filterContainer.settings}}

You add property from service to your controller's $scope and then $watch it."
2014-05-10 19:13:29;Angular question about MEAN stack;"Yeah, I'd just make all the HTTP calls you need in services, and no more.

MEAN is just a set of technology choices, it's not a framework in the Rails sense AFAIK.  If you want REST you need to set it up yourself, I'm pretty sure there are resources to help with this too e.g. https://github.com/visionmedia/express-resource

You can also use ngResource for ease of interacting with a RESTful web service from Angular-land.

Does that help?I exactly feel your pain. When you render your pages server-side you have direct access to your DB. With javascript SPA you have to create REST interfaces for any data you need. This is quite tiresome, yet very few people are even trying to solve this problem. I have not tried myself, but sails.js framework seems like something you might consider. 
I was quite discouraged by this myself, so I attempted to bring the DB(Mongoose) to the browser. So that you can run your DB query from your angular controller without worrying about REST, HTTP and all that stuff. Unfortunatelly it is quite a feat, so the framework is far from finished, but it is promising. If you would like to take a peek, it is here:  https://github.com/capaj/Moonridge"
2014-05-10 18:19:01;Controllers, directives, filters not being called - a waste?;"I did something similar with my MVC project.

There was one app, and directives are shared, but every page has it's own controller.

Basically, I bundled/minified the core angular stuff and have that sitting in my master layout. But each page includes its own bundle with the controller/services/etc that it needs to run.If you're using client side routing and thin controllers, then it's not a big concern. How big are your controllers? If you're minifying and gzipping, it might be 10k at most?Ideally Angular/AngularJS projects are SPAs - single page applications. You can use them on individual pages, but yes, it is probably not an efficient use of the framework.

Instead of using Jinja2, you can have components / directives encapsulate parts of your layout."
2014-05-20 23:19:48;Embed SVG field from JSON in Angular. Is it possible?;
2014-05-20 20:30:25;ng-inspector: Browser extension to inspect AngularJS apps, now on Chrome as well;"I see that you mentioned Batarang above.  Can you describe how this compares to it, featurewise?I am experiencing this issue since I am manual bootstrapping. Clearly you already know about it which is cool. :)

https://github.com/rev087/ng-inspector/issues/2I've built this because I missed the Batarang extension when developing in Safari, but since then a lot of people requested a Chrome release, so here it is :)really cool, good job!Are you going to put this in the chrome web store?Is this like the angular chrome extension released by Google?I'd like a Firefox release please!"
2014-05-20 18:26:50;Famo.us / Angular - Angular Famous;"This looks great, can someone explain what exactly Famo.us is? Is it a mobile framework or something, and if so what does it offer that some of the others do not? It looks really coolStarted playing around with this today: http://jsbin.com/qotuz/10/edit It might be the fact that I'm using JSBin, but so far app behavior seems unreliable - you have to hit the ""run"" button a few times to get it to work, and weird things like CSS properties can break the app. We really need more docs before this integration can be useful."
2014-05-20 18:25:55;Can't get $anchorScroll working on $stateChangeSuccess? Looking for help.;
2014-05-20 06:17:27;"How do I ""think in AngularJS"" if I have a jQuery background?";"Pretty much stop using jQuery. Do any DOM manipulation using directives, never on Controllers. Don't over-use expressions in views, instead use links to model objects and functions in $scope. 
This has been posted before in this subreddit, but even more importantly: This is clearly just a repost of this [post to /r/programming](http://www.reddit.com/r/programming/comments/25zjxb/awesome_stack_overflow_answer_describing_how_to/) which is just 6 hours older than your post.Ingest roofies until you have no recollection of jQuery."
2014-05-27 17:45:17;Child state not reaching in the ui-router, what am I doing wrong?;[deleted]What does the button in HomeCtrl do? Are you using the ui-sref to load the next state?When you add a child state, it requires the parent to have a new ui-view element. If you want to target the parents view element, prefix the view name with '@'.  Does your home view have a child ui-view element?
2014-05-27 16:26:47;SEO Google crawl to execute your site JavaScript / AngularJS / Backbone / Single Page App;"Just when I had started figuring out a good process for server-side rendering my react views.Aerobatic is in beta and one of its features is that it handles SEO automatically for single page apps.

http://www.aerobatic.io/But what happens with the rest of the bots? Like Twitter,  Facebook,  Bing..."
2014-05-27 07:56:48;"Digging into Angular’s ""Controller as"" syntax";"I prefer using:
var ctrl = {};
return ctrl;

.. instead of using this. Results in much cleaner code. 
Cheers for the read, having the well defined view is much nicer :-).does anyone know why use this syntax breaks the scope chain? Well, I kinda know why, how can I fix it?"
2014-05-27 07:24:40;ng-inspector for AngularJS;"About time! Batarang has stalled development for almost a year and I was in need of a new angular tool. Am I supposed to be able to see inside of an object?

If I set up form models as an object like:

    data = {}
    data.first_name = ""test""
    data.last_name = ""test""

In the inspector I can only see that there are 2 values and not what they are.

Is this normal?It shows up as an empty pane for me :(. Noticed one of the reviews said the same thing.

Chrome 35.01916.114 m

    <div class=""ngi-inspector"" style=""width: 282px;""><div></div></div>"
2014-05-27 05:38:11;thoughtram - Extend your memory.;No details on this whatsoever, why even bother posting it?free memory? http://imgur.com/05Av5ZrMaybe, is something like dropbox but developed with AngularJS thats why he is posting it here.What's your - if any - proposition? 
2014-06-03 22:16:44;I'm following the angularjs tutorial... if I run 'npm install` does that install the dependencies globally?;"Install globally: npm install -g

Else the npm install is local. Use global installs sparingly. When in doubt, [RTFM](https://www.npmjs.org/doc/cli/npm-install.html). ;-)[LMGTFY](http://lmgtfy.com/?q=npm+documentation)"
2014-06-03 19:18:00;Need help with a Cloning command;Stuck on the npm install or the git cloning? What is the output from the command you're trying to run? :)
2014-06-03 16:22:47;AngularJS education link collection on GitHub. Contributions welcome!;Hey, I think there's already something like this: [jmcunningham / AngularJS-Learning](https://github.com/jmcunningham/AngularJS-Learning). Is your goal to organize the information differently?Awesome!  I'll try to add some stuff when I get the chance.  Any plans beyond the repo, such as a github pages version?
2014-06-03 15:06:28;Great article: Internationalization with AngularJS;
2014-06-03 13:59:02;Data Persistence in Angular 2.0 - Design Doc;Indexeddb won't have to polyfill the latest safari anymore. Woo!One thing I'd love to see addressed is the questions of seed data and db migrations. Currently I load seed data before manually bootstrapping my app. I do this because it is the only way to ensure that the app is bootstrapped with faux data. I'd love to see some use case centered around this and around handling client side db migrations in an offline / online world.This is fantastic, especially if they build in offline detection, that can be very painful due to the error code differences between devices and browsers and how you are offline (network disconnected vs temperamental connection)This looks very promising! Looking forward to seeing it implemented :)
2014-06-10 22:48:09;5 tips on how to use AngularJS with Rails that changed how we work;
2014-06-10 20:08:50;AngularJS PhoneCat tutorial ported to GopherJS;
2014-06-10 18:10:15;Create a tv show tracker using angularjs, nodejs and mongodb;wow, thanks for linking this.  I'm a super beginner and have been able to get this up and running (stopped at the login /out steps)
2014-06-10 16:10:40;A very deep-dive into Angular Providers (x-post: r/javascript);
2014-06-10 15:14:26;AngularJS based Rgb2Hex Converter;
2014-06-17 19:41:14;So I made something in Knockout, and I'm wondering if there's an equivalent in Angular;[angular-dragdrop](http://codef0rmer.github.io/angular-dragdrop/#/)i made a demo a while ago that supports shift + ctrl clicking https://github.com/erwinmombay/treedragndropdemo (it reuses code from angular dragdrop)
2014-06-17 18:36:14;AngularJS Promises - The Definitive Guide;"[deleted]Here's a potentially dumb question:

If I use resolve in the route, does that delay the actual loading of the route/state until the promise is resolved? What if your results take more than a fraction of a second - now the user clicked on something, and nothing happens.

Wouldn't immediately switching to the correct state/route and then loading the data with some kind of indicator be a better way to communicate, ""Hey, I know you did that, but give me a second to get it ready"" instead of just... not responding?"
2014-06-16 18:50:28;AngularJS 1.3 will not be compatible with IE8;"I find it really sad that people are demanding support for IE8.

IE8 pretty much means you're on XP at this point. XP is well past EOL at this point. Time to upgrade and move on. At least switch to chrome or firefox which both still work on XP.

If you're still running stuff that ONLY works in IE8, you have bigger issues than not being able to develop with angular 1.3 (not like 1.2 ceases to function)When I run into clients that seem to think IE 8 support is necessary, we just talk about feature requirements and budget. In every case, it comes down to ""If you want feature X, and want to spend $Y, then I'm afraid IE 8 support is out, and here's why...."" Talking costs always seems to get clients (at least mine) backing away from the insistence on IE 8 support, especially when I remind them that upgrading or changing browsers is free.I just wanted to clarify that IE8 won't be tested or have bug support in 1.3. You might be able to use 1.3 without any issues.
From the article: 
>""The changes in version 1.3 won't be actively removing the hacks in Angular that make Internet Explorer 8 work. Most things that work now will probably keep working. But we're going to stop testing against Internet Explorer 8 in our CI server configuration. And we won't be fixing issues that are solely related to support for Internet Explorer 8 users.""I'm just redirecting to a page explaining how they are 3 versions back even in the MS world and offering links to upgrade to Chrome, FF, IE9, etc.  I leaned on the security angle too.We already stopped supporting IE8 with one of our applications.  I know for a fact it didn't work with ng-resource and the delete keyword (`resource.delete()`) without using `resource['delete']()`.  I could have done the work around, but after discussing with our team, IE8 is solely an XP browser which is past EOL.  If clients don't want to upgrade, we suggest that they use Chrome or Firefox, and most do.

If you are truly concerned about the issue, what I would do is create a script that runs if they are on IE8 or below that tells them to use Firefox or Chrome for best results.  You can then either let them use the application, though it may be buggy, or prevent them from using the application."
2014-06-16 14:53:31;angular-pnotify: an Angular wrapper for PNotify 2.0;"Very nice setup. Would be nice if the jquery dependency could be kicked eventually, but I realize this is built around the pnotify library so that would probably require a substantial rewrite. Good work regardless.Look awesome, thank you!This helps how? I currently paste a one liner in with a config object.
I still have to do that , and  now include a new file.

Its a use case I'm missing right?  Since it still requires jquery and pnotify and isn't it's own directive and service.

I expected <pnotify></pnotify>  could be put in any page and then that could be triggered by $scope.





Very nice work!!"
2014-06-16 11:00:43;ui-bootstrap modal $scope help.;I'm not really following you but `angular.copy()` might be of interest.
2014-06-24 22:42:10;Reverse engineering Angular directives (18 minute interactive video);That is *way* more of that dude's face than I needed to see.I probably would have continued if not for the uncomfortable zoomed in face.  I'd imagine these videos would be more popular without the face.
2014-06-24 20:40:54;We are hiring an angular developer.;What's your budget for such a developer?
2014-06-24 19:40:14;50% discount on AngularJS course on UDemy;Coupon code SUMMER1 has expired
2014-06-24 16:38:23;#ngbook has been updated! Grab it today for 20% off and get all future updates FREE! Good for one day only.;According to your website, you're still only at version 1.2.13? :PJust bought it :) How often are you updating the book? How long 'til 1.3 is included? Awesome! Don't know if I got the 20% off, but it was still 10 dollars cheaper than on the main site for the book, so I got myself a copy too.
2014-06-24 13:43:08;Better Error Handling In AngularJS;
2014-07-01 23:46:40;AngularJS Interview;"$compile

e2e testing

The other providers like constant and value, basically look at the module API and be familiar with all the stuff like config too.

Data Binding 

Form validation

Transclusion and Isolation for sure.

Build tools (yeoman, bower, grunt)

Have some code to show on github.




Off the top of my head:

- Gotchas of two-way data binding like using primitives instead of object as scoped variables. 
- Separation of concerns: ""If you had one controller that needs a list of users, and then another controller that also needs the list of users, how would you get/edit that data in those two controllers"". (Brief answer: make a service)
- Unit testing
- Front-end tools like grunt/gulp/npm/bower
- How to deal with REST endpoints (or general server communication)
- User authentication and security"
2014-07-01 22:05:56;Need help adding addthis share buttons.;"AddThis will grab the current info on the page and send it to Twitter. Facebook on the other hand will scrape your site, and most Frameworks like Angular/Ember render those details after the page loads, meaning way after the scraping occurs. I wouldn't call this a limitation, just extra work you need to do to make your site search engine and/or scraping friendly when using one of these frameworks.

I would suggest prerendering the pages with a headless browser and serving it back to the search engines and scrapers. I use [prerender.io](http://prerender.io) and it saved me the headache of writing all that.

To test if your site is doing this properly you can paste a link in to facebook in the *Whats on your mind?* section, it will scrape your site and serve a little preview. I submit a random page from my site as proof: http://godhatescharades.com/card/faNEzKMRbM/complaining-that-mtv-doesnt-play-music-videos :)"
2014-07-01 14:48:19;Learning AngularJS;Best tutorial for beginners is in codeschool.  It's free and is sposored by Google -- the maker of Angularjs.To the mods: I think that links for beginner tutorials and introduction to the framework should be on the sidebar :) cheers!I started out with codeschool but quickly moved to the ng-book and then egghead.io. I feel like I got the most out of the egghead.io stuff and working on my own projects with ng-book as a reference.
2014-07-01 13:31:10;Building app UI using jQuery... but the dev is using Angular.;"Yes. When I was learning Angular, I built the UI elements themselves (accordion, drop downs, popups, etc) with jQuery. I quickly found out that there are far simpler ways to do the same things using Angular. There are lots of snippets and tutorials out there.

Otherwise you may want to look at [UI Bootstrap] (http://angular-ui.github.io/bootstrap/). [deleted]Yes, keeping jquery things in sync is a pain in the ass. But you should ask her, maybe she has an easy way (in which case please tell her to post it here!)I don't really understand the division of labor here, or why she chose to use AngularDart.  Dart is awesome, but it's implementation on Angular isn't at the same level as the Javascript implementation.  Important things like form validation are still not as good as the Javascript version.  I can foresee an incredible headache in your future.  You should split the difference and use the Javascript version of Angular.  There is absolutely no need to use a low-level library like jQuery to implement web application UI (especially CRUD-style) in this day, unless you are doing something entirely non-CRUD.

EDIT: Also, just talk to her, like someone mentioned below.Yes. She'll have to put all of your jquery in a directive.
Yes.

I've found in Angular I cannot approach projects the same way, as in a jQuery-only project, where I might build all the UI ahead of time and  come back adding the functionality. "
2014-07-01 07:49:55;Should I learn AngularJS 1.2 or wait for 2.0;"You can spend your entire life waiting for the 'perfect framework' to come along.

In the early days of building your platform, switching frameworks is not a difficult task (unless you are being silly, like using jQuery in an Angular app). You *will* learn something, even if Angular 2.0 is completely different. If somehow Angular was stricken from the web and I was forced back onto jQuery, my application would still be significantly more compact.From [this document](http://blog.angularjs.org/2014/03/angular-20.html), they suggest porting will likely be pretty straightforward, if and when they release it and when you decide to upgrade.

But from one developer to another, I suggest go ahead and work with 1.2, it would not be a waste.  When 2.0 rolls around, you'll already have gained the experience and understanding of what is required to use angular and the fundamentals on which it was developed.  2.0 will not defer from the goals and mindset they had when they created 1.X.  

Likely, 2.X may conform to some backwards compatibility.  But I can guarantee that you will not be alone during the release and upgrade period, thus if they want people to move over, they (hopefully) will provide good documentation on how to do so.  By that time, you will probably know the ins-and-outs of what needs to be done in your own application.  

I say this, because it is not a hard framework to learn.  Frankly, the only troubling thing to learn is scopes.  And maybe in 2.X, they will have changed how that works and you'll be like 'Ah-hah, even though this is easy, it's now easier'.  I'm optimistic, but it's a good library nonetheless."
2014-07-08 23:47:20;How to add navigation in angularJS | Beginner's Tutorial;https://docs.angularjs.org/tutorial/step_07Your blog already has a subscribe function, you don't need to post every single link on this sub.Why not use $routeProvider? Or better yet ui-router?http://blog.hfarazm.com/angularjs-navigation/
2014-07-08 16:35:01;lynndylanhurley/ng-token-auth - Token based authentication module for angular.js;Author here. Any thoughts or questions?
2014-07-08 16:31:01;Looking At Attribute Interpolation Workflow Changes In AngularJS;
2014-07-08 16:14:47;Exception Handling in an AngularJS Web Application (Tutorial);
2014-07-08 08:38:42;ng-book. Which version to buy?;"Looks like the online pdf you linked to is someone's bought and perhaps slightly out of date copy.

I recommend buying it from [the author's gumroad page](https://gumroad.com/l/angular/XNWJLPr7). $29 for the mobi, epub, pdf, code and updates.

I prefer physical books too, but in this case I like reading the pdf on my pc. Makes it easier to check out the jsbin examples and other online sources he links to I bought the book through its own site, and I'm happy about it, because I get notified every few months that new content has been added, with a link to download it. I sometimes download the .mobi, put it in my Kindle and I'm ready to go."
2014-07-15 21:24:11;Factory? service? Is there really a difference?[spoiler: not really] A really good talk about the different providers in angular and dependency injection (first 45 minutes);Slides in hi-res available [here](http://slides.wesalvaro.com/20121113/#/﻿)I find myself using factories a lot more often than services, personally. I seem to notice a lot of discussions and tutorials simply call their factories services, as well.
2014-07-15 16:45:50;Preload Resource Data into AngularJS;"Angular can do this out of the box by using `ng-init`:

    <div ng-init=""preloadResource={foo:&quot;bar&quot;}""></div>Thanks man. I was just Googling how to do this last night and couldn't find anything. Awesome!I call my resource in a resolve function on the route. This is a different use case I guess. "
2014-07-15 07:47:33;Rethinking AngularJS Controllers and controllerAs syntax;"Always good articles from this gent. Is it you, op?

Small point of disagreement: I think adding the ""Factory"" suffix is a bit misleading. The ""factory"" is the constructor argument given to the `angular.factory` call, but the object that it builds is a service. Unless that constructor actually builds a [factory](http://en.m.wikipedia.org/wiki/Factory_method_pattern) I'd use the suffix ""Service"". This reduces ambiguity in what you're injecting and leaves you the freedom to change your service declaration to a `service` or `provider` without breaking convention.

Also, if you capitalize your service name (e.g. ""SomethingService"" rather than ""somethingService"") your injected service will look like a constructor by standard JavaScript convention, so I'd reserve that for constructors.

Love your work though, keep them coming.nice article, i was actually refactoring some of my code last night to work similar to this as my initial work on one of my controllers was getting out of hand and i was offloading functionality to services. After seeing this post i think i shall be incorporating some of this dudes design patterns"
2014-07-14 21:19:00;How to add tabs in angularjs app?;
2014-07-14 21:18:38;Tutorial 13: Tabs in AngularJS | Working with tabs;
2014-07-22 22:56:49;I couldn't find too much anywhere on the topic of event delegation...;"jqlite doesn't seem to do selectors in bind, but jQuery does.

https://gist.github.com/koganei/1aad26a2a180abefa303

    link: function(scope, elm, attrs) {
            scope.clickCount = 0;
            
            elm.bind('click', 'span', function() {
                scope.$apply(function() {
                    scope.clickCount++;
                });
            });
        }In what context? I'd usually build a directive that exposes an event on the scope via attribute using the `&` syntax. See the scope section [in the $compile docs](https://docs.angularjs.org/api/ng/service/$compile).

I'd write an example but I'm on my phone."
2014-07-22 19:33:03;Collapseable menus;"Are you talking about the button shown at 6:49 in the video?  That's just a feature of Bootstrap.

http://getbootstrap.com/components/#navbarHere's an example:

http://www.bootply.com/98963

You need to wrap the navbar links in a ""collapse navbar-collapse navbar-ex1-collapse"" classUse angular-ui's bootstrap module. Include it as a dependency to your app module, then follow the example in Bootstrap 3 (ignoring data-* tags, because those are used by jQuery) and then use the collapse directive from ui.bootstrap

edit: [Example](http://plnkr.co/edit/txJnKfco1cDOBX3aJfZS?p=preview)This is more of a CSS thing than specifically angular related."
2014-07-22 18:30:52;[Code Review] Table directive;"Few quick things:

- tableModel has a surprise dependency on an external promise returned from customGet(). Can resolve this with a parameter on the directive such as data-source or something.

- Use of $filter in a controller is tightly coupled and generally not a good idea. Can resolve this by moving filter usage to the view."
2014-07-22 15:17:09;Help using expression inside script - is it possible?;"Ewwww. 

Do this in a controller, or a directive, or a service... pretty much anything but this. You should be doing this in the controller, not the domI don't understand why you would do something like this.  99.9% of the time you can put the logic in your controller/services, templating javascript in brackets on your template, and directives for all else.  You really shouldn't need to use the <script> tag on your template.

If you paste up more of your code, we can tell you how to do what you are looking to accomplish.If you already have the ""messages"" on your scope why don't you just get the name in a for-loop in your controller?No need to wrap it in a script tag, angular's HTML compiler evaluates the binding for you:

<div ng-repeat=""msg in messages"" >
  {{msg.name}}
</div>"
2014-07-22 14:29:03;AngularJS Quick Tip: Counting Watches;
2014-07-29 19:47:46;Global Errors;
2014-07-29 17:33:55;Using mean-upload;
2014-07-29 17:20:43;Any tips for automating IIFE wrapping in angular grunt builds?;"Use ""banner"" and ""footer"" options in your concat config. "
2014-07-29 16:22:25;Creating a YouTube AngularJS Directive;"Great writeup, I was looking for something exactly like this.  Thank you!This is why I love directives. Is there a reason why you (or the writer of this blog post) decided not to include the YT play/pause buttons inside the directive?

Seems oddly placed outside of it."
2014-07-29 14:46:17;Oauth in angular is very difficult;"This is something that can be regularly screwed up, so kudos to thinking it through. Personally, I found the Auth0 article below informative. Also, if you don't want to go through the trouble of OAuth yourself, you should look into Firebase Simple Login (I work for Firebase). 

Simple Login is just a simple auth server that handles the tokens and redirects for you. It also allows you to store your keys on a server, which is definitely more secure than storing them on the client. Firebase isn't needed as your backend to use Simple Login as well.

Auth0
https://auth0.com/blog/2014/01/07/angularjs-authentication-with-cookies-vs-token/

Firebase Simple Login
https://www.firebase.com/docs/web/guide/user-auth.html[deleted]Well... I'm not sure how an Angular-specific tutorial could cover every possible server setup.I was just investigating this today, it seems like our app uses the Facebook login dialog SDK to open up the pop-up window...which provides a callback handler to handle the response on sign-in.

After sign-in we can call methods like `FB.getUserID()` and `FB.getAccessToken()` (where FB is their SDK) to get the necessary data, and then make a POST request with it to our API.https://github.com/enginous/angular-oauth"
2014-08-05 17:00:48;If I'm pre-caching my templates do I even need to provide the originals as a backup?;"No reason that the templateCache would fail by itself I would think. If it does, probably means your entire application is in a poo-poo state and needs to be reloaded anyway. I don't think so, you should be good just using the templates I. .js files. No need to save the generated templates on dist Folder IMHO. I'll be of no help here whatsoever, just a different solution:

[grunt-inline-angular-templates](https://www.npmjs.org/package/grunt-inline-angular-templates)

for those who may be interested."
2014-08-05 16:02:05;AngularJS, Node.js, and Raspberry Pi controlled train;
2014-08-05 14:02:43;Overmind - module isolation and lazy loading for Angular apps;"> Limitations

> Overmind.js is a replacement for ng-view, and currently assumes a single main content area. 

I built a similar framework called ""Future States"", part of UI-Router Extras.  It allows lazy loading of modules and route definitions for UI-Router, providing lazy loading of complex nested states.

http://christopherthielen.github.io/ui-router-extras/#/future


This isn't a criticism of Overmind; it's just an alternative.This is great. I could have used this in some application. I will remember this and try it next time we have a huge refactor/redesign (happens often)

I found it funny, in the readme, the use of boostrap. I do the same all the time.
"
2014-08-05 04:26:09;Code Reuse: Reusable controllers vs. directives?;"It depends. 

Is there dom manipulation? If yes, directive is your best bet.

If there isn't dom manipulation, put it in a service. Assuming there's some kind of logic going on, it belongs in a service. In Angular, service is the model of the MVC pattern. Create a service with an exposed api, and have it injected into whatever controller you want to use it for. The controller should just be the glue between user input and your model(angular service). 

Having the logic in the service makes re-using the code very easy, and testing it easy as well. Especially if you encapsulate everything properly. Unit testing will be much easier when there's a lot less to mock.

As the saying goes for MVC patterns; thin controllers, fat models.Directives are the better choice here, in my experience. The main difference being that you can only have one controller per view (at least if you're using ui-router).

However, any interesting code designed for reuse should really belong in a service. Your controllers should ideally be just a bit of boilerplate to connect your services to your view. Therefore there shouldn't be too much in a controller to reuse.If it's reusable 'business logic - try and pull it out into a service.
If it's reusable 'view/view logic' - try and pull it out into a directive.

If even after you've pulled out reusable bits onto services/directives and your still seeing repetition within your controllers - there are various ways of making 'base' controllers, although at times I find it can be beneficial in this case to think 'don't repeat yourself - more than necessary' and not aim for total DRY.

If your controllers are really thin, does it matter if two of them have something like '$scope.something = function(entity) { entity.save(); }' 
We had this, and Im doing a Proof of Concept on it.

essentially what we have are ""widgets"" i.e set of ""apps"" that:

* must have the same functionality in every view
* developed by different people. App A will be from Person A, and app B from person B.

* Person C should only need minimal interactions to add app A/B to his view.




What i went with was Directives, with templateURL (don't know if this would be the best). but for the moment, i havent seem to run into any issues yet"
2014-08-05 03:06:23;"Embedding Angular js ""widget""?";"Angular code, specifically directives, are very reusable.You absolutely can.

You can make as much or as little of your page ""angularized"" as you want. Hell, you can even have an angular page with no actual angularization (ng-app with no controllers or routing or such).Yes you can.  Depending on how it's loaded inside the application you might need to manually bootstrap it: https://docs.angularjs.org/guide/bootstrap

"
2014-08-12 17:58:16;Buttons with Hold Events in Angular.js;This is probably great. But it's written in coffee script. 
2014-08-12 16:26:50;Accessing External APIs Using AngularJS's Services;"Agree with the comments there, just resolve the promise when you get the data. If you're going to use Angular it's more than likely you'll have to learn promises. Retrieving data seems a good moment to introduce them.I guess I will pile on also. The approach shown here is great your very first learning to use AngularJS. But once you go past that, promises make an enormously more sense. In our class we teach on this stuff (link below, sorry for this commercialism) we get every student through data loading using promises, and usually using the resolve mechanism of the router.

The most important thing I've learned about promises: the more deeply you understand them, and the more broadly you use them, the shorter your code gets and the fewer places your code ever actually directly mentions a promise!  If your code is doing a lot of direct promise manipulation, creating resolving them manually, go back and learn more.

http://angularbootcamp.com/
"
2014-08-12 16:26:07;Let's build: An AngularJS app with Browserify and Gulp;"I can see the appeal of Browserify, using NPM to fetch client dependencies as well as server ones. One system instead of two.

But I can't help but think the flat dependency approach Bower takes is more suitable for getting a hopefully minimal set of client-side dependencies users will have to download.

I haven't looked into Browserify but that looks like a solid workflow. I bet building a gulp extension that flattens out all of the requires into a single script for production would be easy to do if one doesn't already exist. 

Hmm, it doesn't look like it's even needed because browserify returns a stream. Very nice.You don't need to use Browserify if you write your files as separate Angular modules and concatenate them. My modules refer to other modules but don't need to know the file names, so no need to `require` them, and then browserify. 

I understand Browserify is great tool if you want to re-use Node modules in browser but I fail to see any need to use it with Angular modules.
"
2014-08-12 11:50:06;Feedback on my take of an Angular project + API;"A secure application shouldn't rely on the fact that the code is hidden, but on the fact that the access to restricted information is secured.

As long as your API calls are secure (with whatever way you want to authenticate the requests), the fact that the front-end logic is exposed is not that big of a deal.

That being said, if you're really worried about non-authenticated users being able to look at the source of your front-end, you could make the JS files and the partials being served through authenticated calls on the server.

It could depend on what you mean to do with the application. If this is going to be something with free access, or potential ""free trial"" access, then anybody would have a way to get authenticated and get access to the source of the JS/partials anyway.First off, create an interceptor to grab all 401 responses and redirect to the login page.

Another idea is to use $routeChangeStart (or resolves) to check their auth status before the protected pages load. 

Perhaps even create an endpoint in your API to verify sessions, /api/users/me... if the session is valid, this will return the userId, name, etc that you can store in a closure in an Auth service.save yourself a lot of time and use jwt for auth"
2014-08-12 08:25:00;Finished a few tutorials, now what? What is everybody building?;"There's lot of advantages of using a frontend framework, and one of them is because it forces you to change that logic you just stated, for the better. 

Instead of working on the backend first and having the frontend being a leftover hodgepodge of jquery snippets that usually don't make sense unless there is detailed comments, Angular code is (usually) easy to understand which makes it clear what is going on, and if you structure your front end files correctly it becomes easy to understand the overall logic of the frontend. Angular allows for extreme re-usability with it's directives. It's a non-opiniated framework, so you get to make a lot of the structure decisions yourself. If you want a look at how a lot of people think an angular-app should look, try one of the yeoman scaffolds (I have been doing a lot of work with angular-fullstack). Try looking around there and get a feel and appreciation for the way the app is structured, I think you'll be pleasently surprised. "
2014-08-19 17:09:19;Tip: Accessing filtered array outside ng-repeat;"eh i don't know how much i like setting variables in templates like that. seems like things could get lost. it is a pretty clever solution though. just for organizational purposes, I would probably maintain that filtered array inside the controller that its being used. Also you're solution breaks down with cross controller communication. if you want the filtered list in another controller (which arguably is a strange thing to do in the first place) then defining and maintaining these things in a factory is probably the way to go, then injecting that into multiple controllers. just some thoughts
"
2014-08-19 17:08:55;Creating Custom AngularJS Directives Part 3;
2014-08-19 17:08:28;AngularJS Encryption and Three Way Data Binding Tutorial;
2014-08-19 17:07:35;AngularJS Dependency Injection from The Ground Up;
2014-08-19 15:57:55;AngularJS best ressources...really good!;
2014-08-26 19:56:02;Angular Best Practices Seed/Template;I recently made my own [seed/boilerplate project](https://github.com/jakemmarsh/angularjs-gulp-browserify-boilerplate) that uses AngularJS along with Gulp and Browserify. I tried to follow all of [these best practices](https://github.com/toddmotto/angularjs-styleguide)I've been pretty happy with [angular-seed](https://github.com/angular/angular-seed)
2014-08-26 15:39:45;Trying to grab a list of IDs, then a list of items by their ID and return a promise to resolve before page load;"You can do this in a few different ways. 

One would be creating a new api route which takes a list of ids and does all the fetching and returns all the data at once.

Second you can make the service you're talking about and pass it that list of ids and have it do the same thing. In angular this amounts to: injecting $q, returning a promise from $q and resolving that promise once all your server calls are returned.

I'll look around for some examples once I get to my computer.If I'm reading this right, you need to fetch a list of projects from the server, then you need to hit the server again once per project to get more data, and only after all that is done will you let the page load?

Can I *beg* you to let the page load first and then fill in the data as it comes in from the server?  Your users are going to absolutely hate that initial delay where it looks like nothing is happening.You want something like this.  (Not tested, just typed into the comment box)
 
    $http.get(""/proj.json"").then(function(data) { 
      var promises = []
      angular.forEach(data, function(project) { 
        promises.push($http.get(""/api/v1/projectstasks/"" + project.id));
      }
      return $q.all(promises);
    });Hey mate. I realize I'm a little late to the party here, but I'll share my 2 cents anyway. It sounds like the API you have to work with isn't ideal, but assuming you can't change it then I think you have 2 basic ways of wrapping this up. (I haven't tested either of these snippets, but they should give you an idea.)

# 1st approach: Block until all data has been loaded

    var fullyLoadProjects = function() {
      var deferred = $q.defer();
      var numInFlightPromises = 0;
      var projects = [];

      // First load your project IDs
      $http.get('url-for-projects').
        then(function(data) {

          // Then load individual projects
          angular.forEach(data, function(projectId) {
            numInFlightPromises++;

            $http.get('url-for-project/' + projectId)).
              then(function(data) {
                numInFlightPromises--;

                projects.push(data); // You could also store these as a map of id-to-project

                if (numInFlightPromises === 0) {
                  deferred.resolve(projects);
                }
              }).
              catch(function(data) {
                // Up to you how you want to treat this type of an error
              });
          }
          return projects;
        }).
        catch(function(error) {
          deferred.reject(error);
        });

      return deferred.promise;
    }

# 2nd approach: Partially load data (the IDs) and then fill things in as you go

    var incrementallyLoadProjects = function() {
      var deferred = $q.defer();
      var projects = [];

      // First load your project IDs
      $http.get('url-for-projects').
        then(function(data) {

          // Then load individual projects
          angular.forEach(data, function(projectId) { 
            var project = {
              $loading: true, // This is unecessary but could be used to show loading indicators
              id: projectId
            };

            projects.push(project);

            // Fill in more project details as they load, but don't hold up the UI
            $http.get('url-for-project/' + projectId)).
              then(function(data) {
                delete project.$loading;
                
                // Update the original item in-place so that any ngRepeat renderer bindings will be triggered
                angular.copy(data, project);
              }).
              catch(function(data) {
                // Up to you how you want to treat this type of an error
              });
          }
          return projects;
        }).
        catch(function(error) {
          deferred.reject(error);
        });

      return deferred.promise;
    }

For what it's worth, I think the 2nd approach is preferable, because it requires users to wait less before seeing *something* :)"
2014-08-26 14:14:43;Feature Toggles (Feature Switches or Feature Flags) vs Feature Branches;"To me, feature flags have always felt like feature branches and I think there is a smell about them as they have problems like:
Not all branches will get tested in your CI which will ends up as a similar problem to features branches.
The code to turn the feature on/off often gets left in the code anyway adding the the complexity of the overall code base.

I don't have a good replaced solution though, perhaps some kind of micro service frame work where you just add in/replace a new service."
2014-08-26 13:26:17;JSON databinding;"I'm not *entirely* sure I understand what you're asking, but I think you might just be looking for a way to evaluate your interpolated variables within your strings? If so, you could use Angular's [`$interpolate`](https://docs.angularjs.org/api/ng/service/$interpolate) service like so:

    $scope.sender = 'Brian';
    var jsonData = { intro: 'Hello {{sender}}!' };
    var interpolated = $interpolate(jsonData.intro)($scope);
    // At this point, interpolated will contain 'Hello Brian!'Can you provide a reduced test case on codepen or plunkr? I'd be more able to help if I could see your code.If you have unreconstructed {{curly braces}} in your angular app, angular isn't loading. Unresolved stuff like {{varThatWasntInitialized}} will just be blank. I'd look to your init code.Are you saying you're putting angular bindings into your json like so?

    {
        ""intro"": ""Hello {{sender}}!""
    }It could simply be that the {{sender}} tag is out of scope, assuming you're able to step through your app initialization without any errors."
2014-08-26 11:13:12;Restmod integration guide! REST Api with relations, jsonroot support and more!;
2014-09-02 21:11:12;Is it possible to reload a specific view instead of the entire state (ui-router)?;"Tried this?

    $state.go('stateName', paramsObject, {reload: false});

The `reload: false` flag prevents the page from being reloaded (and thus any of the parent states)."
2014-09-02 19:01:37;Have you guys seen anything like this 3D Image gallery in the angular world or do I need to roll my own solution?;"there's a project https://github.com/zackbrown/flickrous that does something similar

look into the project https://github.com/Famous/famous-angular

might help"
2014-09-02 18:50:39;Angularjs Directive – Accept Number Only;It seems like you could just use **Number(newValue)** and check that it is not NaN.
2014-09-02 18:21:28;The Big List of AngularJS Resources;"what's with that way too big header, manHey Renee. Can you add http://www.angularcourse.com? I'm the author.

There's actually another post and a good discussion about Angular Course here:

http://www.reddit.com/r/angularjs/comments/2f7ziz/i_quit_my_job_to_teach_you_how_to_launch_a_full/"
2014-09-02 17:04:55;The nitty-gritty of compile and link functions inside AngularJS directives;"Great article! I use directives all the time, but never knew this. 

Guess I should read the docs more closely..."
2014-09-09 18:47:21;006 Adventures in Angular Build Processes - DevChat.tv;
2014-09-09 17:47:22;$scope.ctrl = this OR controllerAs;"`controllerAs` since this is the canonical way of doing this now. No pun intended![This might help you](http://toddmotto.com/rethinking-angular-js-controllers/)Could you post a brief snippet showing how these two methods are used? I'm not familiar with the concept...Can someone explain to me the benefit of this approach (other than easier inheritance with nested controllers)?

It makes things like [$scope.$watch](http://toddmotto.com/digging-into-angulars-controller-as-syntax/) and other scope methods rather tricky doesn't it? Does Angular 1.3 or 2.0 change anything related to controllers and scope? If so I'll wait before relearning it."
2014-09-09 17:33:54;Login page handle - server side or client-side?;"I always opt for letting angular handle everything to do with client side authentication. And to clarify client side authentication is really there for user interface purposes and doesn't do much for security other than provide a place to store a session/authentication token. True security is handled on the backend which can be handled just fine with a restful api.

I may be missing something but I don't see how using server side templating could benefit this situation.If I'm understanding you're basically asking whether or not your login page should be part of your angular app or not?

I prefer to have the login page be part of my ng-app. That way all of the scripts and such are loaded when requesting the login page / while the user is actually logging in. This should mean that the app is already loaded and hence no waiting once the user clicks 'login'.

If for some reason you want to prevent the client side code from being pulled by an unauthenticated user then you'd have to take the other route.Angular.  Of course you will need your backend server to validate the credentials.There was a video about large scale angular apps & the guy from doubleclick showed how they did login. Not remembering the details, but I copied their approach for an app. I render the index.html & login on the server side & check if the user is logged in, which allows me to omit modules (by not rendering the <script> tags) by checking whether the user has access to it. It also allows you to insert a javascript object with the user profile, which you can then use during .config() phases after angular is loaded. It also prevents you from loading angular when the user is not logged in yet. (If that fits the style of your app)I really think that if you're going to use angular, then use it in the way in which it's largely meant to be - client thick apps.  Let it handle everything.How do the giants (microsoft, google, etc.) handle their login?"
2014-09-09 14:30:49;Angularjs menu bootstrap;"What kind of menu? Have you taken a look at this? http://angular-ui.github.io/bootstrap/#/This is too much of an open-ended question. Using Bootstrap (either the [Angular Bootstrap](http://angular-ui.github.io/bootstrap/) or plain vanilla bootstrap - along with a component like [UI Router](https://github.com/angular-ui/ui-router/) - any menu system is possible and relatively easy.

You'll need to give more detail about what you're looking to accomplish to get more useful feedback."
2014-09-09 10:04:49;Binding isolate scope to controller using 'bindToController', in conjunction with controllerAs in version 1.3.0 of AngularJS;"Haha, I've got some this in some code commented and ready to go for when we upgrade to 1.3.0 so I don't have to do ""self.item = $scope.item""This is cool but new to me. Is this something that I'd use in a directive? How would I integrate this with ui router to give my directive different states?"
2014-09-16 22:14:57;Anyone use Thinkful?;"I've recently done the Thinkful Angular course. It's quite good and having weekly mentor meetings really helps you to actually do stuff. As of course you don't want to show up empty handed to the meetings.

The course material itself is pretty good as well.I am also thinking about taking Angular with Thinkful and I understand your apprehension. I been doing front end development for a while and I am familiar with Javascript and dabbled into Backbone and get the general idea of MVC JS frameworks. but it does seem like that Angular is the winner in the MVC battle. 
I'd be curious to know if other people have taken that course and how they feel about it."
2014-09-16 19:41:21;Some cool AngularJS Datatype Editors (ADE);"> ADE requires jquery, bootstrap, and angular

Any chance it will be changed to an angular-strap dependency?  It's probably about a fourth the size of jquery+bootstrap, and would keep things angular-only.Thanks for sharing. I'm planning to use some of those in my app. Does that make use of animations? I had a project that implemented this kind of input boxes, but we wanted to nake them fancy, and made them 'flip' with css transforms (or were that transitions? something css'ey). It would be great if there were hooks to add your own animation classes for transition between edit and view modes."
2014-09-16 17:48:27;Asp.net MVC and ng-template;"We use Razor to generate our templates for Angular.  This gives us some flexibility with server side detection of mobile devices and lets us have another layer of security.  

We aren't rendering Partials directly into our pages, but instead use directives, ui-router, etc for controlling when they need to be loaded into the DOM.

Our Partials are served via MVC as a PartialViewResult from their appropriate controllers:

    public PartialViewResult Index() {
        return PartialView(""_Claims"");
    }

There are other things in MVC that we're taking advantage of.  

  1. Using Areas to define ""Components"", as discussed here: https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub

  2. Using the Bundler to keep our modules etc in separate files and then pull them all together into one production script.

  3. If you're not using it already, Chutzpah lets you execute your Jasmine tests via the VS Test Explorer and allows you to check your code coverage.  Like /u/BStruthers we also use a (tiny) controller that looks like so:

    [RoutePrefix(""app/templates/members/"")]
    public class Members {

        [Route(""SomeRoute"")]
        public ActionResult SomeRoute() {
            return PartialView();
        }
    }


This allows us to use razor which is nice as well as provide easy server side security or other checks / logging / whatever you wantFor one, why are you using cshtml templates to generate your angular templates? AngularJs already provides a view engine and data binding.

Secondly `@Html.Partial` will write out the html in the partial view as soon as the rendering engine executes that statement. You would be better off using [ngInclude](https://docs.angularjs.org/api/ng/directive/ngInclude) and providing the url to partial view actions if you need the views to be generated on the server for some reason."
2014-09-16 12:26:48;ng-grid and a REAL REST API;
2014-09-16 07:42:46;[HELP] gulp wiredep won't add angular-bootstrap .js to project html;"Fixed ... Apparently the exclude: ['bootstrap'] applies a wildcard in the comparison. Once I removed the exclude it seems to be working 

P.S. I still wanted the bootstrap.js to be excluded so I modified the wiredep:

    gulp.src('app/*.html')
        .pipe(wiredep({
          directory: 'app/bower_components',
          exclude: ['bootstrap.js']
        }))
        .pipe(gulp.dest('app'));

Now it only excludes the bootstrap.jsEven though you figured it out, it's easier and likely cleaner to just specify overrides in your bower file for each dependency that you need to ""fix"".  Bower also includes some other shit you may not need, like the LESS files...  

https://github.com/taptapship/wiredep#bower-overrides

    {
      ""name"": ""test123"",
      ""version"": ""0.0.0"",
      ""dependencies"": {
        ""modernizr"": ""2.8.x"",
        ""angular"": ""1.2.x"",
        ""jquery"": ""2.x.x"",
        ""angular-animate"": ""1.2.x"",
        ""angular-cookies"": ""1.2.x"",
        ""angular-sanitize"": ""1.2.x"",
        ""restangular"": ""1.3.x"",
        ""angular-ui-router"": ""0.2.x"",
        ""bootstrap"": ""3.2.x"",
        ""angular-bootstrap"": ""~0.11.0""
      },
      ""devDependencies"": {
        ""angular-mocks"": ""1.2.x""
      },
      ""resolutions"": {
        ""angular"": ""1.2.x"",
        ""modernizr"": ""2.8.x"",
        ""jquery"": ""2.x.x""
      }
      ""overrides"": {
          ""bootstrap"": {
              ""main"": [
                ""dist/css/bootstrap.css""
              ]
           }
       }
    }

Here's bootstrap's [bower.json](https://github.com/twbs/bootstrap/blob/master/bower.json) for comparison."
2014-09-23 23:53:24;Reverse engineer Angular's $injector (Video);This was really great, I haven't had much time to actually dive in under the hood and learn what angular is actually doing. 
2014-09-23 18:09:12;Angular Sprinkles - Writing Rails-flavored AngularJS;"Wow that's actually really really cool.

Couple questions:

You say it loads angular through the gem. 1.2 or 1.3?

How are you running integration tests? Does capybara pickup angular model changes or do you have to fire up protractor? How about unit tests for the angular code?"
2014-09-23 17:57:31;Bypassing server-side routing / getting it to work with client-side routing;"The technique I use with Express is to set up a route that matches `*` and have it serve up the Angular app:

    app.get('*', function(req, res) {
      res.render('app');
    });

Note that routes are matched in a first in, first out (FIFO) order, so this route should be your very last one.

Also you may have to add a `<base>` tag to the head of your page if relative URLs are broken:

    <base href=""/"" />

I hope this helps!If you use fake paths for client side routing you will run into issues when reloading. The only way around it is to use hashes like you said.You'll need some kind of server-side redirection so that any time a non-existent path is requested, it redirects to you main Angular index file, which will then handle the routing properly.This is commonly achieved with a .htaccess file and the mod_rewrite module if you use Apache as a web server.Can't tell you the exact rules you need off the top of my head, and I'm typing on my phone so we'll have to rely on another helpful redditor to post an example of what I'm talking about..."
2014-09-23 15:27:38;Free Ebook - AngularJS Succinctly;"Required field: Phone Number

AKA: Everyone's number is 1234567890Does this book teach me how build a complete working app
or is it merely just a reference material?"
2014-09-23 15:25:31;Build a Joyent Pricing Menu with AngularJS;
2014-09-30 16:05:58;how do i integrate js lib to angularJS?;"Code that requires direct DOM access belongs in Angular directives, because that's Angular's mechanism for passing a DOM element to your code. I'm not familiar with VelocityJS, but you would generally create directives in Angular to hook UI libraries up to DOM nodes. You can implement a directive so it passes parameters from the application to the library and you can set up callbacks or listeners if necessary.

The idea is simple, but it takes some practice to do it well. Fortunately, someone else has already written the integration code for most common libraries.Check this one: https://github.com/cgwyllie/angular-velocity"
2014-09-30 06:23:07;[Help] Requirejs+Angularjs, sharing factory between modules;
2014-09-30 01:27:43;Custom AngularJS directive for Luhn validation - Alex Lindgren;[deleted]
2014-09-29 22:37:33;Learn AngularJS playing Super Mario Brothers;Doesn't seem to work on FFLooks cool, but won't load on FF and froze after a couple minutes in Chrome
2014-09-29 18:14:03;Animated rotate directive;
2014-10-07 22:20:12;A quick checklist for newcomers to AngularJS;
2014-10-07 21:31:17;AngularJS source code learnings from under the hood [Part 1];"Nice deconstruction, having just completed an AngularJS project this is answering many of my ""I wonder how they did..."" questions, but didn't have the time to find out while working to the deadlines.Yeah, superb breakdown.

The way they handle `$digest` cycles is really genius - and something I would **never** think of - and I wonder how long it took them to get that right and be really performant. That's really the core of Angular right there!Really nice article, /u/toddmotto. Had a few ""ah"" and ""oh"" moments and made me fall in love even more with angular.Why do they use an IIFE for the isArray function, but not for the indexOf function?
"
2014-10-07 15:44:30;AngularOS (First draft);"The ftp client makes sense. But can you explain why you would like this to be an os?Sorry, it seems you're confusing operating system with file manager. Your app looks like a file manager.Nice! If you open two windows of the same directory and then you close the second one it closes the first one. Maybe you want to take a look at that. I like it, I just can't seem to find a way to ""go back"" in folders when I first open them :("
2014-10-07 07:51:10;Mocking the backend in E2E;"It looks like that is in reference to external APIs. I do similar things- we use a microservice architecture, and have small mocks of those pieces provided from other teams and other vendors. If those services were to experience downtime, we couldn't run our tests. Or, when disconnected from the internet, I still have access to some dummy data.

Rule out thumb is anything you have access to, test; anything else, stub.

Also, there's nothing preventing you from running your tests twice- many times against the mock API, and again on production after deployment with the full stack."
2014-10-07 05:45:45;I didn't use angular. How would it have helped?;"Without seeing you code, it's hard to say.

Angular encourages code that is modular, leading to easier testing.

Angular handles most of the underlying browser platform, leaving only project specific vice for you to write.

Angular has a rich ecosystem and large developer base, resulting in secure, well designed coffee with frequent improvements and updates.ui-router is probably one of the things you would notice first as being a boon to productivity and overall app routing. Having the app structured as a state machine allows multiple ui-views and data resolutions based on state controllers (incredibly powerful) is a great way to do things. 

A lot of the baked in angular directives such as ng-repeat and ng-if are a joy to work with. Filtering and ordering data is also incredibly painless. No need to roll your own solution, it's all included.

As your app grows you'll start wishing you went for a mature frontend MVC. I've been down the path of custom JS front-end frameworks, and they work well until they start becoming a maintenance burden.[deleted]For the URL, 

http://www.dotaplayer.info/?hero=102&player=18275361&sort=0&detailhero=102&detailplayer=18275361&page=1&match=920521497

Could have been more like this in angular: 

http://dotaplayer.info/player/detail/18275361?match=920521497 etc. 

The URL parts tell the router which controller and view to load, and can pass parameters as well. Based on how you structured those views, the URL would vary, but that's the gist of it. 


To imagine your app as an angularjs app, try to visualize each thing in your app as views, directives, services. The left side list is an ng-repeat list of player card directives. Eg \<ul>\<li ng-repeat=""player in playerList"">\<playercard /> \</ul>, then the playercard directive uses returns a nice template based on the player details passed to it. (I'm sure I've messed up the syntax somehow, but just trying to illustrate). 


That's a crazy amount of data and icons. How'd you source all of it?"
2014-10-14 22:41:16;Building templates with gulp into JS for the template cache and testing with Karma;"I would say it is worth merging your templates.js file into your app.js (it's less requests for the user). I compile Jade as normal and pass it to https://www.npmjs.org/package/gulp-ng-html2js to then create a module with the templates.

I use https://www.npmjs.org/package/karma-ng-jade2js-preprocessor to compile Jade into JavaScript at test time. It will create a module and you will need to be sure to load this module alongside your application module in your tests. I believe the default module name is just the entire path and file name of the Jade file, except it changes .jade to .html.
"
2014-10-14 19:52:55;{{flash.message}};Nice catch I assume that stuff like this will be gone once the Google web crawler starts compiling JavaScript.  I cannot understand why it was downvoted below 0. This is a huge issue and people downvoted instead of answering...
2014-10-14 19:20:22;JsTree directive for angularjs;"Thanks for this!  I was looking around for a good tree directive just yesterday and found a few, but none really seemed ""descent"".  Even if this is a ""proxy-directive"", good work!"
2014-10-14 16:09:26;Angular Web Console Hacking (1/4) – Services;"Never knew this was possible, it will be very handle for debugging and playing about with an application. Up until now I have been adding a break point in some common code and calling components from that scope. This is a totally awesome article, this will be extremely helpful for the project I'm working on!

I look forward to the rest of the series."
2014-10-14 15:37:34;Building Angular Apps Using Flux Architecture;thanks! I really liked this. That hat...
2014-10-21 22:17:18;Unable to set controller variable to factory property;"Try something like this: http://plnkr.co/edit/63dkoyF3UUhp3clR6yR9.

I used your current plunker as much as possible. We want to go ahead and return the week on the object you are returning in the factory.

I would consider making getWeek return a $q promise instead and then in your controller you can do the following:

    schedulesFactory.getWeek().then(function success(week) {
        // Now we'll assign to the scope
        $scope.week = week;
    });

Let me know if that works for you. I'll be happy to answer anymore questions you have as well!"
2014-10-21 20:36:21;AngJobs.com - AngularJs job board;"Nice job getting so many job postings populated into your job board!

Since Angular.js is usually integrated with a backend, I would love to see the ability to sort by backend technologies. For example, show me jobs using Django and not Java... 

Awesome none-the-less... love the minimalist style."
2014-10-21 19:10:43;Angularjs Warning Validation;"You can tackle this in a variety of ways.

The first and simple way is to not enable/disable the button on form.$valid, but to create your own boolean flag on the $scope and change it based on your own rules.

e.g.

**$scope.isFormValid() {**

**//check what needs to be checked**
 
**return true/false;**

**}**

html:

**<input type=""submit"" ng-disabled=""isFormValid()"">**

but if your form is large and complex, you might run into performance issue watching a lot of stuff change.
 
another way to go is creating your custom validations using the [ngModelController](https://docs.angularjs.org/api/ng/type/ngModel.NgModelController) .

Once you understand the $parsers/$formatters a bit, you can add additional logic to your input(s) that handles warnings. (I would classify warnings differently than valid/invalid/errors).You don't need validators for this.  Given a `isWeakPassword` function on your scope, just show or hide the message:

    <form name='reset-password'>
         <input type='password' ng-model='password' required>
         <p ng-if=""isWeakPassword(password)"">This is a weak password</p>
    </form>"
2014-10-21 19:01:54;The Frivolous Frontend Framework;
2014-10-21 18:24:53;A couple small libraries and apps I wrote;[deleted]
2014-10-28 22:50:31;[Help] AngularJS without using templates?;I have no idea what you're actually trying to accomplish, but it sounds like Angular is overkill.
2014-10-28 19:54:40;"Angular 2.0 - ""Drastically different""";"What in the living hell is this.

> <div [ng-repeat“|todo]=""todosOf('good')"">

In what universe could that possibly be better than:

> <div ng-repeat=""todo in todosOf('tobias')"">

I can guarantee this new shift has taken absolutely no direction from the developers who actually use it. It is a being developed by a bunch of soft Google lifers who have no experience with what people go through at companies all across the world and what breaking changes like this do the them. It's a bunch of guys in a fucking room playing with Google balls and saying ""wouldn't it be cool if"".

Fucking hell. This is so stupid it makes my brain bleed.

I don't fucking want atScript. I want javascript. I dont need to learn your stupid fucking language. 

edit: please help me get Google's attention [here](http://www.reddit.com/r/angularjs/comments/2kp9ge/open_plea_to_google/)In short: ""We're abandoning Angular and creating an entirely new framework that we're calling Angular 2.0 so it doesn't look as bad.""
Oh man. I think I'm going to be sick.I honestly thought this article was an Onion-style fake-out until I noticed the video. The video is a bit more explanatory, but some of these changes seem really out there.I'm fine with scope going away, it's always felt too verbose to me and I've long avoided using the prototype. I welcome improvements to Directives and ng-controller getting dumped. However, they seem to be piling on a bunch of garbage with template changes and AtScript(which I won't use). 

That template example is abhorrent to my senses. I've never been completely comfortable with ng-click and ng-model as it feels like going back in time to inline javascript. This syntax is a bridge too far for me. It reads like gibberish at first glance rather than near conventional HTML.

I've been eyeing Polymer for a while, but not put in the time to build anything with it. This 2.0 direction may be the push I need to jump ship.A lot of the issue was when Google merged in Durandal and made its lead a Dev on Angular. I think Angular will likely be in a weaker position for a little while due to the announcement of these big incoming changes. This is due to the fact that it means:

* don't get too attached to the current API
* most or all current apps will not work with the next incoming version
* now that we've learned how to code the ""angular"" way, we must now learn how to code the ""angular 2.0"" way

I'm interested to see exactly what changes are coming, what benefits are gained, and generally what the main reasons are for the changes. Is it performance reasons? Because I don't think the changes are due to making angular easier to use or understand just from looking at the code snippets in the article.

Another interesting aspect of these changes is the mention of removing the DOM wrapper in exchange for just ""dealing with the raw DOM"". I immediately think of how React chooses to write to a virtual DOM when I want and handles writing to the actual DOM as needed. I'm not familiar enough with the DOM wrapper in angular to make a good comparison though. I found creating an app with React to be easy and fun, and while React is not immune to huge future changes any more than Angular is, I do find it simple to both pick up initially and to come back to after taking a break from a project. Hopefully Angular 2.0 will have the same characteristics.Hopefully they'll come to their senses.I just puked a little in my mouth!I really hope this change is for the better. I love AngularJS, and try to use it in all my projects. Would be a shame for a great framework to go downhill.

Guess that's just the nature of the beast though. Still have over a year before it comes out. Hopefully Google will make sure 2.0 moves Angular forward. Now we web developers know how it feels to be a Java developer stuck with an outdated version of a monolithic framework.[deleted]"
2014-10-28 19:28:48;Chaining resolves with UI Bootstrap's $modal service;Look at line 16. Nothing is providing that foo. Remove it and your code works.
2014-10-28 18:52:20;Learn How to Implement Typeahead with ng-grid;
2014-10-28 17:51:59;Datatable with inline editing?;The new version of UI table has this feature  link here: http://ui-grid.info/docs/#/tutorial/205_row_editable
2014-11-04 15:15:36;ng-europe, Angular 1.3, and beyond: What about Migrating from 1.3 to 2.0?;"I feel like this ""no migration path"" argument people are in is ridiculous. 

1.3 is great and will continue to be supported by the community for years to come.

Taking migration into consideration, while often beneficial to the user, can be a complex technical feat...especially when you're trying to be on the cutting edge.

This feels like a superfluous argument by lazy devs ...""I learned 1.3, now I gotta learn it all over again?!"" No you don't, you just need to adjust to new syntax; besides our profession is always changing if you don't like rapid change, you should try something else.


TL;DR - this is the Facebook redesign of the web dev community.   1) significant change occurs  2)  people get mad at the new, want old stuff back  3) after weeks of use, reverse course and claim to like changes  4) repeati feel excited, seems angularjs team is the first to embrace ES6 seriously... i don't believe migration will be a huge issue because i been in software development for years... Well, ""It’s also been confirmed that there will be no migration path from Angular 1.X to 2.0.""

http://jaxenter.com/angular-2-0-112094.html

Better to learn/use another JS Framework until AngularJS 2.0 is release.Hm that didn't really answer the question. Still seems like an unknown migration path"
2014-11-04 14:46:13;AngularJS Tutorial;
2014-11-03 22:38:50;Learner question. Coming from sql, how do I implement large databases in json for angular;"The answer is that you don't send all 80000 rows down to the browser - you have Angular use a backend REST API (or similar) on the server, which will be responsible for sending just the data that you need to display at any one time.You would eventually need a backend, I would prefer a Node.js backend and works with a REST API from it. 

With a backend, you can easily port over the logic from the spreadsheet and get the result from it easy enough. This approach is very much scalable with the size of the database and handle relatively well with dynamic data.

However, if you prefer to do it on the client side, with angular, I would export the sql to a flat json file and load it on runtime. It would take longer to load, but faster to query. This approach will scale pretty badly with the size of the database and works decently well with a flat structure with static data.Personally, I have my backend running in Node, which uses Bookshelfjs and Knexjs (bookshelf is a nice ORM built on top of the knex SQL abstraction layer). It does the regular SQL stuff, and I use hapijs to serve up JSON as a RESTful API.Is there any particular reason you need all those rows at once? You should be doing some filtering on the server side. I would think anything on the client would explode sorting through that much data."
2014-11-03 20:10:12;I wrote a Web comics platform in Angularjs. Backend are static json generated files from the FTP Folders;
2014-11-03 19:55:04;angular-locker - A simple & configurable abstraction for local/session storage;Hi, thanks for sharing. Have you tried this with a Phonegap project?
2014-11-11 22:40:56;Using Bluebird With Angular Protractor;
2014-11-11 21:20:14;angular scope data cleanup;"When all of the references to that scope are removed, the scope is cleaned up. If your controller is the only reference to that scope (it should be) then it should be destroyed when that controller is no longer in use.you can see that easy, user $scope.$on '$distroy' and just console log something.. 
the scope will not change when you switch controllers, its destroyed when the state changes or if there is a directive with isolate scope, when that directive gets destroyed"
2014-11-11 20:35:33;Get Angular in your closet - Awesome AngularJS Shirts;$26 for a t-shirt is bullshitOh man, just thinking about how many chicks I'm going to get wearing that.ngShirtIs *The Scarlet Letter* popular again?
2014-11-11 16:48:10;Google Inbox;"It is built with GWT like most of Google public facing apps. Angular is mostly used for internal tools at Google. 


If I remember correctly, and words is the only big public Google app built with angular Do any public Google Apps actually use Angular? itunesconnect.apple.com is written in AngularI hadn't thought of it. Good question!https://cloud.google.com/ - not so feature-rich app, but very important for Google site. Frontend is with AngualrJS.
and more of them, 1600+ apps in Google and much much more in the world.
Do you really still looking for proofs? ;)I think UPlays new Account Management Site is in Angular
https://account-uplay.ubi.comyeah i did the same thing was sort of surprised they don't put their money where their mouth was."
2014-11-11 15:44:49;Brace yourselves, future is coming: ES6, AtScript and Angular 2.0;Man, I was just starting to enjoy a lack of Angular 2.0 posts...Looking forward to the final version of Angular 2these are quite some heavy changes to Angular 2
2014-11-18 20:13:14;[show] My first AngularJs APP using Material Design :);"Gave an upvote because it is pleasant overall! My concern though: I thought nothing was supposed to appear from thin air in material design. Shouldn't your main content have a slide-in transition when appearing?There's issues with scrolling in the menu on mobile. It registers as a touch so the animation happens and then pauses when it realizes you're scrolling, then continues with the click when you're done. Looks goodlooks nice, is the code open sourced? wouldn't mind a peekCan I ask you how you got the circle to originate from the mouse click location on the left bar?Good, +1 !

don't minify your code too soon, I wanna look at it for my needs :)

This is completely broken on my Lumia 920. Everything is overlapping and out of place."
2014-11-18 18:21:07;How to Build a GitHub Webhook with node.js;
2014-11-18 18:06:03;Refresh view data after update?;So you're adding a record to your database, completely independent of your client? If so, you'd need to either poll the server for changes (messy and error prone) or you could use socket.io. It's really up to you. When you make that post request, you can still get a response. You can either put the json in the body of the response to refresh your client, or you can return a 200 status code and assume that the client is in the correct state(or both).
2014-11-18 16:43:32;Angular 2 Bits: Unified Dependency Injection;It gets better but... it's still ugly as shit :)
2014-11-18 14:29:41;Am i doing this correctly!!!;"The promise you should be resolving is this.readuserinfo. If this method returns false, is the false still being pushed through to the below function? Console log and see what the returned promise is in your register user function.

Also, in your controller (or factory) try using $on or $watch or read the event API to only read if registeruser has a value.I see on stackoverflow that you do not want to use promises.

My serious advice to you is either to stop using angular completely, or be ready learn promises and the rest of the angular stack or you'll never understand what you're doing or how things interact with eachother inside angular.

Here's an example of a proper controller that fetches information from a 

https://github.com/SchizoDuckie/GithubStats/blob/master/js/controllers/HomeCtrl.js

And here's the accompanying service:

https://github.com/SchizoDuckie/GithubStats/blob/master/js/services/Github.js

and to help you understand what a promise is:

> A promise is like a bank check. The paper is a promise to deliver you cash. Until the promise is resolved (you go to the bank and cash it) you only hold the promise, but it's still worth something and you'll eventually resolve it. Should you decide to shred the piece of paper, the promise is rejected.

Here's a valuable resource for wrapping your mind around promises and how beautiful they really are http://promise-nuggets.github.io/"
2014-11-25 20:00:45;Custom animation - should I use ngAnimate or not?;"Write a CSS utility. PM me in the morning for sample code (holiday traveling today).

Edit: see https://github.com/DavidSouther/flaming-sansa/blob/master/src/client/svg/utilities/drawPath/directive.js and https://github.com/DavidSouther/flaming-sansa/blob/master/src/client/animation/style/service.coffee and comment with questions."
2014-11-25 16:34:20;In Defense of AngularJS - Why You Should Continue Using AngularJS;"I really like Angular, but I like React better... The article has little real substance. It mainly suggests that those who don't like AngularJS just don't understand AngularJS.

How about an article addressing the following:

* AngularJS 2.0 is complete rewrite, almost a different framework entirely, which makes AngularJS 1.x a dead-end. Applications written in Angular today will not get new features or core improvements without a rewrite to Angular 2.0.
* Also, why would the Angular team do this unless: a) the team leading Angular is incompetent, or b) Angular has real deficiencies?
* Either way, that is something in the ""cons"" list for Angular.

EDIT: formatting, typos, it was too longReading one of the anit-angular blog posts 

> Bad Idea #4: Redefining well-established terminology

Yes! The developer guide in the documentation first refers to 'Services.'

But..

> Note that you are not registering a service instance, but rather a factory function that will create this instance when called.

Further on Dependency Injection brings up

> The way you define a directive, service, or filter is with a factory function.

along with dependency annotation.

Further down, we get to modules

> You can think of a module as a container for the different parts of your app – controllers, services, filters, directives, etc.

Yet further, Providers!

> The injector creates two types of objects, services and specialized objects.

...

> The injector needs to know how to create these objects. You tell it by registering a ""recipe"" for creating your object with the injector. There are five recipe types.

Providers goes on to describe values, factories, services, providers, constants and special purpose objects.
"
2014-11-25 05:42:50;Starting off with Angular;"egghead.ioThinkster will show u how to develop a complete Reddit Clone app from scratch using Angular 1.x and Firebase. It's free too. http://www.pluralsight.com/tag/developer,angular-js* http://www.learn-angular.org/
* http://campus.codeschool.com/courses/shaping-up-with-angular-js/intro
* http://www.egghead.io/

I also recommend signing up for http://www.ng-newsletter.com/Check out Codementor's curated guide of learning AngularJS: https://www.codementor.io/learn-angularjs 

Cheers!  Just go to sleep and wake up in a year when the first release of 2.0 is out.

Starting off with Angular right now is a wast of time since all your know-how will be useless by the end of 2015"
2014-11-25 02:45:38;Learning AngularJS Animations;
2014-11-25 01:24:08;AngularJS: The Bad Parts;"I find this article a bit confusing. Sure, AngularJS has its bad parts, but as the author points out it is also very popular at the moment. Technology only evolves if it is used, so it seems to me that a lot of these complaints have a higher probability of being addressed than they would in a less-popular framework.

It seems like it's  railing against a framework for not being superior in every aspect, like the old Beta vs VHS argument. More interesting to me would be whether or not these issues have been raised to the developers - posting a blog is easy, but taking ownership and driving the changes necessary to get the ""bad"" parts ironed out takes a lot more effort."
2014-12-02 23:03:44;Best practice for directives that place elements elsewhere in the DOM?;"For something like a modal it's simple enough to just use the templateUrl then append the iElement to the body during postLink. You should check out the source for angular-ui-bootstrap. That ought to be a good resource. Hey man, 
I recently posted an autocomplete directive on github. It opens a suggestion box for any input field in a defined container. It sounds similar to what you are trying to achieve.

Check out the code it might give you some inspiration.

https://github.com/hakib/MassAutocomplete


""So for directives like popup menus and dialogs, you usually don't want to make the templates child elements""

I am not 100% what you envision with either of those, but let me take a stab:

With a popup menu, I believe you are talking about something similar to the Windows context menu.  I don't see any issue with that being a child element of a directive.

    <my-shopping-cart-directive>
      <div>My shopping cart stuff...</div>
      
      <shopping-cart-context-menu-directive open-menu=""openContextMenu"">   
      </...>
    </...>

with that, you can have a mouse event attached to the myShoppingCartDirective to open the context menu.  I don't see where the concern would be with overflowing as the popup menu's content is quite static.  Also, you would utilize the mouse event information to position the menu in the window.


In regards to a dialog box, that to me is very similar to a modal.  This is a directive where you would only have a single instance and you can emit messages to open it with whatever information you pass.  Or you can have it as a child element as it will do a fancybox-ish fixed position anyhow to take up the whole screen.

Either way, I am not sure what you original concern is.  Your second paragraph involving a $http request and attaching it to the scope with a $compile.... I mean that is a bit over the top and I don't see the benefit.


Hope that helps!"
2014-12-02 20:04:51;How to properly use watch and watchCollection in AngularJS;
2014-12-02 18:32:14;Which scrollbar directive are you guys using?;"Scrollbar directive? What are you attempting to achieve?Best scroll i'v seen is http://cubiq.org/iscroll-5. It's not an angular directive but anything can be wrapped (though I can think of why you would need to bind to a scroll... ).  I caution you to reconsider whether or not it's necessary.  It's nearly impossible to create a JS scrollbar that will handle all of the situations that native ones do.

That being said, I developed one for a small side project a while back. If you decide to use one, I hope you find this useful :) https://github.com/mattbalmer/mb-scrollbarWe rolled our own. The js implementation is pretty much the same as ng scrollbar, but we changed the CSS classes to match our style guide. 

Ours is combined with a separate directive that hides browser scroll bars, rather than doing both in the same directive. We rolled our own. The js implementation is pretty much the same as ng scrollbar, but we changed the CSS classes to match our style guide. 

Ours is combined with a separate directive that hides browser scroll bars, rather than doing both in the same directive. "
2014-12-02 15:34:40;Angularjs filter not working in routing based app.;"Your problem is probably somewhere else in your code. [I can run your code just fine in this Plunker using angular 1.3.5](http://plnkr.co/edit/MdRr3fOeuTYPZRcsItMQ?p=preview)Does your searchText output when changed if you just include a <p>{{searchText}}</p> somewhere in the template?Seeing as Anaphase's code runs fine, it's probably a scope/aliasing problem based on code you're not showing us. Try putting your searchText in some objectTry changing to

     <input ng-model=""search.searchText"" class=""form-control""  placeholder=""Enter keyword to search..""><span class=""form-control-feedback glyphicon glyphicon-search""></span>  


and

    <tr ng-repeat=""student in main.datalink.allstudents | filter:search.searchText"">      

https://thinkster.io/egghead/the-dot/  

I remember having scope problems when I didn't use the dot in my first applications.[deleted]Angular's filters only work on arrays.

http://www.reddit.com/r/angularjs/comments/2p5d00/would_you_recommend_angularjs_or_pure_jquery_if/cmtpull"
2014-12-02 00:27:25;Is AngularJS best choice for SQL server interaction?;"The angular stack typically looks like:

Angular -> REST API -> web framework -> ORM -> SQL

So you can use angular to put together a user interface, some client-side services, and some rest API infrastructure code.

But you will need some web framework to implement the rest services, and something to talk to your SQL dbs.Usually you wouldn't have a client side framework directly connect with a database like that.If you do not want to build a REST API and since you probably just want to play around, you should try Parse or Firebase.You need a server side piece of code to handle the MySQL interactions. AngularJS is a client side framework.

If you're looking for an all-in-one and are ok with Java, you could look into Play Framework.Generally you will want a server sitting between your client app and your database that exposes an API that returns JSON.

With a RESTful interface between the two, I'd say YES!

I'm on an Aussie.gov project now with Angular 1.3. We are using WebAPI for REST, MVC5 for no reason whatsoever (other than routing) and SQL*Server on the backend. I personally can't see ever going back to MVC or webform-ish development; it's soo slow compared to Angular!

I cannot imagine a reason for anyone to do a web project with anything but a front-end framework such as Angular paired with a RESTful service layer. It's just so darned easy to populate a Javascript object and XHR it to a REST layer. It's responsive on the client side and stright forward on the server side. The HTML is easy to write and maintain and the Javascript isn't horrible if you follow some best practices.

I rewrote a PHP webform I had with Angular and REST. The code was much shorter than the PHP version, had many more features and took less time to develop.What I do is have my Angular.js interact with my routes that I defined on my PHP framework of choice. I always have it return a JSON object so it can update the view accordingly.

But you shouldn't have a client-side framework interact directly with a database, you gotta have a middle man.No... you never want to expose your login credentials on client side code.Sigh"
2014-12-09 23:43:06;I'm transforming the Official AngularJS docs into super high-quality videos (creator of angularcourse.com);"Creator here:

The big goal here is to create AngularJS docs that are really easy to watch and understand.

I decided to start this project after a bunch of conversations with my students from www.angularcourse.com. Many of them are putting a lot of effort into reading the docs, but are finding it extremely difficult to understand what's going on. 

The big problem is that the docs assume a lot of pre-existing knowledge. If you know your way around, the docs are reasonable (still not easy), but if you're still new, it's a huge struggle.

Would love to get feedback from you all on if this is a problem that you're facing too. Thank you!  This will be great!  I also will be checking out angularcourse.comNow all we need is someone to turn the AngularJS docs into something comprehensible. I mean, I'm loving it but the documentation is kinda absolutely terrible, especially when you're just a beginner. This is a rather fortunate coincidence: over the last few days I've opened up the docs page on custom directives and repeatedly aborted reading it. Angular is awesome, but the docs are soooo dull and weighty. I've completed your angular course and thought it was excellent, so I have no doubt that these video docs will be a great resource.

Thanks again Gordon!Right on Gordon! Thank you very much for doing this. Of course, something like this is appreciated, carry on please. :)This is a great idea. I'm sharing with all my colleagues. Look forward to seeing the content roll out!You're doing god's work sonJust want to say I saw your post on reddit a while back for angularcourse and I saved the link. A couple days ago I was all set to dig in and go through the entire course only to be met with a page asking me for 90 bucks. I was super bummed.Good stuff, thanks!

 As someone who doesn't really like watching videos, however, what are the odds of an interactive tutorial ala CodeAcademy or such?Man. I would like to subtitle the videos in Spanish, since there aren't many sources in our *idioma* (language in Spanish).

Expecting to see more from this. :)This is a great idea. The official AngularJS documentation is helpful but hard to follow at times. Can't wait to see this.So this is vaporware?Amateur trying to earn a buck, get a life hobo"
2014-12-09 22:45:22;[Advice needed] Promises and pulling dependent resources from REST service (scoping/this issue);"Posting some progress, I got a bit further, but I'm not there yet!
My code looks like this now:

    $http({
        method: 'GET',
        url: 'http://www.example.com/api/player'
    }).success(vm.loadPlayerData);
    
    vm.loadPlayerData = function (data) {
        var deferred = $q.defer();
        var promise = deferred.promise;
        promise.then(vm.loadClubData());
    };
    vm.loadClubData = function () {
        vm.resultSet.forEach(function (obj, i) {
            vm.resultSet[i].club = i;
        });
    };


Now I just have to replace **i** with the result of a $http promise with obj._links.club.href as the URLWhen you're doing async things, you should use async tools. For example: I pretty much never use for loops to iterate.

So for example in Angular:

    $q.all(data.map(function(item){
      return $http.get(item.url)
    })).then(function(dataArray){
      //dataArray is an array of the data returned from the $http call
    });

Using Array.prototype.map and $q.all lets you take an array of data, convert it into an array of promises, and end up with a promise for an array of the results of the promises."
2014-12-09 21:12:42;Check out my first angular app - moviezen;"Looks nice. I don't know what RT and TMDB's policies are but you generally don't want to check your API keys into source control. 

Also, I've been looking for something like angular-loading-bar for days. I don't know why I never bothered to Google it but it's a relief knowing there's an easy solution out there! Thanks for putting your code up.very nicely done! is that a real loading bar or just an animation? it seemed to have the same pattern on every page, regardless of how much data was being received.
Movie categories would be a nice addition! Looks great btwLooks really nice! Code looks pretty clean too. Nicely done. I gotta make something similar, but instead of movies, songs or something.
just out of curiosity, how long did it take you to build ?[deleted]"
2014-12-09 17:52:12;Is thinkster.io still a good way to learn angularJS?;"I haven't tried thinkster.io before but it looks promising. Todd Motto recently released [AngularJS Tutorial: A Comprehensive 10,000 Word Guide](https://www.airpair.com/angularjs/posts/angularjs-tutorial) which is very good. 

Another good resource is [egghead.io](https://egghead.io/) and their [AngularJS tutorials](https://egghead.io/technologies/angularjs) (I saw some egghead videos on thinkster). 

Also, if it's clean and structured Angular code that you want to write, you might want to check out [John Papa's Angular Styleguide](https://github.com/johnpapa/angularjs-styleguide). 

I have a huge list of Angular resources I used when I was learning Angular in a [readme](https://github.com/JonathanZWhite/frontend-resources/blob/master/README.md#angular) - hopefully it might be helpful. I used this guide from thinkster: https://thinkster.io/angulartutorial/a-better-way-to-learn-angularjs/
Some of the things are a bit outdated, but the guide is still relevant and got me from knowing nothing to writing AngularJS apps.I'd personally go with egghead.io, then completely write the angular tutorial app on the official website. That gives a very solid foundation as to the basics and you can do all this in a weekend and get a very nice grasp on the basics.

Then I'd try to build your own app during the week. You'll definitely run into issues which will tell you what's missing in your knowledge. While doing this I'd try to search for some blog posts for more advanced stuff.

The problem I've found with Angular is that 1) it's actually super easy to get into. Binding looks like magic. You get used to it quick. 2) There are tons of great videos, guides and tutorials on doing basic things. Like binding one input element to another dom element and how to build to-do list apps, contact-lists, ecommerce apps (without the payments stuff).

And then 3) hits, there's this huge cliff where the biggest problem is 'you don't know what you don't know'. So that's definitely where the advanced blog posts come in. I don't have these resources for you on hand unfortunately, but my point is that after about 20 hours or so you're pretty comfortable building any of the apps in the beginner guides, and then you really want to be looking for guides that explain workflow on large projects. So try to look for some 'strategy' and 'workflow' guides. For example there will be 100 examples explaining what a factory, service or controller is, and how to use it even, but not why you should use it, where, in what context, and why one should be picked over the other in what situation and why. You'll learn how to use scope and rootscope and services quickly, but a lot of beginner guides don't tell you where you should store your data ideally and you'll be left to wonder which tool to use. So look for those answers as you'll soon be wondering when you build your own app about the 'WHY'. The 'how' wasn't all that difficult for me in many cases but the why one method was better than the other left me clueless at times.

Big tip: try to immerse yourself in the 'angular way'. Sounds creepy but if you feel the need to write jQuery, look for a way to do it with angular instead. It's only magical and quick and easy and reusable and testable and maintainable if you push yourself to structure as much as possible around angular. I agree with the references to egghead.io. In fact, I paid for the pro version and *highly* recommend it. Especially if you don't have weeks to spend roaming around yourself.

I also suggest looking at the more advanced stuff in yearofmoo.

As one mentioned, there is now a correct way, via Todd Motto's opinionated style guide, to write 1.3 apps that ease the transition to 2.0. Unfortunately 80% of the material out there is outdated. It would be great if one could reboot the universe, but most people aren't going to go back and rewrite their helpful StackOverflow tips from 2013.I can't vouch for thinkster.io as I have never used them.  I learned with the tutorial app on angular's website over 2 years ago.  It still uses the latest code and shows how to write tests on your application.  After you get a grasp on the framework, you would then benefit by looking at the seed app project structure, and then reading the article at http://brettandrews.info/preparing-for-angular-2-0-today/ about writing code that will transition easier to 2.0 when it comes out.

If you follow DRY and SOLID principles of programming, you should be able to write clean and concise code.  The hardest part about learning Angular is transitioning from a jQuery/vanilla javascript mind set about the DOM and to a controllers-modules-templates-directives mindset.  That will just come with time and practice.I started with the codeschool.com [shaping up with angular.js course](https://www.codeschool.com/courses/shaping-up-with-angular-js), it is a decent tutorial, but if you already have a basic understanding of angular I think some of the other suggestions would better serve you.Pluralsight.

But these other suggestions are excellent too.  
Be prepared to spend much time on StackOverflowis it free? it looks good.not free, but well worth the money http://www.angularcourse.com/"
2014-12-09 15:22:37;[help] What are some practical uses of extending an angularFire array factory? Can I do this?;
2014-12-16 21:27:54;JSON Archetypes: Simple Data Standards;
2014-12-16 18:46:19;configure $logprovider based on parameters??;
2014-12-16 16:57:39;AngularJS one-time binding syntax;How much of a performance difference it make is what I wish the article talked about.
2014-12-16 14:12:58;Reducing amount of nesting in binding on deep nested scope variables?;"You could create a function in your controller and access it from your template

<h4 class=""bio"" ng-bind=""{{getDescription()}}""></h4> Since javascript uses references for objects, as long as it doesn't conflict with however the rest of your data, there's no reason you can't do things like this.account = this.options.user.account in the controller, which might be more hairy if you're doing editing but can still work. "
2014-12-16 11:47:16;ng-pickadate, an angularJS wrapper for pickadate.js;"What would be ideal is a date picker without a jQuery requirement. I've used http://angular-ui.github.io/bootstrap/#/datepicker but it's a little wonky (particularly with interpreting ""YYYY-MM-DD"" as UTC, which then appears as the day before in local time). Any other suggestions?I've created this project because i did not found any good datepicker without JQuery dependency.

HTML5 datepicker is not an option for today. It still doesn't work in latest Firefox version.

The native angularJS port mentionned in comments has many issues (https://github.com/alongubkin/angular-datepicker/issues) and maintainer doesn't seem to reply.

I agree it's better to have JQuery free dependencies, but pickadate.js is a big project and will be maintained for a long time.https://github.com/alongubkin/angular-datepicker here is a pickadate fork with no jquery requirement.

I didn't write this. Interesting. pickadate.js is my favorite date/time picker plugin.

As for the HTML5 picker, it doesn't work in all browsers (even some modern ones), and from what I have experienced is very hard to change how it appears.I tried the jquery free version of this datepicker and had a massive hassle getting the styles to work.

Switched to this one. https://github.com/adamalbrecht/ngQuickDate

it's closer to a classic datepicker, but is small and jquery free!HTML5 has a native datepicker, why is it still necessary implement them with JS? It will just break things on some devices."
2014-12-23 23:24:43;Best place to host a small Angular app with no backend?;..[github pages](https://pages.github.com/) ? HTHFirebase hosting FTWHard to beat digitalocean.com - full access for $5/mo.  And you can add a backend later - the VM is yours.  I recommend the docker droplet even for small projects - so easy to publish.Amazon S3 with Amazon's CloudFront CDN. Extremely performant and quite inexpensive. There's no point in purchasing a server instance/VPS if there's no backend.Recumbent using GitHub Pages and Firebase. Firebase is amazing and a great way to store data in JSON format.99cent vps and firebaseCDNhow about github? I think this is the best place for you :P
2014-12-23 19:19:32;ui-router going to new page;"ServerQuestion: If the user is not authorized do you show login.html or index.html?

WebClientQuestion: Do you want to bootstrap your Single Page App on either page?

Sidenote: For a landing page I wouldn't recommend using ui-view just to ensure SEO.

You might be interested in something like this below
index.html -> login.html -> (subdomain/index.html || app.html)
"
2014-12-23 13:41:23;Book Review: Learning AngularJS by Ken Williamson;
2014-12-23 08:36:33;My favourite AngularJS resources for developers and beginners;
2014-12-22 22:20:51;angular-intercom;"Maybe explain what this is, exactly?

The title for this is an angular module name.

The github page ""clarifies"" that it's a wrapper for intercom something or other.

I still have no clue what this is or why I should be interested in it.feel free to contact me on twitter @gdi2290 I'll update the example website later todayWhat is Intercom? Whats the gist? The website says it does some tracking and messaging or something."
2014-12-30 22:52:38;$evalAsync not working with AWS dynamodb call;"It's very unlikely that this has anything to do with $evalAsync, or anything angular for that matter. My hunch is that you are doing something like ""$scope.wallet = []"" inadvertently. Or your wallet object doesn't actually know how to push very well ;). To eliminate the latter, just confirm that $scope.wallet[0] has what you expect during the $evalAsync (immediately after the push). If that seems normal, I'd check your initialization code for $scope.wallet, and see if that's being called multiple times.this code should be in a factory/service also you're pushing on $scope.wallet rather than $scope.wallets. Can you show the controller code"
2014-12-30 22:45:32;My app performs terribly in firefox, could anyone help me debug it?;"Shift + F5 (Or Tools > Web Developer > Performance)

You can profile your code there. I'm just heading out the door but I'll take a look at it later if you haven't found anything. Let us know how it goes![Watch Functions Are Invoked Many, Many Times](https://www.exratione.com/2013/12/considering-speed-and-slowness-in-angularjs/)

You have a lot of watchers and observers. 

Usually watches are used to watch a single value. The more you have and the more you do with them, it is going to add up fast.

Also, I didn't look too much into it, but it looks like the observers you have on nearly every page are doing a lot of work also.

Maybe instead of watches you could poll the info yourself at longer intervals?

I would look into that direction first. Nothing you are doing is that complicated except those.I recently had an issue with an Ng app running like crap in Firefox and smooth in Chrome... turned out I was doing a `$timeout` before binding manually in a directive that ended up in an infinite loop as it'd `$timeout` again after the bind.

Once I gave up and started hunting other bugs, this issue came to the fore and all is well again.

Anecdotal, but I hope it helpsOne other thing non code related,  disable any plug-ins that might have an effect.   I know it seems unlikely but just humor me. I would try commenting out Moment.js related things - it seems to add a lot of timeouts when doing XHR call (doesn't matter for what reason).For anyone who finds this now, I'm chatting with the op, but I ran into the same issue and the culprit was the nested flexboxes. You can either restructure your dom to use less than 6 nested flexboxes, or set every six or so nested ones to something that will pull it out of the flow (position absolute/fixed or floating the div). I'll update this once I confirm with op that it fixed his performance issues."
2014-12-30 19:01:35;I wrote flexible and customizable autocomplete plugin in angularjs. Please provide your feedback;"I went to the preview (http://embed.plnkr.co/CYcQgE5sbInTs76SU8An/preview). In the textbox, I typed in ""nepal"" and hit the enter key. The box fills with ""India"". Expected behavior: the box fills with ""Nepal"".on input enter the dropdown appears. I select ""England"", dropdown disappears and the text box is empty. I expected ""England"" appear in the input boxCool plugin. Looking forward to use it."
2014-12-30 11:34:18;I wrote an explanation of how to cleanly integrate SignalR into an angular application;I want to read this but the site appears to be down. Either that or it's not compatible with IE on Windows Phone. 
2014-12-29 21:49:12;jQuery can do most things that JavaScript can do, but is this also true of Angular?;"[deleted]Angular is not meant for ""general purpose"" use like jquery. It serves a totally different purpose. Angular is for apps that warrant an MVC architecture for you to build the entire app upon. There are lots of cases where it does not make sense to use itjQuery is a library and angular is a framework. You really do not use a small piece of angular. You generally leverage it as the foundation for your application development. I suppose you could use a small piece but that is kind of odd. angular supports jquery.First off, JQuery uses JS. Secondly you're comparing apples to oranges.  "
2015-01-06 23:33:53;Ruby error, please help;"Install ruby, then install the compass gem.

http://compass-style.org/install/""You need to have Ruby and Compass installed and in your system PATH for this task to work.""

Reading the warning tells you exactly what is needed.  A quick google search on the warning provides lots of responses on what exactly needs to be done.

Install Ruby, Install compass, Make sure they are in your PATH.
"
2015-01-06 20:30:41;Why you can still use Angular (or not);"It should be added that this is a specific response to the article referenced in the post, not a standalone general argument for Angular.  There are tons of good reasons to use Angular.  This article just speaks to many of the issues people complain about with it.[deleted]angular-material and ionic framework.Funny, I also [wrote a response](http://hallister.me/why-broad-generalizations-are-bad/) to the same article today. Those types of arguments are particularly frustrating because they make broad claims that are only half-true.

I think at the end of the day, this is a sign that Angular is hard because its *so* different, and developers (myself included) are lazy and we don't want to learn the different way of doing things.All I have to say is that Angular isn't going to disappear anytime soon.

I work for a company who does a lot of work in career websites and Angular has pretty much became a staple in a requirement or desired skill for front-end developers. It is essentially the new jQuery, but seen as something more important than a supplement to javascript.Boo.. seems like just written to gain views for some reason just cause no one is out there dissing Angular. Sticking with it..."
2015-01-06 20:23:47;A Tale of Frankenstein and Binding to Service Values in Angular.js;"I know this has been posted but it's a useful resource and I don't want anyone to fall into the same trap I fell into. I've now got thousands of lines of code that I want to change so they bind to services.Does anyone have thoughts on binding services to $scope instead of binding individual properties of the service to $scope ?  For example;

     $scope.getName = Monster.getName;

     <h1> {{getName()}}</h1>

vs

     $scope.monster = Monster;

     <h1> {{monster.getName()}}</h1>



"
2015-01-06 16:33:33;Help request: Binding authentication state with AngularFire firebaseAuth;
2015-01-06 16:29:56;showing messages based on id;"As a beginners tutorial i recommend this: https://docs.angularjs.org/tutorial/step_00

It covers lots of the how to get things started, AFAIR most of them are really close to what you've described what you want to achieve.

> How do I make it so that when I click on a Defect, it will load up the appropriate message?

 A router: basically a hyperlink with an angular attribute. In your case change from /defects to defects/:id
For each of the routes you can (and should) define a template and more important the controller that therefore uses services to fetch the data (in your case firebase)

> How do I approach adding messages to the appropriate Defect?

tha'st not taht angular related question. you'll have to think about how your data (database) should be structured. 1:1, 1:m ?
from there it's basically just one ore more input fields that represents the ""model"" of the data, which needs to be synced with the server."
2015-01-13 21:48:35;Any advice on writing modular code?;"I would agree with @theduro for loading external dependencies but to organize smaller chucks of code I create standalone Angular modules. Using the fractal/components pattern that is listed within the style guide and in many organization tutorials (https://scotch.io/tutorials/angularjs-best-practices-directory-structure) has helped me to easily organize my modules.

This structure allows you to easily move code from one project to another because it is organized based on its functionality. Following the old pattern has caused me some hard navigation on big projects and has made it much more difficult to move a whole feature to another project.

In my experience I have found it best to make each one of my components be its own angular module that can often  include views, a service, a controller(s), and sometimes directives. Then you are actually injecting full standalone pieces into your main app when you import them. A good example is an editor component I am building within a project as it contains the controller, service, and view. Now if I want an editor in another project, I can just copy that whole component folder into the other project and inject the module into my app.In my experiance using a module loader / compiler (Browserify/RequireJS) is the way to go for this. I personally use Browserify. Then you need to adopt the module folder structure pattern. Look into ""atomic"" Angular module design. It recommends creating a folder for each module, and then folders with that folder for any additional components of that module (Directives, Templates, Controllers). You then use Browserify to stitch everything together.

Once you have accomplished this type of organization, it's as easy as taking the folder of the module you want to re-use and dropping it into another project that is setup in the same ""atomic"" module structure."
2015-01-13 18:07:24;Controllers, Directives and Services. Angular 101.;
2015-01-13 14:55:43;Making Skinny AngularJS Controllers;"I came to this sub to ask ""How can I code angular 1.x apps so that they will easily migrate to 2.x in the future"". 


Didn't even need to ask. Thanks."
2015-01-13 09:53:55;My AngularJS learning curve :-S;"I think [this](http://www.bennadel.com/resources/uploads/2013/feelings_about_angularjs_over_time.png) learning curve is more accurate. I think we're all in that same place:

1. Oh man, this is so complicated. Wtf is a service, modules, factories? I just want to build an app!
2. Ah, my application is well structured, my services serve all of my modules, everything is organized, and everything works *so* well. DI is the best thing since sliced bread. And everything is just perfect. Angular is awesome!
3. Fuck, fuck, fuck, fuck. Fucking scope, fucking digest, fucking eval, fucking everything. I'm done with this.There is ""the Angular way"" then there is ""everybody else's way"", and they are radically different. As soon as you learn to do things the Angular way, it smooths out rather nicely and is very productive.

For example: early on, a bunch of people wanted to get the paged table jQuery widget 'jQuery DataTables' working with Angular. I tried as well, and succeeded, but it was a nightmare to get there.

As soon as I realized that:

**""Duh! Angular works well with javascript data that is already shaped similar to your view!""**

then all I had to do was make 3 things: a filter that would only show X records at a time starting at page Y, a directive that allowed me to select X from a drop down, and another directive that set Y using a series of numbered buttons. The rest was prettying it up using CSS. No external lib required.

Piece of cake!

 I never need external libs for UI stuff anymore.

There are plenty of eureka examples like that:

A report with totals is no more than a table of rows and columns, and filters that loop through the rows totalling a particular column.

Likewise piece of cake!

If you stay within angular's opinion of how it wants to do it, it's great! If you try and fight it, angular will win.

Edit: I'd like to suggest this too. Don't try to do too much at one time. The paged table above is one such example. Some people may be tempted to make the whole table a directive (I was). But if you break it up into a couple directives and filters and such, it works very well. You can always build up to a 'grand unifying table directive' at some point in the future.This is the problem with AngularJS. I've been working with it for close to two years... I tried out a flux implementation with react and it was mindblowingly simple, and MUCH faster than the angular equivalent.[deleted]If you zoom out, the cycle will repeat a few more times. Once you get it down though, it will be great. Frankly, I don't know how I could do many of these things so simply without angular!What are the axis? WTF per time? That's not a learning curve!Yep, pretty much.It would be nice if you label the x and y axis ;)I'm done with Angular. I was trying to learn it for my current application but there were too much of those WTF moments.

I'm now trying to learn Backbone (with React?). Or maybe Ember... Holy crap, I'm even thinking of using plain jQuery for this application!

Truth is, I'm a backend guy new to frontend SPA development. So any suggestion is welcome, particularly from those who have worked with Angular and have hated it. I don't like too much magic and I like to know what is going on in the code I write... Maybe Backbone will be the best fit in that regard?

I quit after I hit that 2nd wtf*increasing* Angular 2.0! *nosedives*I find it odd how people have such a difficult time with Angular.  Every time I hear about it, I get doubts over my confidence with the framework...


I had experience with Knockout and when I looked at Angular, I had no doubt it was going to be an amazing experience.  There was a slight learning curve with understanding how to actual create a directive and what the hell was in that return statement, but since that threshold, it has been clear sailing.Switching to ReactJS was the best thing I ever did... Angular just felt too dirty. Dependency injection breaking after minifying without using the alternate array syntax was the last straw for me."
2015-01-13 08:42:52;Protractor - How to interact with browser settings in tests.;Great Question! There are a few you can set in your protractor config file within the capabilities object. See [here](https://code.google.com/p/selenium/wiki/DesiredCapabilities) for more info.
2015-01-20 21:38:42;AngularJS datagrid paging, sorting, filter using PHP and MySQL (Help! No data!);
2015-01-20 20:07:17;Right way to tell all directives that data has already loaded;"Perfect place for a Promise to encapsulate the asynchronous operations. Your API returns the promise, when it resolves, all the controllers do their things.If you are storing the data in a service, you can just attach the service to the directive's scope, and then bind to it. It will update automatically.Move the http call into a service, and inject the service into both your controller and directive.

You don't need to use $scope.$watch, or $broadcast anything. With the $http service, resolves are built into the digest loop, so whenever data changes in your service, that change will automatically be reflected in your view if its bound there.

Think of the service as the model layer of your application. It should maintain the current state of your dataWhat I've been doing is frontloading my data by creating a textarea element:

    <textarea myData>{""hello"":""world""}</textarea>

then create a directive that reads that into a service. Then use that service as a dependency wherever you need it.

As for the broadcast, you can always use this instead

    $rootScope.$watch('mydata',function(){ childScope.doThings() })

so I'm not sure why you would ever need a broadcast


"
2015-01-20 18:18:40;Use npm as a build tool to load your html/jade templates into your $templateCache;
2015-01-20 15:41:23;Translation and localization with AngularJS Part 2;
2015-01-20 14:06:10;Awesome Chart directives for AngularJS;"Is there actually any accepted library for charts? Or an overview of the options? NV3D is what I've been using, but it's ""being refactored"".This looks awesome. I haven't had the need to use charts in my projects so far but will definitely come back to check this out. Starred on github.Firefox starts to hang if I open the site, Chromium uses 100% of one CPU core.Nothing happens on iPad....This seems a bit slow rendering-wise on mobile, trying this on a Nexus 4 with chrome.This is excellent. Thank you very much.

I think attaching label, legends, etc models directly to the scope was a bad choice though. It would of been better to keep those nested in a 'chart' object of sorts"
2015-01-27 19:58:02;AngularJS Material finally reached 0.7. Demo available at material.angularjs.org;"First demo (bottom sheet) fails on android chrome. The popup is too low.

Actually, a lot of the demos aren't very clean on my phone (Nexus 5, chrome beta).  Maybe this isn't meant for mobile really?Just seeing this. Starred :)It's getting better with each release. Will consider using it in production app soon. Maybe 0.8...Never knew about this! Going to start using this!!!Can use it in the production? "
2015-01-27 19:23:43;Any good tutorials/resources for authentication using AngularFire?;"here is a resource I just found if it helps https://www.airpair.com/angularjs/posts/build-a-real-time-hybrid-app-with-ionic-firebaseI have used AngularFire on several apps and found that just fiddling with it here and there helped me to gain a better understanding of how everything relates. I was unable to find a really solid tutorial on  it but I am definitely down to help out if i can with whatever authentication you're looking into
dont' give up on the docs! they cover EVERYTHING, but you'll likely only use bits and pieces at a time. when you find a tutorial using angularfire, note which parts of the api they use, and then read up on those parts. i don't find reading dev docs like a book to be helpful or realistic.

simpleLogin and Auth are pretty darn similar (like you've said). Learning the differences and really digging in to figure out the how/why they're different will help you the most. (in my humble opinion, of course. )

When you reach that eureka moment and everything makes sense, share a working example on github/reddit so future yous can learn too!
checkout the angularfire-seed project. And try to understand what it does with the help of the official angularfire/firebase docs, i think it's a very good starting point as there is not a lot of extra functions implemented outside of the login and account managment. https://github.com/firebase/angularfire-seed"
2015-01-27 15:41:24;Easily animate scrollTo in angular apps with no jQuery dependency!;"Found this the other day for my project, looking for exactly like this. Bower install, add some references, and code ... Boom! Worked first time. 

Plus my project remains jQuery free which makes me and my users happyI don't really understand when people advertise Angular components without jQuery. Angular has JQLite built in, which covers a lot of jQuery's core functionality that isn't already handled by Angular elsewhere. Honestly, I would be more surprised by an Angular component *with* a jQuery dependency. "
2015-01-27 05:46:42;MeteorJS vs AngularJS ain't a thang! Ya dig?;"Boom you have Cheetos in your Jiffy> [Many agree](https://twitter.com/hashtag/meteorjs?src=hash) Meteor is quickly becoming the standard for new startups

A thousand tweets can't be wrong! =PIts weird how the conversation became angular vs meteor and not rails vs meteor or laravel vs meteor. Predictable, but still wierd"
2015-01-27 04:13:32;Decoupled client side oauth with Angular;"In my first angular app (which by the way I have not finished yet), I have an API endpoint that I make a request to when the user tries to login to get the access token.  I then save it in a cookie and make sure to protect against CSRF with a CSRF token.  What I don't understand in your post is the difference between ""store the user access token in a database field"" vs. ""make a call to the backend API"" the access token will be stored in the database in the backend API case and I do not understand what you are trying to get at.

Edit:
I am using OAuth2 server for my app itself (i.e. not integrating with Facebook, Twitter, etc. but my user's own accounts)I would suggest taking a look at [satellizer](https://github.com/sahat/satellizer). Truthfully I have not yet implemented it, but it seems like a very promising approach. Instead of using cookies to store access, it relies on localStorage and JSON web tokens."
2015-02-03 21:25:24;Modify user information in a database, AngularJS/Ruby on Rails;"1. Remove the `value=""{{...}}""` from your html. You shouldn't set the value directly, but use ngModel to set up two way data binding (see step 2)

2. On all your inputs, add `ng-model=""people[curContact].name""` or whatever property you want as your model

3. You haven't declared your controller anywhere in your html. You can add `ng-controller=""editProfileCtrl""` to your form, or surround your form with a div and and it there.
"
2015-02-03 17:46:41;"Why is dirty checking considered ""slow"", but a virtual DOM recompile and diff is considered ""fast""?";"Theoretically, they are different ways to achieve the same goal and the only performance differences are implementation details. 

Potentially, you can get yourself into a situation where an excessive number of or poorly written `$watch` statements in Angular's dirty checking can lead to poor performance. Since 1.3 naive `$watch` values are incredibly performant (eg don't write a recursive `$watch` in your own code). You can do the same thing in a `componentShouldUpdate` to get terrible performance.

In practice, there seem to be some situations where and `ng-if`, `ng-repeat`, and others will rewrite more of the DOM than they should for small changes (eg you move an element from index 3 in your array to index 2 in the array, and suddenly `ng-repeat` things the entire 100 element array needs to get rebuilt, and destroys all 100 `<li>` dom nodes). Now, I've been working with Angular for two and a half years, and I haven't seen that happen in production - if you do manage to get it to happen, save the code to plunker and open a bug report.I encourage watching the full video, but from this moment and on provides an excellent visualization into why it is considered slow:

https://www.youtube.com/watch?v=mVjpwia1YN4#t=348

This is a visual hand on demonstration of what happens when Angular, Ember, and Knockout's ways of Two Way binding and the Observable vs Dirty Checking paradigm are put side to side

All of them are fast in some, and slow in others, but they're all different scenarios of usefulness. My understanding, which may be completely wrong...

The way the dirty-checking loop works is it performs a loop. Each time it finds something that's dirty, it updates the [virtual] DOM.

And that's why one is faster than the other. Both are updating something, but updating the real DOM is really slow. Updating a virtual DOM is faster. The virtual DOM solution then goes through and passes all the updates from the virtual DOM to the actual DOM.

So hypothetically, if everything is perfectly efficient (i.e. no single object is updated more than once per loop), then the virtual DOM solution is actually a tiny bit slower. But realistically, changes are going to cause other changes to cascade, and some things will be updated multiple times. The virtual DOM solution reduces the performance impact of these redundant operations by making each non-final operation much faster.Comment says it all: try it youself! ;)

It seems counter-intuitive but Virtual DOM optimizes the repaint of the browser and it is faster by orders of magnitude.
And it can by done in 2.5 Kb (https://github.com/muut/riotjs)"
2015-02-03 17:00:21;Is it a bad idea to add underscore to my $rootScope?;"[deleted]Starts to stink a little like code smell. Should either be done as:

* a filter
* a function on the scope 
* or, a function on the scope that gets shuffled off to a service

You could ... but I tend to view putting anything onto $rootScope with a little bit of suspicion.
If you need underscore like functionality, take a look at ng-modern, an angular service implementation of Lodash (an underscore like library, but with better performance). You can find the details here - https://github.com/rockabox/ng-lodashYou might be better off using filters.. check out [angular-filter](http://ghub.io/angular-filter) 

Also:

    angular.module('app', []).constant('_', require('lodash'));I don't recommend adding underscore to your project unless you really need it. But if you do, it doesn't need to be added to `$rootScope`, or any `$scope`. It can be accessed as a global or an AMD module.

If you want to take advantage of DI to aid with unit testing, you can create a simple wrapper service that returns `$window._`."
2015-02-03 16:19:53;What's the best way to call a function on a child directive from a controller?;"Sounds like you need a service. Have a service poll your server and have the results stored within the service.

Both your directive and controller should have that service injected as a dependency, and $watch the stored data.This is tricky, but the way you're approaching it seems sound from the ground up which is the hardest part. If it were me, I wouldn't be afraid at using events. I get the same reaction that you do, but in your case you have a specific use case that's unique to a particular section of your application.

If your controller knows about the updates to the list of unscheduled appointments, it seems that `$broadcasting` an event down scope to your `long-list` directive could be effective. You can pass along additional arguments when you're broadcasting the event that could indicate which `long-list` you want to update. 

Unfortunately this means you may have to extend `long-list` to listen for these events which may not be used everywhere - but it's still pretty flexible

Another option is to create an additional ""augmentative"" directive that you apply to `long-list`. Something like `<div long-list long-list-unscheduled>` which would give you the event functionality without polluting your `long-list` directive itself which could be tested separately, etc. 

If your directive has an isolate scope, which I'm assuming it does, there's no good way to ""call a directive function from a controller"" - as this is by design.How does your `long-list` get its data? My guess is it's passed in from the parent controller, and you're using 2-way data binding with an isolate scope. If that's the case, updating the data in the parent controller should automatically update the data in the directive.

For example, lets say your directive is invoked via the following HTML:

    <div long-list=""my.data""><!-- markup --></div>

If your parent controller notices a change in the data, assign the new data to `this.data`. On the next `$digest` cycle, your `long-list` directive should render the new data. You can also watch for changes to the data from within the directive if you need custom functionality.You can pass a control object to the directive using 2 way binding, which lets you control individual instances of a directive from a controller.

See here for more info:

http://stackoverflow.com/questions/16881478/how-to-call-a-method-defined-in-an-angularjs-directive"
2015-02-03 00:26:33;Reusable Components in Angular: Design patterns, transclusion, and more;
2015-02-10 20:53:41;[Hiring] Front-end Developer @ Collective[i];/r/remotejs ? 
2015-02-10 20:37:52;Should I ever use multiple apps (vs one app with modules);"[deleted]I actually would love to know what his conversation yields. Angulas is a pretty cool framework that can easily allow you to keep the entire project in one app. At work someone put together a project framework that is totally allowing us to do just that, keep an entire app under one framework, no matter how complex it is.

Your specific requirements seem to have you leaning towards a more multiple-app framework, but I personally think that this way is not taking advantage of how amazing Angular is.

Hence my excitement at this conversation and what others have to say on it."
2015-02-10 15:52:13;triger jquery plugin in $scope;"I think you will need to attach the code you've written with jQuery first.

But generally speaking, you should write your listener this way.

$(document).on(""click"", "".className"", function() {
  // generate your datepicker
});

If you wrote $("".className"").on(""click"", function() { //some stuff });
You will put a listener to element who are already generated in the page which means that new ones won't have any event linked to them. 

That's what the first one does, it watch inside the entire document at any moment.

Don't forget that everything that angularjs does is async.You might be able to use the `$timeout` service to attach the event listener after the `$scope` has been attached.

Like this:

    $timeout(function() {
        $(yourElement).on('click', function() {
            // openDatePicker
        });
    });

That might do the trick. You may also be able to use [`$evalAsync`](http://www.bennadel.com/blog/2605-scope-evalasync-vs-timeout-in-angularjs.htm).Can you use ngclick on your dom element instead of attaching the click handler with jQuery?"
2015-02-10 15:01:41;The Art of AngularJS in 2015;Those were actually really good slides on angular.  Does anyone have the video of his talk?  I'd like to hear him talk through the slides, and I think it would be helpful for some of the people I know who are looking for a good intro to angular.
2015-02-10 02:46:00;I want to build a multi-room chat application, I’m stuck already.;"I am not sure where you are stuck, but you could try to move all the websocket/server interaction logic in a service. There you can hold an array of rooms and add the incoming message to the correct room.

The controller then only selects the correct room to render.

This is only a suggestion which in my mind should work, but I am not sure if this is the best or most effective solution. Looks like you need a layer between backend and front-end. 
Take a look at roomsjs for ideas"
2015-02-17 19:34:19;KnockoutJs computed equivalent in AngularJs;
2015-02-17 15:44:11;Getting started with Ionic;"So I got started with Ionic very excited, but under the wrong impression. I *thought* that Ionic was a collection of AngularJS directives that had 1) built in styles, and 2) iOS-native versions of their directives. I know that's wrong now, and it just using a webview, I still think it is a pretty cool idea.

So, when you use Ionic's pre-defined structure with their directives, your app can also be compiled to native code, too. Simple things like lists, forms elements and buttons, view layouts, and things like that would native. Anything that isn't predefined would just use a webview to render the html+css+js. "
2015-02-17 15:33:51;Advanced Directives with Angular JS | Screencast;
2015-02-17 11:28:38;AngularJS in use on the new version of the BBC homepage;I think angular is on the internal publishing app, the homepage uses react.mmm buzzword porn.The old website unfortunately was 10x better, so not a great advert for angular. 
2015-02-17 09:36:18;Need some input on design for an app which checks whether a submitted answer is correct on every input change.;"I think the only really safe way to do this is do your answer-checking on the server.  You've already identified the problem with sending answers down to the client (open or encrypted). That said, there might be some kind of one-way encryption scheme out there you can use.  The client downloads the encrypted answer and a magic one-way encryptor can take the user's response, encrypt it and compare that against what the server provideded on the initial download.  I don't know if such a magic thing exists.

In the absense of magic, I think this leaves you needing to query the server.  You've also identified the challenge here - traffic.  I understand that web sockets are very fast, but that would still result in a very chatty client-server relationship. I think you need to follow the same pattern that many type-ahead search / drop-down widgets operate.  Wait for 1/2 second or full second pauses in the user's typing. Then, send your request.  If the user types some more, ignore the result and send a new request once they pause again.

I actually hacked a company game that was much like this.  They had been rolling it out to different offices and by the time we got to play it, they had hardended it somewhat (although I didn't know that at the time).  I used fiddler to see what was happening and discovered that I could just start the game and then send a final score back to the server using the unique ID that the server assigned when the game started.  Fun times!  No one got in trouble, although there we some pretty hurt feelings for a little while.  I had to buy someone a bottle of Makers to settle it :).If you care about the security of your answers, then you'd have to check it on the server. Encryption won't prevent some smart folks from figuring out how it works. Things you can to optimize for performance:

* Throttle / debounce your user input.  Only if the user stops typing for a given period of time (say 200 ms), then would you send the request to the server to check for the correct answer.  [angular-debounce](https://github.com/shahata/angular-debounce) works well for a use case like this.
* On the server, cache your database lookup in memcached, Redis, or some other in-memory store so that you aren't doing a query on your database every single time.

That said, depending on your app, it might be worth just sending down your answers to the client.  [A lot of multiplayer quiz apps (like QuizUp and Trivia Crack) don't hide the answers](http://www.dailydot.com/technology/how-to-win-at-trivia-crack/), because for them, the value of immediate feedback for the majority of their users is higher than any random cheater that they could ban.  Keep those product / tech tradeoffs in mind when you're implementing something like this.Won't a mathematical one-way hash accomplish what you want?  Just send the correct hash down from the server and use the same hash function to compute the hash of the current typed in response locally on the client after a delay (second of inactivity or whatever).  Compare the computed hashes and if they match then you have the right answer. 

A SHA or MD algorithm should work unless I'm mistaken. "
2015-02-24 21:12:41;Why would you want multiple controllers in a view when using Angular?;"don't intend for this to sound eli5, but:

- do you have a programming background?

- if so, then do you know what a constructor is?


- do you know what local scope is? with respect to functions and variables, i.e. a variable is isolated within the closure in which its defined. 


**answer**: did you know every scope object has a constructor? its called a controller. Think of angular.controller as a constructor for the scope object. and think about ng-controller=""someController"" being equivalent to ""new Scope()"" which in most languages implicitly would invoke a constructor to create the object. it basically allows a way to augment/initialize a local scope with the properties / methods you want on there. 


for me, its a matter of good programming practices, you wouldn't want a class with a bunch of un related functionality, it would be a mess and lead to race conditions and shared data issues. Hence, with controllers, you can augment the scope object only as much as you need for that section of that page, and it those properties are local to only within that local ng-cotroller tag.In the original angular ""way"", it was relatively common to do `<div ng-controller=""thisDivCtrl"">` to put the stuff that you'd want to have exposed on that div right there. That's a good reason to have more than one controller in a single view.

Nowadays, it seems much smarter to have one controller for the page, and to replace any of the stuff where you'd actually use ng-controller for, with a custom directive.

That said, if you use ui-router, there could be multiple views on a single page, (left-column nav plus right side main, for example), each of which needs a controller. I also compress things- if I have some tubers, I've got a tubers-list, a tubers-detail, a tubers-edit page, which I tend to put in /tubers. So there'll be three or more template HTML files, a module.js file that handles the routing and creating the actual app.tubers package, and a separate tubers-detail.controller.js and tubers-list.controller.js and so forth. So there's multiple controllers in one directory, associated with different aspects of an overal URL route, but they handle /tubers, /tubers/:id, and /tubers/:id/edit.

PS: I do the module.js thing out of convention- my concatenation gulp workflow makes sure that all files named module.js are listed first, since concatenating angular files is annoying if you try to do a module('app.tubers').controller call before you did the module('app.tubers', []) call to create the namespace.http://forum.ionicframework.com/t/multiple-controllers-per-view-global-app-controller-wtf-is-a-controller/1070/2

> A ""controller that does more than one thing"" is antithetical to the ideals of Angular - each controller should ideally do one and only one thing. Like Unix commands, think of Angular controllers as each having a particular job to do."
2015-02-24 15:36:24;Using predefined data in jasmine test;"This is just a problem of asynchronicity. `beforeEach` returns *before* it runs its function callback, so `scope` isn't available to you yet.

You're right, you can fix it by putting it in the `beforeEach` block. And I'm not sure how Jasmine does this, but in Mocha I write several beforeEach blocks, each to handle a different piece of logic for easier reading.

You can also put it inside your `it` block.

Side-note, you should init your mock module like this: `beforeEach(module('videoApp'));`On the subject of using predefined data for tests, I've being using this small helper so far to load my fixtures from JSON files before the tests, but it will only work well with Jasmine 2.x due to beforeEach async syntax.

https://github.com/darlanalves/jasmine-fixtures"
2015-02-24 14:40:28;has anyone tried hooking up twitter v1.1 api with $resource?;I think you still need a back-end service to handle generating the hmac because of the secret keys, seeing as Twitter still use OAuth 1 but I might be mistaken now.
2015-02-24 14:04:55;Angular — Opting out of AngularJS News, Jobs and similar unwanted ads;"> Robots… you may regret using them later on.

Made me giggle."
2015-02-24 13:52:15;Does anyone have experience using React with Angular?;"I'm considering it now. I would use ngReact.

I have a large high traffic website which has a lot of angular sprinkled around and a few areas where its a fixed page app. I want to make the primary search pages more dynamic.

I've been doing a lot of css work to prevent nasty reflows and make things feel solid. That's often your first big win: if you know a directive will occupy a certain space then reserve that space using CSS. Don't wait for it to render and then squirm the page about. Fade elements in when appropriate.

The primary gain in React is when you have component trees, not just single ng directives. When one of those components state changes then just that one is triggered to recalculate its DOM fragment, and then all components in the tree that changed have their changes merged into a batch update.  Angular will rebuild the whole component and reinsert it.

If you have directives sprinkled here and there, then there isn't as much gain.

But as your app grows then you have more watches and bindings on the page. Lots of angular bindings are misused because they were only set on init or they won't change, but the angular digest cycle means that it will have to check them all anyway.  React components get marked as dirty when their state changes, and only dirty components recalc their views (and of course only actual differences in the DOM end up being actually applied).

The downside to having angular + react is that you have more js. But they are both likely to be on CDN in your visitor's cache.

Somewhat related, but I recently rewired a very complex Angular app to use Flux architecture. It really cleaned up a lot of data flow issues that I was having. I was using $emit and $broadcast and my directives and controllers were making async calls. My directives were like mini apps with controllers and state. Pure react-flux doesn't keep any state in the components, the stores (view models) hold that.

It really helped to have a strict policy: The directives call actions. Actions do async and server communication, they dispatch new data to stores, stores emit changed messages and the directives listen for those and update the DOM.

I used this: https://github.com/christianalfoni/flux-angular because it was the fastest way to get it working. It uses yahoo's dispatcher.There is a related PoC project https://github.com/teropa/angular-virtual-domI did this with great effect. We reduced some things like filtering from almost 4 seconds render time (with large collections) down to under 100ms. Not all of that was React, some of it was also just a cleanup. Also, some of it was the fact that we're coming from Angular 1.08. 

So I actually implemented all of Flux and access it from an Angular directive. This is the link function 

    React.render(
      React.createFactory(BigNastyGlobal.someReactComponent)({project:scope.project}),  element[0] );

Notice you can pass an object from Scope to the props of a react component, kinda neat right?

Through our `BigNastyGlobal` we can also listen to Flux actions, `var registerId = BigNastyGlobal.someDispatcher.register(function(payload){` and just make sure to clean it up when the `$scope` gets destroyed.

    scope.$on('$destroy', function() {
		    	//Cleanup React
		        React.unmountComponentAtNode(element[0]);
		        BigNastyGlobal.someDispatcher.unregister(registerId);
		    });


Now if you send an Action, Angular can listen within your directive and route it to a service and then the response can be called as well.


The `BigNastyGlobal` as seen above is actually created via Browserify and/or Webpack. The rest of the project is not yet implemented with module loader, or else we wouldn't need a `BigNastyGlobal` at all, but it works for now. 

We chose NOT to use ngReact because this is really simple to do and our React Components/Flux app are completely decoupled. This way we can remove Angular completely in the future by simply picking up the Actions angular is currently completing.

I wrote a small app using ngReact. 

I mainly did so because a job I am applying for uses React to speed up a ""legacy"" Angular app.

Using React inside Angular is quite intuitive and feels just like creating a directive.

Like dmackerman said, you could make Angular pretty performant without React, but I think ngReact is a good introduction to React for someone currently familiar with Angular.

My next project will probably me a full React app, just to see the difference in development styles.

If you want to see the source code of the app I made using ngReact, let me know.I say this as an Angular user: if you're trying to combine React's rendering with Angular, I think you're missing the point of React.

React is meant to be about removing state and one-way data flow. The rendering is a nice add-on.

You should try React (and Flux) on its own, and then make a decision about what is right for you.I haven't, but I haven't found it necessary either. If you really want to micro optimize for performance - typically in an ngRepeat scenario, you need to understand the compile/link process. 

Avoid using ngShow/ngHide/ngIf and manipulate the templateElement before it's linked to improve performance. 

This is *if you are even having performance issues*. "
2015-03-03 17:31:55;Server-Side Pagination and Filtering with Angular and MongoDB;
2015-03-03 15:42:04;Announcing FullStack 2015- Europe's premier JavaScript, Node & Angular.js Conference. We're currently looking for talk submissions in our Call For Papers! Please submit if you have an exciting topic to present! :);
2015-03-03 14:25:04;Loading and displaying Crystal Reports, without ASP Crystal Reports Viewer;"If people reading know of something that works with SSRS instead of Crystal, I'd be interested!My trick was that you convert the Crystal Report to PDF on the server and then just return the PDF.  

It's super simple to convert the Crystal Report to PDF.  It's a method on the report.  

No need for Crystal Reports Viewer, just PDF support.  "
2015-03-03 09:30:16;Angularjs directive for Ladda button;"Nice. I'd like to wire up something like this for the Angular Material `<md-button>`.[deleted]>  GET https://cdnjs.cloudflare.com/ajax/libs/Ladda/0.9.7/ladda.min.css net::ERR_INSECURE_RESPONSE

It's not very wise to reference a **https** resource on a http page."
2015-03-03 07:28:44;AngularJS Performance, ng-repeat Performance and Optional one-time-binding;"I would have to disagree with the statement that Go is lacking an ecosystemWe finally upgraded to 1.3 from 1.2 and it was nice to be able to use the built in one time bindings. Before that we were using the ""once"" module. I didn't mean that Go was a bad language or anything. It's just too young to have an ecosystem as stable and rich as Python's ecosystem.

For instance, for mongodb, there's only mgo library for Go and by reading the documentation I can't even know if it's possible to use projection or not. Well that would not be a big problem. The main problem would be the lack of something like django-tastypie-mongoengine. We are using this on Wishtack to implement our API by simple declarative classes that tell which fields should be readable/writable depending on the client's permissions.

That allows us to have a complex api without any class methods coding etc..."
2015-03-10 23:12:19;Tutorial and Sample App: Easy to Follow AngularJS Modular Architecture;
2015-03-10 22:24:24;PSA: Don’t use the same HTML file you bootstrap your app from as a template for a directive;Heh, I had a problem like that when I started using html5 mode - if you're not in hashbang mode, you need your webserver to serve up index.html no matter what URL gets requested. Except that if your app requests a nonexistent template file (due to a typo), then the server sends index.html down the wire instead of 404ing the template. 
2015-03-10 21:31:57;I don't understand why people use promises over callbacks;"    $http.get(url)
    .then(function(results){})
    .then(function(steptwo){})
    .then(function(stepthree){})
    .then(function(stepfour){})
    .catch(function(err){})

is worse than

    $http.get(url, function(err, results) {
        if (err === null) {
            doSomeStuff(function(err2, stepTwo) {
                if (err2 === null) {
                  doOtherStuff(function(err3, stepThree) {
                      if (err3 === null) {
                        doEvenMoreStuff(function(err4, stepFour) {
                            if (err4 === null) {
                            } else {
                              handleErr(err4)
                        })
                    } else {
                        handleErr(err3)
                    }
                ))
              } else {
                handleErr(err2)
              }
           })
        } else {
           handleErr(err1)
       }
     })

I mean, heck, I have no idea if I balanced those parentheses right, and the fact that the error handlers go in the inverse order from their calling kind of stinks. Plus, promises let you say ""do these three things async and tell me when they're all dones"".

Sure, there's ways to handle async properly. Promises do use callbacks just like regular callbacks, and other async handlers (waterfall etc) are extra sugar on top of callbacks anyway.

The big deal with promises (IMO) is a few things: 

1. once you're in a promise chain, you don't have to worry about ""maybe this thing I'm doing returns an async promise, maybe it returns right away"". Promises handle that, you just return something and the .then handler resolves to either the return value of your function or the resolution value of the promise you returned. 

2. there's easy ways to say ""do all these in parallel""

3. You don't have to keep pyramiding out your callbacks. You really only need promises one level deep unless you're doing something fancy, like conditionally adding extra stuff to the chain based on the value you get.

4. There's an easy way to conditionally add extra stuff to the chain based on intermediate values.

5. There's easy-to-use error handling, and depending on the promise library you use, it's even complete with decent stack traces.

Promises have features that work like async functions, but do so better. That's not to say trad async doesn't have its place and promises can't be misused, but IMO well-used promises lead to cleaner code, which leads to better code. If you need a whiteboard to dissect your authentication flow, you are going to make mistakes, and that's not even including adding in other programmers looking at your work.

                  

Encapsulation. Promise is async atom. Callbacks is not. You can easily compose ptomises run them parallel or switch their order, do other functional stuff, chain them. Promise creation explicitly describe context of async operation, callbacks are implicitly rooted to context where they called.One of the benefits of promises is that you immediately get access to an object that eventually represents the value. This means you can assign the promise to a variable:

    var userPromise = User.current();

This alone gives me plenty of flexibility. For example, my `User` service can easily cache the promise before returning it so that subsequent calls will not invoke unnecessary HTTP requests:

    var userModule = angular.module('services.user', []);
    userModule.service('User', function($q, $http) {
      var currentUser = null;

      this.current = function() {
        if (null !== currentUser) {
          return currentUser;
        }

        currentUser = $http.get('/api/user/current');

        return currentUser;
      };
    });

Additionally, I can expose a new method that extracts a useful piece of data by chaining the promise above:

    userModule.service('User', function($q, $http) {
      /* ... */
      this.currentAge = function() {
        return this.current()
        .then(function(user) {
          return user.age;
        });
      };
    });

As a consumer of the service, I can easily compose promises together:

    var profileModule = angular.module('controllers.profile', ['services.user']);
    profileModule.controller('ProfileCtrl', function($scope, $q, User) {
      // Fire off all async operations simultaneously
      $q.all([
        User.current(),
        User.currentAge(), // just for example
        User.preferences() // perhaps async
      ]).then(function(results) {
        $scope.user = results[0];
        $scope.age = results[1];
        $scope.preferences = results[2];
      }).catch(function(error) {
        $scope.error = error;
      });

      // Or execute them in series
      User.current()
      .then(function(user) {
        $scope.user = user;
        return User.currentAge();
      }).then(function(age) {
        $scope.age = age;
        return User.preferences();
      }).then(function(preferences) {
        $scope.preferences = preferences;
      }).catch(function(error) {
        $scope.error = error;
      });
    });

Additionally, if you're using ngRouter or ui-router, both of them support a feature called `resolves` which allows you to perform async operations before rendering the target view. We use something like this in many of our routes:

    var stateModule = angular.module('init.states', ['ui-router']);
    stateModule.config(function($stateProvider) {
      $stateProvider
      .state('home', {
        url: '/home',
        resolve: {
          user: function(User) {
            return User.current();
          }
        },
        template: '<h1>Hello, {{ home.user.displayName }}</h1>'
        controllerAs: 'home',
        controller: function(user) {
          this.user = user;
        }
      });
    });

Both routers will recognize that the return value for the `user` resolver is a promise and will wait until it resolves before rendering the template. This helps prevent a bug where we temporarily show ""Hello, "" before the user has loaded.

In our project we've adopted promises as the default solution for managing async code, and it has been a pleasure working with them throughout the code base."
2015-03-10 20:25:36;Interactive free online book covering AngularJS directives, modules, services, controllers, routing, and more.;Read through part of the first chapter and skimmed a few others.  This makes learning Angular easy.  It invites you to try changing the code and you see the immediate results.With 2.0 right on the horizon I don't think this will be worth it even if it's free. Before you go ahead and say but the migration path..and knowledge transferable, you'd rather be more productive doing something else. Didn't mean to be harsh but the sooner we accept the fact the better.
2015-03-10 20:19:02;Why the div does not take the whole width;"the md-toolbar has a style of width:100%.

Adding that to the div results in your expected outcome.

http://codepen.io/anon/pen/vEVOOjAs the other commenter pointed out adding width: 100%; will have the div take up the full width.

If you're more-so wondering why you need to specify the width when generally it'll automatically do so, open up your browser's inspector.

If you inspect the div in question and then go up one level in your inspector to the ""body"" you'll find a bit of css: 

    [layout] {    
      box-sizing: border-box;    
      display: -webkit-flex;    
      display: -ms-flexbox;    
      display: flex;    
    }

If you disable the display attributes you should find that the div in question takes up the whole width of your browser.

So it appears that flex (/ flexbox) affects the default behaviour of its children. You might want to take a look into [flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)
"
2015-03-17 20:21:03;How to make content scrollable;
2015-03-17 19:26:08;Anyone else sick of how AngularJS handles forms? Here's a comparison between 2.0 and Aurelia;"As a huge angular fan the more I see aurelia the more I feel it's just better thought out.  That templating syntax just seems so simple.I started out using Angular's form stuff but I quickly realized it wasn't nearly robust enough. Ng-model in conjunction with the form directive offer up some cool things - tracking dirtiness, whether a field's been touched, modelValue and viewValue. That is until you realize you need to do something more complex than build a login form. Custom validators aren't even capable of doing cross-field validation without ugly hacks. 

This, of course, is all assuming that you're okay re-specifying your validation rules declaratively on EVERY field. Am I supposed to make a directive for EVERY one of the thousands of fields in my system? That sounds fun. Obviously you want this to be data-driven in some fashion and attached to your model. But Angular doesn't have a way to do that. 

Like he says in the article - ""At this point, why use the Form Model?"""
2015-03-17 15:41:41;Angular Unit Testing;"Since you're on pluralsight, I have a course ""TDD As a Design Tool"" that uses the MEAN stack and walks through how I do TDD, it uses an Angular project for examples.

I also have a course ""Protrator Introduction"" which is a 1.5 hour course.

Is there something specific that you're struggling with unit testing that you haven't seen covered?I wrote a posting about it if that helps:
http://randomjavascript.blogspot.com/2014/06/angular-and-jasmine-injecting-into-test.html

Also, we built a unit testing framework to make Angular testing easier:
http://randomjavascript.blogspot.com/2015/01/using-ngtestharness-to-simplify.html

https://github.com/gaikai/ngTestHarnessAs for free versions, I was never able to find really a complete guide on testing Angular applications. But the good news is that testing Angular apps are pretty darn simple so you'll probably be up to speed with it within days."
2015-03-17 15:28:13;Breeze vs Restangular;"I first played with breeze about a year ago, while working on a POC for my old company. I loved the ability to take the backend models and bring them seamlessly to the front end. The meta-data that comes with the responses is awesome. That was in an ASP.net world, and I've now moved into the MEAN stack.

I've launched my MVP, and more, using  $resource, but have always said to myself that I will migrate to breeze once my app grows up a bit. 

In the brief look at rest angular that I took, I was not overwhelmed by its benefits. But I haven't given it a fair shot most likely.Here are my unfiltered thoughts.

$resource > Restangular > $http 

This totally depends on your needs, but 9/10 $resource is the way to go.

Now breeze.js

Most of the time you don't need breeze. It is adds an amazingly powerful and fantastic data layer into your app... but you will know if you need it. Meaning, you probably sought it out because your data is so thick that you were tired of uttering ""there has to be a better way"" and Google'd a solution. Breeze is that solution.I don't know anything about Breeze. But only for basic apps would I use Restangular. Basically it's good when it's good, but I found myself writing some pretty complex/ugly code just to appease Restangular in funky situations, which do happen.I've been using Breeze on an Angular project and I really like it. If you are using the ""ideal"" back end set up (Microsoft server stack which generates the meta-data that Breeze can read) then it makes for a very powerful combination.In the project I have been working on, the server uses the OData protocol, so I need to do a bit more manual wiring-up than is ideal. I also ended up having to write my own adapter for OData v4 cos Breeze currently only supports up to v3. Despite that I still think Breeze is the best choice. It solves some of the harder problems associated with large CRUD apps out of the box.My summary is that Breeze can be very powerful and does a lot more than Restangular (full on auto-generated object graph with built-in change tracking on the client side) but I don't know how well it would fit with, say, a mongo/express backend (might also be fine, but I've no experience of that combination). On a smaller project with fairly simple data and models, it might be overkill.I say nope to both.

Breeze is a complex query library, which is awesome if you can support it on backend, like ASP does - oData protocol. Also, it is awesome if you have all data downloaded. It has caching, LINQ-like query language  and… that's all. So, it is a library to create queries for OData protocol.

Restangular is a library to… make http requests, like angular resource does. But it has one feature in design, which leads this project - all resources should be in format /resource1/:id/resource2/:id/resource3/:id which is a bad design in my opinion and from my 6y in web experience. You can ignore this and use Restangular with explicit urls, but you will get just ""better angular resource"", which is not that much.

Both libraries will give you just a wrapper over Ajax to make requests a bit easier. I can guarantee you'll be fine with just resource or plain http service, until you stuck with really complex all, where you will need more than Restangular and breeze will not help you at all! My only hope for backbone.model, which is built ""for real projects with deadlines"".I've never used Breeze, only Restangular. I wouldn't recommend Restangular for two reasons: No release in months and very small feature set that rarely helps with the real issuesI'm just going to use $resource and wrap in a service if I need to extend custom functionality for a model.  It appears resource has come along since restangular was built.The more I look at Restangular the more hesitant I am about it.  It looks like the last release was April 25th of 2014.  I think the focus is going to be on the next version of Restangular.

""From today, I've started a private repository for Restangular 2.0. It'll work with AngularJS 2.0 and it'll use ES6.""

Perhaps I'll look at JS-Data; http://www.js-data.io/

https://github.com/js-data/js-data-angular"
2015-03-17 13:43:05;Question: Architecting app with ui-router. Need help with transitioning elements;"You can use `ngAnimate` and apply it directly to the `ui-view`, and hook into events that way. If you need more control, you can create a directive and plop it on the `ui-view`, listen for specific state change events, and trigger the animations manually using the `$animate` service.

May I assist you with a link?
A very clear article on how to add animation in AngularJS which can be used to switch between 2 panels,
and he has a Plunker too:
http://plnkr.co/edit/vurf2Pm33Dam9IUitgrC?p=preview

Although he's referring to ""ng-view"" in the article its the same idea.
Instead of <element ng-view></element>
you use <element ui-view></element> with ui-router."
2015-03-24 17:58:06;I'm new to node and angular and very confused about how to get node started.;"AngularJS Fundamentals In 60-ish Minutes.  https://www.youtube.com/watch?v=i9MHigUZKEM

My concepts on $scope were not clear until I watched this video.""Getting Node started"" makes about as much sense as ""Getting Python started"" -- that is, none.

I don't know the repo you're referring to, but I assume it only uses Node as a development webserver.  I'd advise just sticking with that for now.

One thing that seems to trip people up is that your Angular app is *not* a Node app.  If my assumption is correct, Node is only being used as a basic webserver.  You could easily use Python or Apache or whatever else instead.Hey! I'd be happy to help you out with Node if you can be a bit more specific about what you're trying to get 'working'. Are you trying to setup an HTTP server? Node is really versatile and multifaceted. 

What we can define as 'working' is going to depend on what you're trying to do.https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager

then npm installI be happy to help you too! pm me :) and I can walk you through some things in skype or chat if you think it could help you.I learned Angular by going through the homepage itself -https://docs.angularjs.org/tutorial      
I started off by learning about routing and adding different pages. And then I learned about two-way binding and controllers. Then I learned about consuming API's with factories. And then I learned about breaking down my UI elements into directories.I'd recommend a full stack generator that will take care of some of that for you. I went with meanjs.org but there are several other options, each with pros and cons. This will let you gloss over the whole bootstrapping process and just get started with a full stack example to learn fromI'd recommend against learning two different technologies with significantly steep learning curves at the same time.Don't bother with Angular, it's a dying framework. "
2015-03-24 12:20:46;Case against pub/sub in Angular— TLDR: Don’t $broadcast/$emit;"I currently have a http interceptor service that uses $broadcast to send a message to the controller to display a loading spinner globally.  How would i do this without using $broadcast? 

I've done some research and have seen people select the element using angular.element(""#sometagid"").hide()/show() in the http interceptor service but this doesn't feel right to me (I could be wrong).  

The other way this could be done is to manage everything thin the callbacks in the controllers but that would mean that there will be lots of code blocks to manage the loader in different files.Good article, definitely helped me think about a problem I'm working on in a more correct way.

Ignore the downvotes from the haters, in my observation most of this sub's users can't program, let alone think about architecture in a correct way.Wait, do people actually use $broadcast/$emit for communication *within* a controller? Insanity.So n00b question here - I have a service where I load data asynchronously then $broadcast to a controller (which has an $on listener) when the AJAX call is complete and the data is ready for presentation. 

How should I refactor this to follow Best Practices?Here's a common problem: You have a counter in the nav header. You add an item to a basket, wishlist, etc. When the backend responds with the OK, the counter is increased.

Let's put it clearly: there is no straightforward Angular way to do this. Either you have to watch a property of the service, which breaks the principle of encapsulation fundamental to OO programming (or you could assign the entire service to the controller scope, [as the egghead.io guy does](https://egghead.io/lessons/angularjs-sharing-data-between-controllers), which in my opinion is an abomination); or you have to resort to events, which clutters the code and, as the OP says, is sort of at odds with the digest cycle / Javascript inheritance philosophy of Angular.

You could reach a compromise and create a little ""appInfo"" value service with information that's going to be shared between controllers, and watch that. In the example above, this value service would only contain the basket counter. This way the main services that hold real logic are still encapsulated, so there is less harm.

Truth is controllers are designed to be nested, not to be independent from one another. OP is right that React does independent controllers better than Angular.I've always felt there was a better way, but haven't found one yet for this kind of situation: let's say I have two controllers, one controls a date/time picker, the other displays data that relies on that date/time picker. Now do I notify the 2nd controller that the date/time has changed?

I've been using the pub/sub model to pass the message back and forth between the controllers, (I've even tried using a service to do something similar, but just went with using $rootScope since it is built in and was doing roughly the same thing). I would love to know a better way!I agree that pub/sub sucks in Angular. I can't figure out a cleaner alternative for application level events other than injecting everything into everything else.

For example I have 5 controllers that want to know when the user logs in. What is better way to notify those 5 controllers of an app state change.

Using watches for things declared outside your controller seems way worse. Pub/sub is a common pattern. Scope is something few people understand. I don't see the issue with using $emit/$broadcast. If you change your controller just adjust your listeners accordingly. As long as you listen to the $destroy method and remove your listeners you'll be fine. We're currently using this method in production and it's great for communicating between parent/child controllers. "
2015-03-24 12:18:32;Google images like structure in angular js;
2015-03-24 12:15:05;Worth starting a Angular 1.3 project right now?;"If you're more familiar with Ember i'd use that.

I do want to ask though why everyone is so down on Angular just because 2.0 wont be backwards compatible. Unless the roadmap for the project requires heavy future-proofing (excuse that term snatched from the sweaty palms of a project manager), it really doesn't matter. It isn't as though angular 1.3 is going away. They even have a support plan in place and a 1.5 version roadmapped. Did all of those only-jquery or backbone without marionette sites need to get ported to angular when it came out? If the site works, who cares?Use the best tool for the job - which right now, is Angular 1.3. Write your code concisely, use ES6, don't use $scope and follow best practices and when the time comes to upgrade to A2, the transition should be pretty painless.

On the other hand if you *like* Ember, why not use it? It's a really tough choice right now.  

To be honest, at the time of migration, there may be significant issues if you use dependencies on third party angular modules that don't have proper versioning and aren't actively maintained.

I've used angular for two projects recently, but I've been super cautious about bringing on third party angular modules, because my future progress may be hampered by their ability to adapt going forward. So that's just something you'll want to think about.

As you've already said you're comfortable with EmberJS, if you think this will be a long project and have complicated dependencies, you may want to go that route, unfortunately.If you have been using and like Ember then I would go for that, Angular 2.0 will not totally deprecate 1.3. From what I understand the Angular team will still support 1.3.x for a while. As the migration process is going to be a large amount of work. Sure, Angular 1 will keep being maintained, and new versions will keep being released for the foreseeable time. You will want to stay up-to-date on the latest versions of that anyway (so upgrade to 1.4, 1.5 etc. once they come out), and as you do, the delta to 2 will keep decreasing as well - meaning it upgrading to 2 should not be a pain as well.

So no, Angular 2 should not be a reason not to start in Angular 1.3 right now. However, if you prefer Ember, why not use that?I am in the same boat. After watching the latest conference videos I am confident that 1.x will be supported as long as people are actively using it, and that means several years. It will not be deprecated by 2.0 in one year. The Angular team is making sure that if you continuously upgrade your 1.x version it will be very easy to migrate to 2.0 eventually. For example, the 1.4x release contains the new router that is the same as in 2.0. If you start your project with 1.4 and using the new router, the migration to 2.0 will be even easier.Library churn is a fact of life but you can hardly wait two years for the new version.Yes, if you've ever seen anything from anyone relating to Angular 2.0, they have said, currently say, and will continue to say, go with 1.3.

Source: Google, at every conferenceIs this going to be asked every day?If you don't have to support IE 10 and less, use [Aurelia](http://aurelia.io/)."
2015-03-24 10:42:47;Can you please answer this newbie question? Unable to refer to $cope inside a controller function;I'm not sure I can $cope without a code sample.I don't think you injected scope correctly [deleted]Can you please correct the code and show me how to do that? Thanks 
2015-03-31 20:53:36;Complex routing question;"What if you just set up two containers on one page; one for your list of links and one with an ng-include to load the detail page the user clicked on. 
If the user clicks on a detail link you just hide the first container and display it again it the user 'navigates' back. Hope that's not the solution you wanna avoid.> Is there a version of ui-view that caches old views so I can reactivate them

Have you seen [ui-router-extras](http://christopherthielen.github.io/ui-router-extras/#/sticky)? 'Sticky states' might be what you want :)"
2015-03-31 18:30:47;Command line tool to create AngularJS controllers and directives for you (avoid writing the same stuff over and over);"Why not create Yeoman generators for things like this?Why does it manually inject dependencies, when it can inject them in header? Is this the best practice? This is an awesome tool. Is there a way to modify the template to incorporate things like CoffeeScript or ES6? Can you explain why the module name is passed as the argument to the IIFE? I recently started using Papa's styleguide and I'm using the following syntax 

    // storage.js
    (function() {
    'use strict';

    angular
        .module('app')
        .factory('storage', storage);

    function storage() { }
    })();


Thanks for the great work, can't wait to start using it"
2015-03-31 18:09:51;Unique Periodic Table that makes chemistry students get better grades without thinking too hard;Nice.  Minify it too?  Curious if you see a benefit. Make them think deep not hard. But sometimes going hard is good, but not when everyone just wants to get more hard for the sake of it. Makes class dynamics weird That's quite the claim
2015-03-31 13:49:30;Send param to api on ng-click?[advice];"http://stackoverflow.com/questions/17039926/adding-parameter-to-ng-click-function-inside-ng-repeat-seems-not-to-workExplain a bit more what you wish to do? or if possible stick up a codepen =)
"
2015-03-31 12:41:40;React-Style Containers and Components in Angular 1;All I'm seeing here is defining the template and controller for a directive inline. I was hoping for something sexier like performance improvements. The sexy thing about React isnt the syntax, its the insane performance boosts to rendering. Writing Angular like this is not going to be very readable for any significantly large application.
2015-04-07 13:46:05;Best Way to Build a Map Application?;"If all you need is multiple views in a page, I'd go look at ui-router; it's what ngRoute should be.

Sorry, would link but on mobile atm.Your question interested me, so I googled ""Angular Google Maps"" and I found this which looks promising: http://angular-ui.github.io/angular-google-maps/#!/ I would use the [history api](https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history) for what you're trying to do.Which map api are you using? We've had some success with leaflet but the directive performs woefully"
2015-04-07 13:44:37;ng-book 1.3 by Ari Lerner ?;"Is not illegal if someone could just buy it for him. 

paperback lending is not illegal also. 

Sorry @tandil22 price is too steep for a gift, otherwise I would do it.What you're asking for is illegal mate"
2015-04-07 13:37:14;Table Recommendations?;"You could try Angular Grid (https://github.com/ceolter/angular-grid). It was introduced in a post here a few days ago (edit: here it is [Why The World Needed Another AngularJS Grid](https://www.reddit.com/r/angularjs/comments/30uel2/why_the_world_needed_another_angularjs_grid/)).  It looks like the most promising grid I have seen in a long time.100+ columns sounds like a lot. How many rows you got? And perhaps use some lazy loading technique? You need to be aware that (especially when sorting data) every cell requires a unique model which is watched for changes. So whenever you modify, it will be much slower. Filtering your data on what to show and limiting the data which is shown by default, is a smart thing to do.
Just know that Javascript aint the fastest for these kinds of actions. It requires quite a lot of processingWe ran into the same issue trying to do in cell editing with tables. We're switching that feature to react and it's looking promising. Hi,
are you sure you need 100+ columns? Sounds quite anti-pattern for the User Experience.Hi, I'm the guy who wrote Angular Grid. Just wanted to say thanks to everyone who pointed you in that direction :) . . . . . it's only a few months old, cant' wait for what another few months will bring!!"
2015-04-06 23:56:01;The Rise of TypeScript?;"I'm a big TypeScript fan, having recently converted a few of my open source libraries ([Angular formFor](https://github.com/bvaughn/angular-form-for), [Task Runner](https://github.com/bvaughn/task-runner)) away from Closure Library to TypeScript. It's been a joy to work with.ELI5: What is the point of TypeScript?

I have been trying to understand the ""why"" of it.
If the idea is to allow the tools to give you error checking (edit: and types), then why create a whole new language and not use an already existing language (C#, Java, Python, VB, PHP, etc.)?Here is what I want to know...

if i write typescript / ES6...can I just add it to a html page and run as is?

i.e w/o some extra workInteresting"
2015-04-06 21:46:45;Some people to help me with angular documentation generator ?;
2015-04-14 18:26:15;Just want to give some props to the Angular team for their increased communication through more frequent blog posts;You may also check out their meeting notes (for an even more frequent update). They're freely available online: https://drive.google.com/folderview?id=0BxgtL8yFJbacMEZDc2NtWS1VZ1k&usp=drive_web ...the last post is almost a month ago?
2015-04-14 18:07:02;angular2-tuber: A YouTube Search Engine built with Angular2 (compare with the React Version in the Tuber repo);Nice. Is this written in ES6 or TypeScript? I don't think that ES6 has annotations or type hinting yet. 
2015-04-14 15:44:08;[Newbie] check values on directive scope;
2015-04-14 12:28:26;Looking for a angular tree library;"I'm not as familiar with supporting IE 8 (sorry!) but did have lots of success [with this tree on my last project:](https://github.com/angular-ui-tree/angular-ui-tree)

It's a pretty high result usually though, so I'm guessing you've already tried it?Rendering trees in Angular 1.x using the built-in approaches will never be performant. The reason is that if each node is a custom directive, Angular will need to $compile and $digest each node serially.

In this rare case, I would consider solutions outside the usual Angular approach.I can't comment on IE8 (I don't have it installed), however Angular Grid www.angulargrid.com is also a tree view - one of the examples on the front page is a file explorer - the first column of which is a tree view. With regards performance, 2000 records will be fine. The code for Angular Grid is very easy to follow, so if it doesn't support IE 8, should be easily fixable."
2015-04-14 07:42:34;Ng-dial – An Angular.js directive for an interactive dial component;
2015-04-21 23:42:59;Best Practice for my Data Service?;"Use promises. Return the http promise and let the controller handle the data when the promise resolves.

Pass in a callback function as a parameter. When data is resolved call the parameter as a function.

Finally use the route resolve property to resolve necessary data before loading the page.
Caveat: I'm also very new to Angular and haven't tried this out yet myself. (It's on my long to-do list!)

Poor Man's Solution: Polling. Repeatedly calling your http service at a set intervals using $timeout. Inefficient and far from realtime. 

Better Solutions: Pub / Sub, as suggested, is a great pattern. You'll need a server middleware (e.g. Rabbit MQ) which allows publishers (i.e. your server) to push updates into your middleware and subscribers (i.e. web browsers) to listen for new notifications on that event. The pattern is great at decoupling servers and clients, and is particularly useful if you want to publish different types of messages, from many different services. Clients can opt to subscribe only to message types they are interested in. 

The best solution I can see is using Web Sockets. The client connects to a server end point, which will then stream data. Options out there:

ng-pusher: https://github.com/pusher/pusher-angular

My backend of choice is django. There's a great django-websocket-redislibrary (https://github.com/jrief/django-websocket-redis). To see it action, here's the demo of group chat:

http://websocket.aws.awesto.com/groupchat/

In your case, it sounds like events are the way to go. Be careful, events can quickly spiral out of hand if you don't manage them neatly. You may not need to `$broadcast` on the `$rootScope` either, if only certain pieces of your active controller/view need to be updated. Also look and understand the differences between `$broadcast` and `$emit`."
2015-04-21 21:10:41;Exploring Angular Material;one thing missing is a good datepicker, the one from the docs demo doesnt work in firefox and is ugly :(
2015-04-21 20:22:51;Example of project using John Papa Guidelines;"You can check out his own example where he does exactly what he's talking about in the style guide.

[https://github.com/johnpapa/ng-demos/tree/master/modular](https://github.com/johnpapa/ng-demos/tree/master/modular)

I'm working a new application and I'm following his styleguide and I've just come across that example, which he references many times.

Check out that long-ass index.html file. Mine's starting to look like that too. One of these days I really need to learn how to use gulp to concatenate everything into one file automatically.
are you using gunt or gulp? start thereI've used John papa's guide for a large scale angular app, since angular is modular in nature I find it very easy to break stuff out into separate files to emphasise separation of concern.


The approach I would recommend is to hook in to whatever module you are working on and declaring what type of object you are creating:

MYCONTROLLER.JS

angular.module('myModule').controller('myController', myController);

function myController() {
    // logic ...
}


The same applies for filters, directives, factories and services.


And ALWAYS wrap everything in IIFE'sIf you are going to create a new app and you have to implement CRUD operations, maybe you could consider using a Yeoman generator that I developed this weekend based on the [John Papa's hottowel generator](https://github.com/johnpapa/generator-hottowel). 

You can find **generator-angular-crud** at [https://github.com/jlmonteagudo/generator-angular-crud](https://github.com/jlmonteagudo/generator-angular-crud)
Not sure what's so hard about splitting it up in different files?

**Before**

*app.js*

    angular.module('app', [
        'dependencies',
        ...
    ])
        .config(function ($stateProvider) {
            ...
        });

---
**After**

*app.js*

    angular.module('app', [
        'dependencies',
        ...
    ]);

*app.routes.js*

    angular.module('app')
        .config(function ($stateProvider) {
            ...
        });I wouldn't call it *good*, but I've [built an Angular app](https://github.com/AndrewBell/bootiful-angular/tree/master/src/main/resources/static) with some of Papa's rules in mind.

The modules are all defined in the [index.html](https://github.com/AndrewBell/bootiful-angular/blob/master/src/main/resources/static/index.html), the main application declared in [main.js](https://github.com/AndrewBell/bootiful-angular/blob/master/src/main/resources/static/main/main.js) and the routes defined in [router.js](https://github.com/AndrewBell/bootiful-angular/blob/master/src/main/resources/static/main/router.js)

What kind of issues are you having, maybe we can help?Each object that you define gets its own file.  The only things I have in app.js are the module definitions and the manual bootstrapping code.
Anything created on those modules are created using the angular module getter syntax in a separate file with its own IIFE.  About the only practice that John recommends that I know I'm not following is ControllerAs mostly because I was already well underway on my current project when that syntax was introduced and I didn't want to refactor it for little gain.I've seen this pretty good example:

https://github.com/bendfold/beer-locker-ng-papahttps://github.com/johnpapa/angular-styleguide#style-y022

Chaining. I loathe chaining. We have the biggest, ugliest chains because of this trend. Just use variables so people can see exactly what is executing on what and can add whitespace to help with readability.

People, please stop!"
2015-04-21 14:09:32;[Joke] So we made a movie about an our source AngularJS form generator.;You guys must have saved a lot of time thanks to your form generator to spend on this video....Great video, and great tool as well. BTW, we are using it widely in our project: http://panax.io . Check it out, we will have a demo soon! Kudos!I didnt know anyone could try that hard to be funny. Wut
2015-04-21 07:57:54;Select/ng-options issue - initial model value;"bit more googling revealed the problem .. and helped me understand track by better:

http://gurustop.net/blog/2014/01/28/common-problems-and-solutions-when-using-select-elements-with-angular-js-ng-options-initial-selection/"
2015-04-28 20:37:44;Angular Air Episode 12: Angular 2 Alpha;If you have any questions about Angular 2 feel free to tweet me at @gdi2290
2015-04-28 20:06:52;Caching $http requests in AngularJS;"This is a useful thing to know about but it seems like the article is stretched a little thin.Why?

If your server is configured properly and attaches proper HTTP headers (expires / etag), your GETs will be cached by your browser.

And you definitely don't want to cache POST/PUT/DELETE.when i originally started angular i had huge problem with cache, so have to use a nocacheinterceptor that adds randomness to the query string api call. not sure if this is a problem anymore. why cache at all if its so problematic?Why even worry about this?  Plenty of levels of cache already happening... browser, ISP, CDN.."
2015-04-28 18:16:54;What is the recommended way to use `GET` in `$http`?;"I use a mixture of both. It really depends on how complex I need my request to be. I will say for 90% of my calls I use version A. Usually the only header I attach is the auth token, which you can set up in the defaults like so (taken from official docs): 

    module.run(function($http) {
      $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w'
    });Unless you wanna do something unusual I think using `$resource` is probably less trouble than using `$http` directly.

A cool thing about `$resource` is it'll actually write to the promise it returns, which means you can write code like `$scope.obj = $resource(blah blah blah).get()` and when the response is received obj has all the information you wanted.  I actually wrote some C# code to use reflection to go over my WebAPI controllers and generate services so I haven't looked at the real syntax in a while and don't exactly remember it but anyway, something like that.I use 2nd one...to me it gives a feeling of more finer control of what i am sending.

to each their own i suppose?Or is it:

    $http.get(""http://www.example.com/angular/customers.php"")
        .then(function(r){
            $scope.names = r.data.records;
        });

I think you can do whatever you would prefer.  Version B looks cleaner since you are sending a bunch of parameters and headers, but if it is a simple call, Version A works just fine.    $http.get(config.backendURL + ""/specific"").success(function(data) { 
        ... 
    }).error(function() {
        ... 
    });


EDIT: Fixed one liner.Either is the same, I usually use the short hand `.get ` unless I need to tweak something particular. 

Pro tip, if you return that from the service you can continue adding to the promises in the controller.

If you actually need the params and headers or anything else that may be defined? Second one. If you just need a simple GET request? First one.I use version 1 unless I need to use version 2. Which is to say, sometimes I need to set headers and stuff on a specific call. If I need to set tokens, it's usually on all API calls, so I'll do 

    $http.defaults.headers.common.Authorization = 'Bearer: xyz';

and then I don't have to keep setting it. You can also do 

    $http.get('url', {limit: 10, sort_by:'created:desc'})

as well.I found the usage in John Pappa's hottowel to fit best for me. I find it much more intelligible.

    (function () {
        'use strict';
    
        angular
            .module('app.modulex')
            .factory('randomService', randomService);
    
        randomService.$inject = ['$http','$q', '$cacheFactory', 'logger'] // i use $cacheFactory & a logger module for caching functions and error logging
    
        function randomService($http,$q, $cacheFactory, logger) {
            var service = {
                getRandoms: getRandoms,
                getRandom: getRandom,
                addRandom: addRandom,
                updateRandom: updateRandom,
                deleteRandom: deleteRandom
            };
    
            return service;
    
            function getRandoms() {
                return $http.get('/api/randoms', {cache: true}) //there might be a better way but atm i invalidate the cache on put/post requests
                    .then(succes)
                    .catch(fail);
    
                function success(response) {
                    return response.data; // you can do more than this here but it's usually all you need
                };
    
                function fail(error) {
                    var msg = 'Query Failed: ' + error.status + ' - ' + error.data.message; // i try to setup all my api's to report on why it failed in a message field
                    logger.error(msg);
                    return $q.reject(msg);
                }
            };
    
            function addRandom(data) {
                return $http.post('/api/randoms', data)
                    .then(success)
                    .catch(fail);
    
                function success(response) {
                    var msg = 'Random added. ';
                    $cacheFactory.get('$http').remove('/api/randoms'); //invalidate cache
                    logger.success(msg);
                    return response.data;
                };
    
                function fail(error) {
                    var msg = 'Could not add random. ' + error.data.message;
                    logger.error(msg);
                    return $q.reject(msg);
                }
            }
        }
    })();    


P.S. By best practices you should not be using $http service in your controller.Generally - put your $http logic into a service/factory, and have your controllers use that instead of having $http inside of the controller. 

In the service/factory
    
    function someMethod() {
        return $http.get('url/to/get');
    }

Then in your controllers that need it:

    someFactory.someMethod().then(function(data) { 
        $scope.data = data;
    });

If there is logic that you need to do on every request regardless of where it's being used, then can do.

    function someMethod() {
        return $http.get('url/to/get')
        .then(function(response) { 
            // do something to response
            return response;
        });
    }

All of the $http.get / put / post / etc return promises - and find using .success and .error to just 'confuse' things when you're generally dealing with promises anyways."
2015-04-28 15:58:31;"How to more effectively get Reddit Authorization and maintain ""login"" across pages/routes";If this isn't an appropriate place to post this question, could someone point me to a more suitable place, thanks.
2015-04-28 14:40:58;Angular 1.0 tutorial with Typescript;"Yeah checkout [typescript-angular](https://github.com/tastejs/todomvc/tree/gh-pages/examples/typescript-angular) - It's a Todo app written in Typescript with Angular 1.

BTW I've been putting together a list of links for learning Angular 2 [here if you're interested](https://github.com/jashmenn/AngularJS-2-Learning)check out pluralsight.com and search for AngularJS TypeScript. It is an indepth guide to setting Angular with TS.  Everything else is kind of sparse to be honest. Not much info on TS with Angular 1.x



I would like to warn you, I tried setting up Angular with TS for a project and..its hard. (This was my first time with Angular though). 

If you have never used Angular before, it might be easier to learn the ins and outs in JS first.

Since my project was work related, I ended up going with regular JS for now, but I'd like to revisit TS now that I have more knowledge on how Angular works.

Unfortunately a lot of what is out there is out dated and sparse. However, if you are using Visual Studio the [SideWaffle](http://sidewaffle.com/) project has some templates to help you get started.I think it will need some time. Its only out for a short while and its not very mature just yet (neither is 2.0).
However i think it is a good idea to already start developing with TypeScript in the future, to get a hang of it and to get a grip on how you should work from then on.Thank you for the links here.
Really difficult to start with TypeScript and angularJS"
2015-05-05 22:25:52;Re-imagining Flux Action/Stores with ES6/ES7;Curious what you all think about this directionuse an Rx.Observable then you realize you don't need flux
2015-05-05 21:48:38;Can't get simple ngSubmit example to work;"Your mixing 'controller as' with traditional $scope.

Fixed version - http://codepen.io/anon/pen/waKqga

$scope.list wasn't a thing - but 'this.list' is. 

Another alternative: http://codepen.io/anon/pen/VLvzPg

No $scope at all, and pass in the list and the text into your submit - so you don't really have any question to what the function is modifying/needs.
"
2015-05-05 19:01:12;simple-angular-seed - The Angular seed project for beginners (and people that don't feel like installing Node/NPM/Bower);"Modern web development basically requires a lot of what node / npm / bower has to offer. While you don't technically need them it does promote best practices to use themSetting up a new Angular project can often be the worst part of using Angular, especially if you're a beginner.

simple-angular-seed strips out everything except the bare essentials so you can focus on the framework, rather than understanding and installing a bunch of tools you've never used before.

That means you don't need to install node/npm/bower, cross your fingers that the dependencies work, hope you get the right versions, and then spend hours on StackOverFlow to figure out what went wrong. Everything just works.I couldve used this earlier this morning, however I am glad that as a beginner I did use NPM/Bower with the seed just to get a bit more comfortable though. This would be good for angular practice though.Hey, just had to drop in and say that I totally get it, and if you're a beginner, this is a great repository to play with to familiarize yourself with AngularJS. I remember when I was just learning angular. It was super frustrating when all of the seed projects that I found required an understanding of NPM/Node/Bower. I think we can all agree that AngularJS is difficult enough to learn on its own as a beginner or otherwise. Coming from something like jQuery, AngularJS is a completely different animal. This allows you to hold off learning NPM/Node/Bower and focus on AngularJS first, which I agree is the less overwhelming approach as a beginner. Thanks for sharing this! I hope more beginners see this post. I'm by no means an expert now, but I definitely remember having a lot of trouble wrapping my head around using the terminal, let alone using it to install packages.No offense but i don't understand why there are so many angular 'seed' around the 'ternet. Is that so hard to create index.html, app.js, route.js and RootCtrl.js ?"
2015-05-05 16:43:44;Do you guys avoid using Bootstrap/jQuery with your Angular? (And use some other framework instead like UI-Boostrap?);"I use ui-bootstrap, and generally avoid using jQuery or jQuery plugins.

With jQuery and jQuery plugins - if you start doing DOM/Data manipulation - you need to start worrying about writing directive wrappers around things to get angular to be 'aware' of what's going on.

For example, if using a datepicker plugin - you'd need to create a directive to wrap around it, so that when the datepicker got a value selected - you could then update your model and do a $scope.$apply() so that angular is aware of those changes.

For lots of things, just doing things the 'angular way' is easier. Once  you stop using jQuery as a crutch with Angular - most things get easier. I was excited about ui-bootstrap, but I've found that the directives were a bit restrictive and didn't let me use the Bootstrap stuff quite the way I wanted to.

Using jQuery is fine, but what you want to do is encapsulate it and not be manipulating DOM willy-nilly throughout your app.

That said, look at angular-material if you aren't too committed to Bootstrap.  I haven't used it but it looks incredible.I am happily using ui-bootstrap, it works great for my usage and I have used multiple components. I'm also avoiding jQuery and it's a relief. It was a little tricky but I got the bootstrap mobile nav menu to work with pure angular."
2015-05-05 15:58:02;Confused about complex dynamic form structure...;"First, just use a variable to store the ""new"" or ""used"" selection.

For the dropdowns, simply set a variable for each dropdown and only allow the next to be enabled after the previous variable has been set.

You could store the values in a service, but you might be overthinking the problem.

It's not actually too hard, but I could whip up a small example if it would help.

edit: Made an example anyways: http://plnkr.co/edit/Wgg5KifRyMg6rtZlMEVL?p=preview

This is a very very simple version of that form. If you want to do more options you'd want a cleaner way of disabling the select boxes, but this shows how simple it is to track that logic.In the first form:
- Selecting New/Used modifies which Years are available

In the second form:
- ""Used"" is implicit to the control/directive.

In both vehicle selection forms:
- The type of vehicle (new or used) determines which Years to show in the drop-down.
- After a year is selected the ""Make"" field is enabled, and only manufactures who had a car that year are shown (service side call) and also reset if previously set (and everything below it too).
- After a ""Make"" is chosen, the models for that year are pulled from the server and the drop down is enabled.
- After a ""Model"" is chosen, the trims for that model-year are pulled from the server (this server-side call could actually be done earlier because there are so few choices at this point) and the field is enabled.
- After a trim is chosen, the car is considered ""Selected"".   You have a unique car by Year/Make/Model/Trim.  A picture of that car is shown as well as an estimated price.  Behind the scenes you could also have the server-side ID of the make/model/trim, and could use that on other pages to query for fuel economy, safety ratings, recall notices, etc."
2015-05-12 22:44:16;Live Online or Onsite Training Suggestions? (North East);UDemy is really helpful!
2015-05-12 21:53:35;UI-Bootstrap datepicker with Masking?;
2015-05-12 20:34:46;How to setup pushState with html5Mode;
2015-05-12 20:06:24;Bootstrapping with ui-router ... help !!;"for nested views you must do something like this:

        function configRoutes($stateProvider, $urlRouterProvider) {
            $stateProvider
                .state('myProfile', {
                    url: ""/"",
                    controller: 'TaskCtrl',
                    controllerAs: ""vm"",
                    views: {
                        '':{
                            templateUrl: ""app/views/tasks/myProfile.html"",
                            controller: 'TaskCtrl',
                            controllerAs: ""vm""
                        },
                        ""pending@myProfile"":{
                            templateUrl: 'app/views/tasks/completedTasks.html'
                        },
                        ""completed@myProfile"":{
                            templateUrl: 'app/views/tasks/pendingTasks.html'
                        },
                        ""tasks@myProfile"":{
                            templateUrl: 'app/views/tasks/scheduledTasks.html'
                        }
                    }
                })


then, In your views you need to do this (this is the view that will contain the other views):

    <div>
    
        <div class=""col-lg-1 col-xs-1""></div>
    
        <div class=""col-lg-10 col-xs-10"">
    
            <div class=""row"">
    
                <div class=""col-lg-2"">
                    <div ui-view=""completed""></div>
                </div>
    
                <div class=""col-lg-8"">
                    <div ui-view=""tasks""></div>
                </div>
    
                <div class=""col-lg-2"">
                    <div ui-view=""pending""></div>
                </div>
    
            </div>
    
        </div>
    
        <div class=""col-lg-1 col-xs-1""></div>
    
    </div>
    
Then the individual partials that will be used in the above view are just basic html views though they can contain whatever angular directives you need to use, and variables will resolve to the controller you assigned in your state definition, and the controller is refferenced via whatever you set for controllerAs in your state definition.
"
2015-05-12 14:02:35;Has anyone ever worked with Angular and Ratchet before?;
2015-05-19 21:55:18;Angular Course developer needed;
2015-05-19 20:34:27;Dynamically loading directives;
2015-05-19 19:30:46;Angular ngRepeat and ngOptions Comparison;
2015-05-19 19:17:13;angularjs ng-repeat filter;
2015-05-19 17:32:40;Using AngularJS to develop easy to implement modules for customers, wondering if this is a good way to implement this functionality?;"> Or if that's proper utilization of angular to begin with?

Off the top of my head, no.  Angular really is declarative in that you are extending existing elements with your directives:

    <div id=""myID"" my-directive></div>

and your directive includes the html template to insert into the DOM, a template that displays your fetched data through the two-way data binding pattern:  {{my.data}}."
2015-05-26 15:58:56;Angular 2 Template Syntax;"I'm sure my opinion of this will change over time and with more use, but I find this extremely hideous and overcomplicated. It's going to take a lot of getting used to, and I'm not sure I see the benefit. > Our main design goal was to make templates more explicit, so the developer can reason about the template without knowing what directives are used there, and how they work.

I think this is the main point. The syntax lets you understand how the data flows in and out of the component without looking at the directive's source. This is similar to having explicit type annotations (TypeScript). Some people think it's ugly and pointless, others find the additional information invaluable. Both also enable more advanced tooling.god that is ugly.

> Our main design goal was to make templates more explicit, so the developer can reason about the template without knowing what directives are used there, and how they work.

I mean, I understand that, but why not go with a completely different template engine setup, rather than this horrid html/template mix abomination.

I have no problem with what they are doing. I just think they are doing it terribly.

This is not much different than what I saw angular 1.x for the first time.
Just get used to it and keep learning:)The syntax does look over-complicated and appalling. But I remember people saying the same thing about React and (more specifically) JSX when it was just released, and now look at its reputation. So I guess time will tell if Angular 2 is a step in the right direction."
2015-05-26 14:37:28;[help] reloading data after creation or edit;"You could make use of the resolve functionality of UI router or the onEnter callbacks to re-fetch the data on entering your 'app.articles' state.

https://github.com/angular-ui/ui-router/wiki"
2015-05-26 14:03:51;How would you set up an Angular admin theme template?;There is always Firebase.  It's my new favorite.It depends on what you want to use for your backend. It looks like it had a few starter templates for asp.net, rails and metor. The rest is up to you
2015-05-26 10:32:44;AngularJS-Toaster – Non-blocking Notification Javascript Library;The maintainer of that module has no idea what he's doing. It does its job though.
2015-05-26 08:25:47;AngularJS CRUD Factory 'Interface';"There are no Interfaces in JavaScript. What you did is actually not an Interface but some kind of prototypical inheritance. I think you can use ngResource to do what you want.Just thought of this - everytime you use create a new ICustomFactory will be instantiated in CustomFactory.

So say you have CustomFactory used in ControllerA instantiated as above ( using create) and then you have a CustomFactory in ControllerB that you instantiate with different parrameters.

This will change the details of the factory in ControllerA - so ideally you want to use the  create for a factory once.

I'm thinking probably instantiating it in a module's run and then using it as CustomFactory throughout the module

    So on mobile, this is basically impossible to read, but I feel like I'm missing something; what's wrong with $http and ngResource?"
2015-06-02 21:12:06;Pitfalls using ui-router's resolve;"I think I, respectfully, find myself in disagreement on nearly almost all of these points

>Might feel slow/laggy/stuck

>If that route has a resolve that takes a few seconds to complete, you won’t get any feedback about anything happening until the resolves are resolved.

Any routing system that has asynchronous route resolve dependencies is going to have to complete before the route finishes. A very simple solution is to listen for the `stateChangeStart` in a top-level location, like `.run`, and change state for an indicator to become visible. Then dismiss it on `stateChangeSuccess` or `stateChangeNotFound`. This is just how asynchronous resource depenencies work, and every router will have these problems. You luckily have the option to choose what resources you'd like to defer onto the route side, and pick others that you'll resolve once your controller and route have been loaded to unblock the UI and progressively fill out the view.

>Errors happen in no-man’s-land

>You have a resolve that makes an AJAX $http call. Eventually it will fail. Where will you handle the error? You don’t have a controller yet to manage things at this point.

This is pretty agnostic to any router system as well.. Your resolves may fail, and sometimes you want them to fail loading the route and enter a special state. Say a `401` response, you get to listen for those with an `$httpProvider.interceptors` and kick the user back to the login. Or a `404` you can bring up a not found view. A lot of these things you don't want to worry about in your controller. I don't want to have to handle every `401`, `404`, or `500`. You can handle this at a high level, that's the beauty of resolves and interceptors.. Otherwise, it's pretty typical to `.catch` the rejection and pass out `null`. I don't see anything wrong with this, nor do I see any of it being an antipattern. It actually provides a good level of control. 

>It adds complexity to the code

>The dependencies of the controller are now pushed away to a place far far away. Some of the setup of the controller now happens in a different place, even though it is still very coupled – each resolve maps to an argument for the controller.

But that's the beauty of separation. I don't have to care about how the data is fetched, i just need it. The resolve for the data can take the route param, say `users/:id`, and fetch the user by that ID. And I also don't think this promotes tight coupling, you can make these resolve functions sharable. Sure, there might be some controller-specific resolves, but I think it's a fair tradeoff. And who's to say that you can't create a `provider` for all your controller-specific resolves and use that in the `config` phase of the lifecycle where you build your routes? I think if you organize well, this promotes a terrific separation of concern along with making common resolves sharable.


For example, instead of

    angular.module('app').config(function($stateProvider) {
        $stateProvider.state('goat', {
            url: '/goat',
            controller: 'GoatCtrl as goatCtrl',
            templateUrl: 'goat.html',
            resolve: {
                goat: function(GoatService) {
                    return GoatService.getGoat();
                }
            }
        });
    });
    
You can define your resolve functions separately, even split them into different files relative to the component, and reference them

    angular.module('app').config(function($stateProvider) {
        function getGoat (GoatService) {
          return GoatService.getGoat();
        }
    
        $stateProvider.state('goat', {
            url: '/goat',
            controller: 'GoatCtrl as goatCtrl',
            templateUrl: 'goat.html',
            resolve: {
                goat: ['GoatService', getGoat]
            }
        });
    });The fucking thumbnail everytime this site is posted...Hey /u/abyx, check out my reply on your article. =)"
2015-06-02 16:40:58;Implement Search Sort and Pagination in Angular Applications;"Surprised this promotes a custom filter for pagination. 

With angular 1.4's `limitTo` you can specifiy page size and offset. Meh, this likely targets 1.3 as 1.4 just came out. Good article thoughNot finished yet, but I like it so far.

I know this is the wrong topic to discuss it, but am I alone in my total animosity for this kind of pagination? As a user I want to access as much content as possible preferable everything, I prefer an ""intelligent"" infinite scroll mechanism over numbers at the bottom.

"
2015-06-02 15:40:09;One-time binding support for angular-translate;
2015-06-02 12:54:17;Decorators & metadata reflection in TypeScript: From Novice to Expert (Part II);
2015-06-02 12:45:21;Angular 1.4 Done, But Short of Goal;"Well, i'm actually glad with the things that are in it. Animations are now much easier, but i also like the limitTo change for ng-repeat. Much easier to implement pagination (for whatever reason people might still design em this way)

And if you are already using ui-Router, then there isn't much to gain, just that it will be implemented in angular directly"
2015-06-09 19:00:25;Sharing models between controllers (and promises)?;"My personal suggestion is to not use ngController and instead define your own directives. Then you can use the require property of the directive and have a third directive as a shared parent, allowing you have multiple of these things if you want.

[Here's a small guide](https://www.airpair.com/angularjs/posts/component-based-angularjs-directives) I found quickly on the component pattern for angularIn my opinion using ng-contoller should be reserved for demo pages, but should not be used in cases like yours. Angular is declarative, and directives are what give you the most declarative power. The design you currently have is very fragile, and it is not clear where the boundaries of distinct concepts are. 

I recommend :

* creating a custom directive for your form, and another for your table 
* write a service that abstracts away all of the fetching logic. Since services are global, you can inject it in multiple places and have access to shared data > I probably need some connecting service/factory that will bus data between the controllers

That is exactly what you need. Not to be rude, but I typed *""share data between controllers angularjs""* into Google and this was the 2nd result - http://stackoverflow.com/a/20181543/540001

EDIT: You don't even need to create real functions. Take a look at this simple JSBin - http://jsbin.com/legomu/4/edit?html,js,output"
2015-06-09 17:28:18;A Guide To Transclusion in AngularJS;"So you can just add the class ""content"" to the directive template and it will pass any markup from the parent template through automatically? That sure beats ng-transclude for tidiness.This is one of the best articles I've ever read on transclusion.

One question I've been running into lately are the effects of the `controllerAs` syntax in directives.  If you have html that is controlled by a `Controller as Ctrl` and then a directive WITH isolate scope within it that has it's own controller `as Ctrl2`, the transcluded content doesn't seem to be able to use either controller at all.

Interestingly enough though, if you remove the isolate scope, the transcluded content does indeed work with the directive's controller (Ctrl2) but still does not know of the outer controller (Ctrl).  This makes me wonder if doing so eliminates the need of isolate scope at all in this situation."
2015-06-09 10:37:36;Decorators & metadata reflection in TypeScript: From Novice to Expert (Part III);
2015-06-09 09:44:08;Need some help implementing $compile in a typescript directive.;"You'll need to use the ng.IDirectiveFactory interface. This is a static function on your directive class that returns an instance of your directive with the proper injections. 

I'm on mobile so I can't find you an example, but search that interface and you will find what you need. Try not using that crap and write in Javascript."
2015-06-09 02:48:32;[Help!] Directive calling service methods multiple times when returned in a link function;"When you do ```scope.dirLinkVar = someService.method();```, it runs only once when the directive's link function executes. If you had multiple copies of the directive on a page, I'd expect to see it log once for each instance.

Once that line runs, the value of ```scope.dirLinkVar``` is set to whatever ```someService.method()``` returns -- and if angular needs to read the value again, well, it's already stored in that variable and it doesn't need to call method() again.

The reason that ```scope.dirLinkVar = function(){ return someService.method(); };``` will run multiple times is because of Angular's ""digest cycle"". It's how angular magically picks up on changes and keeps data binding working, and it'll run any time there's some user interaction, like a keypress or mouse click. It also runs on page load. And it can run multiple times, basically until all of the values ""stabilize.""

So it might be running 3 or 4 or 7 times, and when your HTML has a binding like ```{{ somePlainVariable }}```, it'll just stick the value of the variable in there. But if the binding is ```{{ someFunctionCall() }}```, angular will call that function every time a digest cycle occurs, leading to your multiple console outputs.

Hope that helps!"
2015-06-16 21:31:27;Has anyone had any experience using the WP JSON API to populate an Angular.js project?;"Done it. Love it. Use $resource. Makes it easy as cake. 

https://docs.angularjs.org/api/ngResource/service/$resource"
2015-06-16 19:53:45;Angular 1 + Webpack workflow;
2015-06-16 19:18:09;Angular multi-step forms, made easy;no demo :(
2015-06-16 17:13:02;Unable to add through $http.post;"Also, I'm still learning so sorry if it's a typo or something silly. Probably is
http://stackoverflow.com/questions/11442632/how-can-i-post-data-as-form-data-instead-of-a-request-payload/11443066#11443066

Had the same issue today, this helped me.Your express delete route is binded on ""get"" verb.
In your angular application, you use a ""post"" request...

That's explain why if you directly try to access localhost this works. It's because you do a get request.

You have to sync your front and your back and I think that will be fixed !"
2015-06-16 16:43:05;Designer News Clone (Part 2) - Implementing Firebase Security;"This blog post is very useful - thanks!

But I took a look at the first part and I really think that the data structure you use is not good, nor recommended by firebase -

take a look at this - https://www.firebase.com/docs/web/guide/structuring-data.html

It seems that you store all the posts in your user array - at least that's what you state in the first part of the blog post. And that's really contradicting. In your second post it seems like you almost structured the data in a right way. 

Except that in my opinion ( and I also discovered firebase 2 weeks ago ), you should create an own object for the ""comments"" - why? because lets say on the ""frontpage"", if you have the comments as a part of the ""stories"" you would load all the comments even if you only would want the title, upvotes and the creator for example. 

So I would suggest, that you create a comments array with the an object key of the ""stories"" ID. So you will reduce the bandwith and the loading time alot."
2015-06-23 21:22:40;Angular.copy() - When is it kosher to use ?;"Well, as you know, a reference is just that.  So if the values stored in the $scope.songs[0] object changed, so would the same values in $scope.currentSong and visa versa.  

Later in the tutorial they make changes to currentSong which would show up in the songs array if they didn't make a copy.  :)If they do a copy, modifications made to the $scope.currentSong value will not modify the value from the array.I tend to use angular.copy in modals. Usually I copy the value in the beginning and if the user presses ""Cancel"", I can restore the original value from the backup."
2015-06-23 20:52:22;Using $templateCache to support TDD in Angular;
2015-06-23 20:48:13;Pretty pleased about how my new transitioning and tracking grid directive worked out. Should I split this off and turn it into a separate project?;"No body actually answered your question.. I think you should split it off and turn it into a separate project.. Please notify me when you do ! I'd love to see it and contribute[deleted]That is really cool. How long did it took to make that? 

Really impressive.How are you doing the scrollbars and the overflow? a directive?Looks very snazzy but one usability thing. when the available space changes and things move to a new line, it's confusing a bit, and i wasn't sure whether the images preserve order (they do, right?).


it has a bit to do with the way images float to the new line. i like how they float when filtered, it's a much bigger change, but the continuity of just breaking lines, the animation might be a bit too much.


just my thoughts. love it otherwise! :)Oh well this looks familiar :)

(angular-translate-once author)

Great work! And would love to see it broken into an independent moduleAbsolutely :)Looks pretty cool, both the grid and DuckieTV as a whole.
Will definitely check it out. Really nice what's the tech stack behind it if you don't mind me asking, other than angular ?Can the items be of different heights and everything auto adjust?"
2015-06-23 16:02:22;Problem hosting local .json files with http-server;"have you added .json as a static content file type in iis?
does this help ?

```
var app = angular.module('scattChartApp', ['nvd3'])
.controller('MainCtrl', function($scope, $http) {
  $http.json('chartConfig.json').success(function(response) {
    if (typeof response === 'string') {
      resonse = angular.fromJson(response);
    }
      response.options.chart.tooltipContent = function(key) {
         return '<h3>' + key + '</h3>';
      };
      $scope.options = response.options;
      $scope.data = response.data;
  });
});
```

if not can you $log response and see what's it like.mime type?"
2015-06-23 15:50:49;AngularJS tutorial step by step;"I thought this was just a link to download Angular for a minute...

Took me a while to realize the left nav menu is actually the sections of the tutorial.How up to date is this?

I really like the format but want to ensure it's not teaching the wrong things first."
2015-06-30 14:30:45;Directive Template Best-Practices...;"We are using Webpack to inline the html during a build. Of course, the end result is html strings in your JavaScript, but imho the looks of production code is not important (as long as you have good source maps!). The separation of the code is important during development. Once it goes into production, you'll be uglifying it anyway, so no human will read it if they can avoid it!

I hope this helps you find a solution.I was in a similar situation and ended up using a Gulp task to prepopulate the templateCache. But the Gulp plugin, gulp-angular-templatecache, allows you to output the inlined HTML as a separate module which you can then register as a dependency on your application module (or better still, your component module in this case). You can then either configure the plugin to prefix the entry in the templateCache with a part of a URL or rename the references to the templateUrls in your directive declarations."
2015-06-30 13:45:41;Token-Based Authentication for AngularJS and Laravel Apps;"wtf with all the overlay divs popping up all over they place?Open up /src/Token.php

     with(new TokenValidator)->check($value);

Is with() a Laravel specific function? Where's the source for it?"
2015-06-29 23:10:02;Using Parse with Angular JS;"This is a bit outdated.  These days you'd probably be better off using `ng-model-options="" {getterSetter: true }""` for binding with ng-model.Great stuffI'm curious, where's the banner shot from?"
2015-06-29 20:55:07;app appears then disappears...;Have you tried taking your working plunkr code and just serving that with Grunt? Then if that works as intended, slowly add components back in until something breaks.Too much magic.
2015-06-29 17:57:05;How can a child input directive's ng-model inherit scope props of a parent controller without 2way binding?;"Is this what you're trying to do?

**HTML**

    <body ng-controller=""Ctrl"">
        <div ng-repeat=""item in data"">
          <p ng-click=""click(item)"">{{item.name}}</p>
        </div>
    
        <div>
          <h3>sound</h3>
          <input custom-input user-select=""{{user.sound}}"" ng-model='foo.sound' /> 
          <p>{{vm.user.sound}}</p>
          <h3>name</h3>
          <input custom-input user-select=""{{user.name}}"" ng-model=""foo.name"" /> 
          <p>{{user.name}}</p>
        </div>
        <button ng-click=""persist(user)"">persist changes</button>
    </body>

**js**

    angular.module(""app"", [])
    
    .service(""util"", function() {
      return {
        data: [
          { animal: ""dog"", name: ""napoleon"", sound: ""woof"" },
          { animal: ""cat"", name: ""bob"", sound: ""meow"" },
          { animal: ""horse"", name: ""wallet"", sound: ""neigh"" },
          { animal: ""angler fish"", name: ""suffering"", sound: ""blurble"" },
        ]
      }
    })
    
    .controller(""Ctrl"", [""$scope"", ""util"", function($scope, util) {
      $scope.data = util.data;
      $scope.foo = {};
      $scope.click = function(obj) {
        $scope.user = obj;
        $scope.foo.sound = obj.sound;
        $scope.foo.name = obj.name;
      }
      $scope.persist = function(obj) {
        alert(JSON.stringify(obj, null, 3))
      }
    }])
    
    .directive(""customInput"", function() {
      return {
        restrict: ""A"",
        scope: { ""userSelect"": ""@"" },
        controller: function($scope) {
           $scope.$watch('userSelect', function(){
             console.log(""UserSelect"", $scope.userSelect);
           });
        }
      }
    });"
2015-07-07 22:51:22;Tackling Authentication with AngularFire (Official AngularJs Talk);
2015-07-07 20:39:53;My Angular Debugging Tips;"*OMG, it finally used an image that isn't a picture of me drinking beer!*Nice tips. You can also use $0 - $4 to evaluate the last 5 selected DOM objects.

Also, not specific to angular, but console.table is very nice.

>     console.table([{name: 'Snap'}, {name: 'Crackle'}, {name: 'Pop'}]);

I use angular.element a lot as I feel a lot more comfortable in the console.  You can also pass in selectors to angular.element (i believe it uses jqLite) so you can select a scope tied to a specific class/element
This is awesome.I would like it if angular had an option to let exceptions bubble up. My life would be so much easier if I see locals in my stack traces.Wow, this is amazing. I really could have use some of this knowledge a few months ago on my last project :/"
2015-07-07 18:16:26;I implemented a simple Base64 factory that can be included in any project;"The UTF8 magic *may* be helpful - or very harmful. Otherwise, if you can leave Internet Explorer 9 behind, just use the native methods: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64

Lastly if you find yourself dealing with a log of binary data, take a look at [Blob](https://developer.mozilla.org/en/docs/Web/API/Blob) and [ArrayBuffer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer). These will be faster and use much less memory.This has primarily been useful when dealing with sending and receiving headers from our restful service. "
2015-07-07 16:54:20;Data driven states and navigation in ui-router?;"[deleted]I have created an Ionic app that dynamically configures the states based on a JSON file. It shouldn't be too hard to refactor it so it uses a database. 

https://github.com/beeman/ionic-dynamic
"
2015-07-07 12:22:44;How to scaffold a workspace for a directive you intend to publish?;"Here is a basic directive that has a lot of scaffolding you can use to get an idea what you want to implement.

https://github.com/angular-ui/ui-indeterminate"
2015-07-14 21:02:32;External application configuration file;"How are you creating your html files? Are you using nodejs with express & swig Or PHP? 

You can do something like

index.php

    <head>
        ...
        <script type=""text/javascript"">
            var config = <?php 
                print( 'hello world!!! Here you can use PHP to read in config.json and print it here?' )
            ?>
        </script>
        ...
   </head>

now config is available with $scope.config in your javascript.

or you can use [cachefactory](https://docs.angularjs.org/api/ng/type/$cacheFactory.Cache)What I do is leverage my build process to transform my configs into an angular constant, and just inject it where needed.* As part of your build process, can inject the config into your page 
* If you only need the config in controllers - could make use of the resolve on your routes and inject it there
* Deal with getConfig().then(.... all over - annoying, but nature of async
* Manually bootstrap your angular app, but only after making an ajax request to the JSON file and putting it into a global/variable on the window - but still be a good idea to wrap it into an angular service to inject it where needed 
Could you store it in indexeddb? I have explicitly chosen not to go this route because of the problem you describe.

I store my user settings in either localstorage, or chrome synced storage, An HTTP request is just too slow to act upon on app boot, since I also need my settings in templates and didn't want to introduce a promise-wait timer.

[This is my current implementation, if you're looking for more info on how that could work](https://github.com/SchizoDuckie/DuckieTV/blob/angular/js/services/SettingsService.js#L80)

I would recommend the manual bootstrap method. More details here: https://blog.mariusschulz.com/2014/10/22/asynchronously-bootstrapping-angularjs-applications-with-server-side-data"
2015-07-14 18:01:24;Angular2 Webpack Starter: Updated to Alpha.31;[deleted]Why webpack instead of JSPM / SystemJS?
2015-07-14 15:03:30;What are you using to export tables to .pdf, .csv?;"jsPDF creates PDFs in Javascript. I am using it, its working fine!Using SheetJS for excel, it's pretty powerful: https://github.com/SheetJS/js-xlsxI think you'll be better off finding one library for each format (to use as an Angular service) instead of a single library to handle all of them.

I've used [pdfmake](http://pdfmake.org/playground.html) to render tables in pdfs. What I liked about it is you just need to format a javascript object containing all of your data to pass in, instead of html or having to call a bunch of API methods. But if you already have your tables in html and not structured in js, then it would be more difficult.CSV is very simple and let's users import to a spreadsheet, so depends what your users are going to do with it.ng-csv has worked well enough for me."
2015-07-14 02:30:52;angular-video-bg - a YouTube video background directive;
2015-07-14 01:56:55;New with Angular, need feedback;"cool that you share your stuff!

i got some remarks tho:

* the code is not very [the angular way](http://stackoverflow.com/a/15012542/825444). this link will explain lots of wha it's about
* in bower.json you should put the file(s) that will be needed by other projects by tools like [wiredep](https://github.com/stephenplusplus/grunt-wiredep)
* you could add a dist folder where you concatenate all files to 1 file by a build tool of your choice (grunt, gulp, ...). so IIFEs only have to be applied onceI might suggest using  **templateUrl:** vs template: in your directives. You can then put the html for the template into a different file and just add the path to it in templateUrl: Keeps things separated and more readable. Nice job though!"
2015-07-21 19:28:34;Hybrid App developed with Angular/Ionic helps cord cutters figuring out where to watch their favorite programs and movies;Missing Canada. Also the ability to check multiple countries at the same time. Maybe putting a flag in the corner where its available.This has a really nice user interface. It is also a very useful app. Good work!
2015-07-21 18:58:40;[Hiring] Senior Software Developer at InteliChart (Fort Mill, SC) (remote ok);Please spam somewhere else :(
2015-07-21 18:43:29;[Hiring] User Interface Full Stack Java Software Engineer at Content Analyst Company (Reston, VA) (remote ok);This is a sub for a JavaScript framework called Angular. Nothing to do with Java. Maybe try r/Java if they allow such posts.I get enough of this all day at work. Please take spam elsewhere, thanks
2015-07-21 18:33:19;Can't login into Plunker via GitHub;
2015-07-21 17:45:05;Boilerplate Angular app using CoffeeScript, Jade and Stylus.;"It looks clean. 

I would remove jQuery. A lot of Angular devs try to avoid that dependency. Maybe, more generally, you could make all three of the auxiliary libraries user selections."
2015-07-28 22:59:18;[Hiring] Lead Web Engineer at Forge (San Francisco, CA) (remote ok);
2015-07-28 21:13:07;LF Angular Dev in LA;"3+ years of experience in angular seems unnecessary considering how young a language it is.

Where do people get these time requirements from?"
2015-07-28 19:45:32;Angular Performance: ng-show vs ng-if;"Another reminder, `ng-if` creates a new scope. If your model doesn't have a dot in your expressions (ie. `{{ userName }}` instead of `{{ user.name }}`) this might mess you up.

I still prefer `ng-if` over `ng-show`/`ng-hide` though. Something about having unused hidden mark up throws me off.There is a nasty - but very useful - trick you can use with ng-if .....

If you have a template which you need to re-render (for instance, if it has a lot of almost-always-constant values that use {{ :: ... }} one-time bindings) and you know when you need to re-render it then wrap it in an ng-if=""render"" and toggle the ng-if off and then on again:

    function rerender () {
        $scope.render = false ;
        $timeout () { function () {
            $scope.render = true ;
            }) ;
        }

I'm not proud of this! But it can be really useful :)I found this recently, my directive had a fair bit of logic within the togglable elements. If the directive was ng-repeated too intensely I had some noticeable performance hits. ng-if to the rescue!I've been preferring ng-show to ng-if because I incorrectly thought that removing an element from the Dom was expensive. It never even occurred to me that that hidden Dom was still evaluated!TL;DR: ""Measure, measure, measure"".
Whole article: ""Measure, measure, measure""."
2015-07-28 19:22:05;Angular Air Episode 25: TypeScript or ES6 with Babel?;Looking forward to listening, should be interesting. Podcast is on iTunes. 
2015-07-28 18:59:10;angular-video-bg;
2015-08-04 19:29:47;A tiny, static linting tool for angular ng-module directives;
2015-08-04 19:26:07;Angular Air Episode 26: FalcorJS;
2015-08-04 18:34:57;[HELP] Cancelling angular material event handler.;
2015-08-04 17:11:56;Angular Performance Diagnosis 101;"got large data sets?

use [angular bind notifier](https://github.com/kasperlewau/angular-bind-notifier) and ditch 95% of your watchers.ng-stats doesn't seem to work right. Maybe it's because I have multiple apps on the page (using angular.boostrap to start them). Ng-stats tells me I have 2 watchers, the code snippet I usually use tells me I have 449

    function getWatcherCount() { 
        var root = angular.element(document.getElementsByTagName('body'));
        var watchers = [];
    
        var f = function (element) {
            if (element.data().hasOwnProperty('$scope')) {
                angular.forEach(element.data().$scope.$$watchers, function (watcher) {
                    watchers.push(watcher);
                });
            }
    
            angular.forEach(element.children(), function (childElement) {
                f(angular.element(childElement));
            });
        };
    
        f(root);
        return watchers.length;
    };"
2015-08-04 17:03:55;vngrs/ng-simple;
2015-08-11 23:44:45;[Meta] Can we ban some of these useless users / rip-off sites?;"Totally agree!If you truly want them banned, post their userpage to /r/spam and they will delete the user. I agree as well. I've messaged the mods here before about this (in regards to a user who even created different accounts to spam his ngmodules website over and over). 

When there's 3-5 posts created within a few hours that simply link to the OP's personal garbage, readme collection website, some action should be taken. 

It's clearly against reddit's etiquette guidelines regarding SPAM and is a legitimate reason for banning.Agreed.  Click the ""report"" button when you see them."
2015-08-11 23:00:54;ELI5: What is ng-view and how does it work?;"ng-view is where ngRoute will display it's templates. You define the states that can be dislpayed on a provider service called: routeProvider. These states consist of a url path, a template, and optionally a controller. Then when you navigate to the url path, ngRoute will display your template where the ng-view placeholder is.ng-view is like an empty, stretchy box that you can put things into. At any time, you can decide to replace everything in the box with a new thing.

ng-view is a placeholder that you can load templates into. At any time, you can decide to replace the loaded template with a new one.

When the route changes, ngRoute looks for an ng-view element, loads that route's template (specified in `templateUrl`), and replaces the content of the ng-view with the contents of that new template file.Think of it as a placeholder for your view.
As you load different views/templates, they'll fall into place where the ng-view is at."
2015-08-11 21:28:05;Tips & Tricks for debugging unfamiliar AngularJS code;
2015-08-11 18:21:23;[question] What is the best way to share angular resources across projects?;There's actually a few options. I'd say the easiest and best is probably [creating Bower packages](http://bower.io/docs/creating-packages/) for them which is basically as simple as registering a Github repo with Bower through the command line (or create a single package for all the files to install at once). You could also [create npm (Node Package Manager) modules](https://docs.npmjs.com/getting-started/creating-node-modules), but npm is typically for Node modules while Bower is more front-end oriented. You could even [fork the default Angular Yeoman generator](http://yeoman.io/authoring/) and tweak it to include your files in a new build, but that would be the most intensive option. I think npm is the best approach , you can make your library public or create your own private repo if you don't want to share the components Host the .js files somewhere. Link to them in your index.html of the other projects. 
2015-08-11 16:15:09;Cant access $scope vars inside of function;"I'm on my phone at the moment but it looks like your checklistModel is pointing to undefined, maybe try changing it to:

    checklist-model=""active.branchen""I made a plunker from the code snippets you provided and I can't reproduce your problem.

http://plnkr.co/edit/DbqS0BNZPIvFEGiYIPil?p=preview
I've noticed in the past that for ngChange callbacks ""this"" inside the function is the scope/$scope you are looking for.You have everything under $scope. You need to create an object to put everything under. So in the top of your controller have $scope.search = {}
And everything should be under that for example  $scope.search.active = ...

I'd suggest looking up controller as since that pretty much does that for you in a cleaner way"
2015-08-18 21:02:54;My object size is always 50;"Sounds like your server is paging the results. Angular has no such limit on the size of arrays. I have not read anything about max size of objects on `$scope. `
                        Try `console.log(obj) in $http.success(....) `and then use chrome debugger to see what happens when you assign it to the `$scope` to that object in your controller. If your console.log() is returning a '50 size' then the problems in with the DB query. You can test it out of the context of $http and javascript and run this command in terminal. Might need to install curl. 

    curl http://localhost:3000/api/get-objects
and see if your database is not the actual problem. "
2015-08-18 20:42:27;Angular 2 Developer Survey: What Do They Know? Do They Know Things?? Let's Find Out!;"Back in the 90's I was on a very famous teeeeeveeee showIt took me a few seconds to remember the reference.Would like to see the results.
Btw, why refer to it as hacking AngularJS? Isn't it just scripting?"
2015-08-18 19:05:15;Overload ng-submit?;"Here is a working example : http://plnkr.co/edit/alFuPO3aqdQkOpMwKwmv?p=previewEven though it goes against the ""no DOM manipulation in the controller"", you can still use document.querySelector to find the element and blur it from the submit function.

EDIT: Actually you can get a hold of the form element by passing $event in the ng-submit. Afterwards you can use $event.currentTarget in submit function. When you have the form element, you can use querySelector to find the input.you can create a directive like blur-on which takes a condition as parameter and then watch it to do a elemnt.blur when the condition is true.  
Then in your submit fonction you set the condition to true once submited."
2015-08-18 18:43:44;Hiring Full Stack Web Developer at Comcast;SDEs at comcast (at least E1) gets paid shit to be honest. 55K start..which is abysmal considering philly area alone is 65K.
2015-08-18 09:06:07;I am looking for websites with public API with Access-Control-Allow-Origin;"just use https://www.mockable.io, https://apiary.io or similar websites to mock APIs requestsYou can always use Chrome flags if you have XS issues or CORS isn't implemented on a server.  --disable-web-security is probably what you want.

http://peter.sh/experiments/chromium-command-line-switches/I ran into this interesting tool a while ago:
http://apistudio.io/

I haven't messed with it much so I am not sure if it would meet the need you are describing but it is interesting to look at. 

Also my goto test API for tutorials has always been the federal reserve api

https://api.stlouisfed.org/docs/fred/
edit: oh I guess you have to register for the fed APITrakt.tv has one, and I built a simple generic PHP proxy That I run on heroku for free to use on http://duckietv.github.io/DuckieTV/

You can guide your audience members though setting that up for themselves in about 3 slides if you provide a working git repo to start them up with :)


    <?php
    
    error_reporting(E_ALL);
    /**
     * A transparent and caching proxy in PHP using CURL.
     * Saves responses to a JSON file in ./fixtures/
     * 
     * Usage: 
     * proxy.php?url=https%3A%2F%2Fapi.trakt.tv%2Fsearch%3Ftype%3Dshow%26extended%3Dfull%2Cimages%26query%3Ddoctor%2520who
     *
     * Cache files are saved as a alphanumeric-versions of the urls (a-zA-Z0-9)
     * E.g.:
     * 
     * https://api.trakt.tv/shows/doctor-who-2005/seasons/2/episodes?extended=full,images
     * becomes
     * fixtures/httpsapitrakttvshowsdoctorwho2005seasons2episodesextendedfullimages.json
     * 
     * Includes the full response headers and url in the file for debugging.
     * The resulting cache files have this structure:
     * 
     * {
     *   url: 'string',
     *   headers: { 
     *      headerName: 'headerValue'
     *   },
     *   content: 'string'
     * }
     *
     * When a fixture is available for the outstanding request it will be automatically served with the correct response headers.
     *
     * Note that for ease-of-use some things are happening:
     *
     * - Content-Transfer-Encoding is stripped so that the output is text by default
     * - Chunked responses are sent at as a whole
     * - Cookies are stripped from requests and responses (change this to your needs)
     * - By default, requests to this file are only allowed from localhost.
     *
     */
    
  
    
    // allow requests only from duckietv.github.io

    $_SERVER['REQUEST_METHOD'] == ""OPTIONS"") {
    	if(stripos( $_SERVER['HTTP_ORIGIN'], 'duckietv.github.io') > -1) {
    		header(""Access-Control-Allow-Origin: "".$_SERVER['HTTP_ORIGIN']);
    	}
    
    header(""Access-Control-Allow-Methods: POST, GET, OPTIONS"");
    header(""Access-Control-Allow-Headers: trakt-api-key, trakt-api-version, accept, X-Proxy-Url, Cache-Control"");
    die(""K"");
    }

    // fetch all relevant request headers and forward them to CURL.
    
    if(stripos($_SERVER['HTTP_ORIGIN'], 'duckietv.github.io') > -1) {
    		header(""Access-Control-Allow-Origin: "".$_SERVER['HTTP_ORIGIN']);
    	}
    header(""Access-Control-Allow-Methods: POST, GET, OPTIONS"");
    header(""Access-Control-Allow-Headers: trakt-api-key, trakt-api-version, accept, X-Proxy-Url, Cache-Control"");
    
    function parseRequestHeaders() {
        $headers = array();
        foreach($_SERVER as $key => $value) {
            if (substr($key, 0, 5) <> 'HTTP_') {
                continue;
            }
            $header = str_replace(' ', '-', ucwords(str_replace('_', ' ', strtolower(substr($key, 5)))));
            $headers[$header] = $value;
        }
        return $headers;
    }
    
    $hdrs = parseRequestHeaders();
    $parsedUrl = parse_url($hdrs['X-Proxy-Url']);
    $hdrs['Host'] = $parsedUrl['host'];
    unset($hdrs['Referer']);
    unset($hdrs['Accept-Encoding']);
    
    $curlHeaders = [];
    foreach($hdrs as $key=>$val) {
        $curlHeaders[] = ""{$key}: {$val}"";
    }
    
    //die(print_r($hdrs));
    
    // init curl (Save cacert.pem from curl.haxx.se/ca/cacert.pem and enable if you need it)
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $hdrs['X-Proxy-Url']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_HEADER, 1);
    curl_setopt($ch, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
    curl_setopt($ch, CURLOPT_CAINFO, dirname(__FILE__).""/cacert.pem"");
    curl_setopt($ch, CURLOPT_HTTPHEADER, $curlHeaders);
    curl_setopt($ch, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_1);
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT ,0); 
    curl_setopt($ch, CURLOPT_TIMEOUT,0); 
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_VERBOSE, 1);
    //enable for debugging
    //curl_setopt($ch, CURLINFO_HEADER_OUT, true);
    //$f = fopen(dirname(__FILE__).'/fixtures/request.txt', 'w');
    //curl_setopt($ch, CURLOPT_STDERR, $f);
    $response = curl_exec($ch);
    //fputs($f, print_r(curl_getinfo($ch,CURLINFO_HEADER_OUT),true));
    //fputs($f, $response);
    //fclose($f);
    
    
    // proxy post requests
    if( sizeof($_POST) > 0 ) { 
        curl_setopt($ch, CURLOPT_POSTFIELDS, $_POST); 
    }
    
    $res = curl_exec($ch);
    $err = curl_error($ch);
    
    $header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
    curl_close($ch);
    
    /* parse response */
    $headers = substr($res, 0, $header_size);
    $body = substr($res, $header_size);
    $headers = explode(""\r\n"", $headers);
    $responseHeaders = array();
    foreach($headers as $header) {
        if(strpos($header, ':') !== false) {
            $header = explode(':', $header);
            $responseHeaders[$header[0]] = $header[1];
            if(in_array($header[0], array('Transfer-Encoding', 'Content-Length'))) { // omit headers that make chrome unhappy
                continue; 
            }
            if($header[0] == 'Set-Cookie') {
                header(implode(':', $header), false);
            } else {
                header(implode(':', $header));
            }
        }
    }
    
    die($body);
If none of the other options suit you, you can create a website on S3 and set the bucket policy for whatever CORS headers you want."
2015-08-25 23:51:00;Help with Angular-rails blog;
2015-08-25 23:22:30;AngularAir Episode 29: Reactive Programming with Matt Podwysocki and AngularJS;
2015-08-25 19:03:36;[Hiring] Hamilton/Ontario/Canada - Intermediate AngularJS developer;
2015-08-25 17:07:29;[Hiring] Lead Front-End Software Developer at CCI Systems, Inc. (Iron Mountain, MI) (remote ok);
2015-08-25 15:38:18;Angular 1 and Angular 2 integration: the path to seamless upgrade;"This is a fantastic upgrade path. Looks like they're really taking feedback from the community.Can anyone elaborate on:
> **Native mobile UI.** We're enthusiastic about supporting the Web Platform in mobile apps.  At the same time, some teams want to deliver fully native UIs on their iOS and Android mobile apps

Do they just mean the 2.0 will be built to create a smooth experience on mobile?Upgrading to 2 will still be a pain in the ass"
2015-09-01 20:08:21;my digest iz slo - y u no fast;"how many watchers do you have?

    function getWatchers(root) {
    root = angular.element(root || document.documentElement);
    var watcherCount = 0;
    
    function getElemWatchers(element) {
    var isolateWatchers = getWatchersFromScope(element.data().$isolateScope);
    var scopeWatchers = getWatchersFromScope(element.data().$scope);
    var watchers = scopeWatchers.concat(isolateWatchers);
    angular.forEach(element.children(), function (childElement) {
    watchers = watchers.concat(getElemWatchers(angular.element(childElement)));
    });
    return watchers;
    }
    
    function getWatchersFromScope(scope) {
    if (scope) {
    return scope.$$watchers || [];
    } else {
    return [];
    }
    }
    
    return getElemWatchers(root);
    }
    getWatchers().length

run that in the chrome console and you wil get your answer"
2015-09-01 16:48:17;angular $scope...negative performance issues with adding more objects?;"The scope bloat and issues with the digest cycle are a primary driver of poor angular performance and a major driver for its elimination in angular 2. 

$scope must die!Digests become slow only because of watchers. The watch expression is evaluated in every digest (e.g. `result > 0` or `show()`). The actual handler of the watch, in case the watch expression's value has changed, also happens during digest and if you have one that's firing a lot it should be fast too.

For example, `ng-show`'s watch handler toggles a CSS class. I'm assuming that's relatively fast (though you might want to consider `ng-if` instead).

Anyway, `ng-show=""results > 0""` **is** adding a watcher, ala `{{ }}`. The more of these you have, the longer the digest.

Wrapping it in a function, though, doesn't matter all that much. Whether it's a function or a raw expression it will be evaluated in every digest. Yeah, functions usually have a little bit of higher cost to call, like in any language, but that's negligible in 99.999% of cases and I'd go with it if it means your code is more readable/maintainable.

Simply adding stuff to `$scope` doesn't automatically add a watcher, so putting lots of data on `$scope` doesn't matter. If all that data and functions are watched, e.g. using `{{ foo }}` or passing it to directives like `ng-show`, *then* it matters and impacts performance.

**tl;dr**: `ng-show=""foo""` **is** a watcher, only watchers impact performance, functions may be a tiny tiny tiny bit slower but you shouldn't care.

If you're unclear about what exactly creates a watcher (hint: almost ANYTHING) I posted a blog about this just a couple of weeks ago [here](http://www.codelord.net/2015/08/14/angular-watches-watches-everywhere/). </shameless-plug>[deleted]"
2015-09-01 14:57:13;AngularJS: Angular 2 Survey Results;"Site looks like dick on mobile. Couldn't read. TLDR?""There were about a half dozen responses for Dart and 1 for Closure Compiler. In other words, at least 7 Googlers submitted survey responses.""

sick burn, yo[deleted]"
2015-09-01 10:14:15;A Comprehensive List Of AngularJS Frameworks Pros/Cons;"Very concise list. Handy.

Small tip: lose/reduce the animations. They're cool, but I almost closed the page after clicking on the last link. It took over 3 seconds to scroll to the last item.This was awesome! Bookmarked for my next ground up project.
PS I currently use Angular Strap and really like it."
2015-09-01 09:30:02;Prevent browser template caching;"The way I do it is with a HTTP interceptor that adds a cache buster url parameter:

    $httpProvider.interceptors.push(['constants', function(constants){
        return {
            request: function(config){
                if(config.url.indexOf('partials/') > -1){
                    var separator = config.url.indexOf('?') === -1 ? '?' : '&';
                    config.url = config.url + separator + 'c=' + constants.cache;
                }
    
                return config;
            }
        };
    }]);

The constants.cache comes from the server and it gets bumped on every release.Open Chrome Dev tools, click the settings Cog and check ""Disable cache when dev tools is open"". So just keep dev tools open as usual and everything will be fresh.Got to set the cache TTL to 0 on the server. You'll get HTTP 200s on your requests instead of 304html2js is the way to go. Otherwise you have to put some kind of cache bust that always changes at the end of the URL...  

someFile.html?_=74882993756669"
2015-09-08 23:56:29;Anyone answer my SO question for some easy points?;
2015-09-08 18:52:41;Help with directives;"In your form directive's link function you'll also need to write:

    scope.onAddComment({newComment: scope.comment})

since you are using the function syntax and want to expose the comment as 'newComment'.

edit: It doesn't make much sense what you are doing. You are passing in the comment in the directive as well? Why? If the form is needed to create an entirely new comment passing in the comment via 2-way binding is not needed. You expose the 'newComment' to the on-add-comment attribute by the function syntax I wrote earlier.I'm on phone, so I only quickly skimmed your code. It may be that you forgot parenthesis on your getFeed method call in the init function. This line:
<form class=""form-vertical"" ng-submit=""addComment()"">

Is calling addComment() in the scope.

This is partially confusing because you declare addComment twice in the same scope. Once in the link and once in controller. 

Rename one of the functions and correct that ng-submit and it should work."
2015-09-08 17:42:36;What does the $get function do?;"it's the mechanism required to expose methods and objects from a provider. [read more here](http://tylermcginnis.com/angularjs-factory-vs-service-vs-provider/).Short answer: Don't worry about it.. yet.

Longer answer.

Angular has a number of ways of creating services

* providers
* service
* factory
* const, value, etc

'services' and 'factory' is just some sugar-on-top of the provider API that removes a bit of boilerplate for you. 

The main difference between providers and factories/services, is that providers are available during the 'config' block of your application.

    angular.module('xyz',[])
    .config(function(myThingProvider) { myThingProvider.availDuringConfig() })
    .run(function(myThing) { myThing.someOtherThing() });

For a provider that looks like

     .provider('myThing', function() {
        this.availDuringConfig = function() { }
        this.$get = function() { 
        var service = { 
           someOtherThing: function() { }
        };
        return service;
     } 
    });

During the 'config' stage, you can inject 'myThingProvider', and can do myConfigProvider.availDuringConfig(), but you wont be able to do 'someOtherThing', as the angular DI hasn't been fully setup at this point. 

The use case is generally 'when I want to have services that I want to be able to configure before they are used'. But, it might not be very often that you have the need to write a provider yourself.

But, an example of a provider that you probably use at some point - is something like the $stateProvider if you are using ui-router, which is basically 'let me configure the states of my application before the application actually starts'.Read the docs?"
2015-09-08 07:19:24;AngularJS cheat sheet Part 2;thanks for sharing alexmelyon. This should come handy in my current project.
2015-09-08 07:09:25;AngularJS cheat sheet Part 1;"This is horrendous.  Cheat sheets are common expressions you will use often.  ng-app is definitely not one of them, and certainly shouldn't be mentioned twice in the first list.


Something more useful would be:

 - examples of how ng-repeat is used along with orderBy, filter and the like
 - utilization of ng-class with optional value

 - $filter in js and html with example utilizations (number, currency, etc..)


Items you use often, but do a very quick google search every time and never commit to memory.This seems to be full of little errors and is distracting."
2015-09-15 23:38:54;How do I keep a ng-repeat element on a master page in a transition to a detail page?;"Could ngclick a function and pass in the value to be used(would be the same view routing) or pass it in as a url param to be used in the next view. Look at ng-animate-ref. It's in the ngAnimate docs. 

On mobile, sorry for brevity. You could also store the data in a factory or service and get/set whenever you navigate between views. "
2015-09-15 18:59:22;EscapedFragment.io is looking for production AngularJS applications to help test new SEO tool that offers server-side rendering as a simple web server integration;
2015-09-15 14:26:28;Mastering AngularJS Services Part 1 - Factories vs Services;Easy to digest, but has some great examples for someone like myself that is still relatively new to structuring applicationsBrilliant. When I was first learning angular nobody could cleanly explain how to use a service vs. a factory. There was lots of bad information but this article is spot on. nice article. i barely know angularjs (learning it) but this pattern applies to (most?) mvc frameworks which makes the article useful regardless. you can easily apply this to something like symfony (just uses a slightly different vocabulary).
2015-09-15 13:58:22;Why are my Angular tags in the view not parsed?;"I don't know what you're trying to do or what your setup is, but that's not angular binding syntax. You want to put the scope and/or controller variables in {{ }} tags, or use ng-bind on the parent element instead. 

To know more about what's happening we probably need to see your code.any error in the console?Double check that you're including the angular script and that you have included the ng-app tag?

Post your code for us, perhaps?Okay it LOOKS like I was being an idiot. Thought it also happened in Firefox but tried again just now and it seems to work.

So I disabled the AngularJS Batarang chrome extension. Looks like that solved it. Will do some more testing later.Just a thought here, maybe this is a good moment to push your app into being more API centric build your views with angular instead of Laravel. Just use Laravel to create serialized data outputs. at the point where you are having conflicts between to completely different templating engines you should consider a new path."
2015-09-15 09:23:16;Is an AngularJS something close to a class in Python? Because it seems like a class.;"To expand on my previous answer...

Classes in Javascript are defined as follows:

    function Pet(name) {
        this.name = name;
    }

    var pet = new Pet('rocky')
    var anotherPet = new Pet('apollo')
    console.log(pet.name); // rocky
    console.log(anotherPet.name); // apollo

Classes are instantiated with the new keyword. What the new keyword does essentially is to wrap the function like so:

    function Pet(name) {
        var this = {}; // The instance object

        this.name = name;

        return this // The newly created object
    }

So every time you call new on a function, you get a newly-generated object (referred to as 'this' within the function) returned back to you. This way you can have multiple instances of the same class.

So what about angular services? Well you are right in saying that services can look a lot like classes - normally an app factory would look like this:

    app.factory('PetFactory', function () {
        return { 
            name: 'rocky'
        }
    });

I would prefer to make this an app.service so I can use the class definition:

    app.service('PetService', function() {
        this.name = 'rocky';
    });

The above two are functionally equivalent - the usage difference is that a factory requires its function to return something, whereas the service will 'new' the function you pass to it and give you that (I think of it as instantiating the service class). In use:

    app.controller('petController', function(PetFactory, PetService) {
        var pet;
        pet = PetService;
        console.log(pet.name); // 'rocky'

        pet = PetFactory;
        console.log(pet.name); // 'rocky'

        pet.name = 'apollo';
        console.log(pet.name); // 'apollo'
    });

However, what is important to know about services (by this I mean all angular services - including 'service' and 'factory') is that they are only instantiated once, i.e. only one instance of them will ever exist, so:

    app.controller('petController', function(PetService) {
        var pet = PetService;
        var anotherPet = PetService;

        anotherPet.name = 'apollo';

        console.log(anotherPet.name); // apollo
        console.log(pet.name); // apollo
    });

And this is great - it allows you to share data between controllers by storing it in the service object.

You *can* use a service to give out the class definition, like so:

    app.factory('PetFactory', function() {
        var Pet = function(name) { this.name = name; }
        return { Pet: Pet }
    });

    app.controller('petController', function(PetFactory) {
        var pet = new PetFactory.Pet('rocky');
        var anotherPet = new PetFactory.Pet('apollo');
        console.log(pet.name); // rocky
        console.log(anotherPet.name); // apollo
    });

However, since each time it is the controller that instantiates the class, the service has no knowledge of the pets that have been created and so that data can't be shared using the service. 

I often find that I want to combine both of these behaviours - to have the pet class definition in the service, but also for the service to know what pets have been created. This is the pattern that I use (it may not be the best):

    app.service('PetService', function() {
        this.pets = {};

        this.getPetByName = function(name) {
            if (!this.pets[name]) {
                // Have the service instantiate the new pet so it can track and share the instances
                this.pets[name] = new Pet(name);
            }
            return this.pets[name]
        };
        
        function Pet(name) {
            this.name = name;
        }
    });
         
    app.controller('petController', function(PetService) {
        var pet = PetService.getPetByName('rocky');
        var anotherPet = PetService.getPetByName('apollo');

        console.log(pet.name); // rocky
        console.log(anotherPet.name); // apollo

        // The reason for doing this is so that...
        pet.lastName = 'balboa';
    });

    app.controller('anotherPetController', function(PetService) {
        var pet = PetService.getPetByName('rocky');
        // ... we can share data between controllers
        console.log(pet.lastName); // balboa
    });

I hope this helps! I wrote it out for my sake as much as anyone else's - to make sure I understand it myself ;)

edit: Fixed some syntaxFunny thing, better to feel and know it as service. I mean, term service. Service provides you some thing, API, object, function or even constant. It can be even adapter or just a layer above other services.

Yes, you can and should use service to wrap your classes to be injectable. But it is just one of many ways to use it.No they aren't equivalent. Javascript can use classes and you can return a class object with a service, but services are more than that. "
2015-09-22 22:01:08;UI Router - Repeated UI-View with data from JSON?;What's the need for repeating the ui-views? If you just want to use a template, then an ng-repeat wrapper around an ng-include of the template to display the data would suffice.
2015-09-22 14:25:20;Please advice and check my code which can improve and is there any useless/unwanted/repeated code . Thank you;
2015-09-22 13:28:23;Angular Responsive Layout Directive;
2015-09-22 12:58:04;What are your favourite AngularJS SPA ?;Routing system, you mean?
2015-09-22 09:56:05;awesome-angular2: A curated list of awesome Angular 2 resources;
2015-09-29 23:26:18;Grunt is not correctly building locally - missing files;"Couple things to check: what grunt are you on, which node, have you tried uninstalling grunt, deleting the node modules directory, etchave you cleared npm cache after removing your node modules, and  before re-installing?
"
2015-09-29 21:30:24;Using $scope.$watch with Angular ES6/ES2015 class syntax;check it out: https://github.com/christopherthielen/angular-360-no-scope
2015-09-29 15:31:25;Yet another Scope Question...;"Hrm. What does your 'result' variable look like coming into calcResults? can you make a fiddle/codepen demo showing your problem? [I made one](http://codepen.io/anon/pen/gagazX) roughly doing what you're talking about here and it seems to work. Your concept is sound, I suspect 'result' is an array itself being pushed into allResults.

So, I think after a bunch of cleaning up, I've determined that the issue is that the array gets reset after I'm running another function called calcNext. And, I have no idea why, but I'm also thinking that it's because it has to do with the fact that it's using ui-router's $state.go to go to the next page, perhaps reloading the controller??"
2015-09-29 14:32:19;I have a question on ui-select on Stack overflow if anybody can help;
2015-09-29 12:23:24;Angular 1.X + Ionic 1.X with ES6?;
2015-10-06 21:28:05;angular-simple-countdown;
2015-10-06 19:43:07;AngularAir Episode 35: Angular 2 and React;
2015-10-06 08:13:58;Do i have To use Lazy loading When developing Angular app that includes lots of controllers ,services and directives each in a separate file ?;"If you haven't already, have  a look into gulp / grunt. They're pretty awesome tools that will allow you to combine your .js /.css files together. If you feel like you're  struggling with getting the command line / terminal aspect of it working have  a google for Koala JS, which is essentially a gui that can also combine those files. 

The way I work is I have a dev-index.html file which I develop and test in, then I execute a gulp  task which combines my css and js files and inserts them into a new index.html ready for public consumption. I have good experience with ocLazyLoad https://github.com/ocombe/ocLazyLoad. I only use this to load external libraries - it has proven huge performance improvement in our huge angular app. This allows us to only load 3rd party libraries on routes that actually need them. But for your own application i would also suggest to use a build tool like gulp or grunt and concat in a single file. You should look into browserify and similar tools. They don't do lazy loading, they actually do the opposite and combine all your individual modules into a single file that's easy to manage.

https://blog.codecentric.de/en/2014/08/angularjs-browserify/Most people would combine the files into one I guess, it's probably more costly to do all the roundtrips to the server rather than just download a bit more in the beginning. Also when you see a problem with performance as your application grows then divide the big file of JS into two or more files which is logically divided depending on your application. Then you can also lazy load them as needed."
2015-10-06 06:13:53;Is it too early to start hacking at Angular2?;"It's great to start moving to Typescript as that's a big chunk of learning and tooling that you'll get a head-start on.

And it's awesome if you have the time to start fiddling with Angular 2. **But** don't expect whatever you're playing with to work in a month (or in a week). The major concepts of Angular 2 are pretty nailed down, but a lot of specifics is still changing constantly. Just a month ago we heard of a *huge* change of the [expected migration path](http://www.codelord.net/2015/09/10/angular-2-migration-path-what-we-know/).

So, if you want to play with it - go ahead. If you're expecting this to save substantial time when Angular 2 is officially out? I don't think that's a safe bet. You will learn, and will be able to move there faster, but not sure getting there before there's even a beta of Angular 2 is a smart thing.

Also, you can start shifting your app to be more Angular 2 friendly (e.g. thinner &amp; less controllers, Typescript, etc.)No, never too early.

We are currently building an app around Typescript and Angular 1.x.  
We are paving the way for getting ready for 2, and while it's still in alpha, it won't hurt to get an idea of what's in store, especially the changes to the way data binding, change detection, routing, DI, etc plays in.  **Everything** has changed in 2.  Best to get an idea now.  Just don't get married to any particular implementation, as it most likely will change.Yes, it's too early if it's not a hobby, not-for-production app. If you're going to wait until whatever shiny new thing is out, you're going to be waiting forever since there will always be new shiny things to come out.

The documentation is also still really lacking (I have toyed with it for hobby projects), so it will waste a lot of time.

What you _should_ do, is read up on how you can prepare for a migration to Angular 2 when using 1.x. Using TypeScript is a good start, and there are a lot of other things that will lead to **not everything** to be changed in 2, making the migration a lot easier.Go typescript my friend.Typescript 1.6 has great support for React. I would recommend using that as your view layer, with a home grown controller/router layer for now. Once Angular 2 comes out, you can switch it out and replace that with angular, while keeping the view layer still in react. Yup, it's way too early. The API is still changing and I don't think it will be out for a while.For all its worth we've just started a new project and faced the same dilemma wrt frameworks. Ended up going with Aurelia because it was much more stable than ng2 and seems to be less hassle to use, I.e. Favours convention over configuration. Been a pleasure for us so far.

Edit: forgot to add we use TS with Aurelia without any problems"
2015-10-06 03:27:58;Directive routing?;"If you're using angular-ui, why are you using ngRouter instead of ui-router? Also, you can't have multiple ng-views with ngRouter. Unless you meant ui-view.

BTW, the ui-view and/or ng-view you're comparing against directives are actually directives. One reason for using a custom directive over a route is when you need to manipulate the dom node through a link function. It might also be easier to use a custom directive when passing scope from a parent controller.

You must also consider if your directive will depend on data from the URL, such as query strings or parsing variables from the route path. The resolve function might be required in order to pass the required data to the route's controller.

Personally I use custom directive tags for common elements that don't depend on the route in order to make my markup easier to read, such as a common <navbar>, <sidebar>, or <footer>, and save the router defined pages for content specific pages.I think you're probably looking for something more like this [Scotch example](https://scotch.io/tutorials/angular-routing-using-ui-router) with multiple views. You can certainly encapsulate a view in a directive but there's not much reason to, honestly. You can just as easily use ng-include to pull the HTML out into a separate template to increase maintainability. "
2015-10-13 21:14:10;Best practice when updating factories in AngularJS?;"Angular $resource handles this sort of thing by passing around an object and only ever updating that object's internal properties - and it also triggers a digest whenever something changes. Would $resource work for your use case?Pop it in a plunkr or something. It's a lot easier to debug with a somewhat working example.First of all, I believe you intended the one chunk in self.changeDestination() to be: 


    self.factory.destinationCity = {
      name: 'New Destination'
    }

    
The above is setting `self.factory.destinationCity`, not `self.factory.destination`, let me know if that's not what you intended and I am missing something still. 

Next, Have you tried updating the factory members from public methods defined within the factory itself? Modifying the factory's members from within this controller by modifying self.factory.destinationCity seems wrong. Instead there should be a method that you reference via self.factory.changeDestination('New Destination') and the actual member variables should remain private. I still am not sure if this will solve your problem, however, as it appears to be passing by value, not passing by reference. Perhaps when you set self.factory it is actually creating a clone of the factory rather than passing a reference to it. "
2015-10-13 18:40:01;My new favorite api structure! Bulk loading with a cache.;widgetOr you could adopt pubsub as your standard with something like ddp. Let the framework do the work.rxjs
2015-10-13 17:14:52;Join my small team at Rackspace doing big things (with AngularJS!);"Is remote alright?Link gives: ""Job Not Found"" errorHi, have you considered hiring junior devs? Id like to take part in the learning process and be good in doing Angular."
2015-10-13 16:30:38;Hiring Angular Devs in Denver, CO;"3+ years of exp in Angular 2.0?PM Sent. I hope to hear back from you. I included my email which is my preferred means of communication. So all the frameworks and on a senior level?

Let me guess not older then 23 and willing to put 80 hour a week in. "
2015-10-13 08:21:48;Advice on webpage generator in Angular?;"I would just generate a template instead of large Json object and let angular do is magic. Check out this Yeoman generator from John Papa: https://github.com/johnpapa/HotTowel-Angular/blob/master/README.md

If you don't already know who he is, check out his style guide as well. This is the guy that the angular 2 team says to follow. I did something similar for a project - database instead of json, and unfortunately never found a method of building dynamic elements for directives.

I ended up with a 'translation' directive that was just a big ng-switch case based on the type name passed in.  From there you can dissect the json attributes into directive attributes.  

Everything worked pretty well from a logic and layout point of view, but it did ultimately end up being removed because no one on the team could be convinced that front-end variables had any business living in the back-end.  FrontEnd's like 'hey man, can't I lean on you once in a while?  It'll be awesome, we'll can do some great stuff together.'  Then BackEnd's like 'fuck off!  I have enough problems without you around.  Get that crap out of here.'This may work out, but in my experience it's nearly always better to develop small, fully contained and reusable components. The directives can talk to services to get data from the back-end, or communicate with each other.

My biggest concern with developing huge monoliths like this is it quickly becomes difficult to maintain. We are working on something similar in our current project, and I can tell you it gets complex fast. Especially when you have widgets (custom directives) which have settings which come from another service, because you would need to programmatically compile the directive paying in the scope. We have tried to limit the areas within the page which are dynamic, and limited the layout options to stackable rows with 12 columns. Dynamically compiling and injecting the html into the containers is definitely slower than compiling a regular angular template. Also you need to make sure that the styles flow into the widgets.

Bottom line, it is doable, you'd have to spend some time writing the framework to do so."
2015-10-20 23:49:43;Need some help estimating costs for Ionic dev work;"This is like asking: I'm building a house using wood and glass. How much should I pay a contractor to build this?I think you're going to have to provide way more details than that in order to get an estimate of front-end costs. Hire, as in a full time employee? Or a contractor? 

In the US? 

What level of expertise are you willing to pay for? "
2015-10-20 22:39:42;Realtime Web Apps with AngularJS And Firebase - Synchronization and 3-Way data binding - 3/4;
2015-10-20 22:37:01;11 Tips to Improve AngularJS Performance;
2015-10-20 22:35:21;13 Steps to AngularJS Modularization;
2015-10-20 21:53:42;How should I structure a WordPress app?;"idk, could you use [admin_print_scripts](https://codex.wordpress.org/Plugin_API/Action_Reference/admin_print_scripts) to manipulate the markup with in-line <script></script> vanilla javascript right out of the gate on the front-end, and then [admin_enqueue_scripts](https://codex.wordpress.org/Plugin_API/Action_Reference/admin_enqueue_scripts) to fetch angular and your angular stuff, or maybe [admin_print_footer_scripts](https://developer.wordpress.org/reference/hooks/admin_print_footer_scripts/) to ensure said fetching is in the footer.I can only recommend to use the WP-API and completely forget about actual WP themes in their technical sense. Use WP as kind of a database/source/backend. We have build several projects this way:
www.gruenerbaum-sinsheim.de or www.rv-gmbh.de
Matt"
2015-10-27 22:02:42;angular-widget-grid: A flexible grid layout for responsive dashboards;That is surprisingly pleasant to use! Nice work.Very cool! Thanks for sharing.
2015-10-27 20:15:42;Need help understanding angular compilation order and fixing an issue im having;
2015-10-27 18:06:49;Question: ng-repeat track by performance, is it OK to use $index;You're the best kind of programmer who comes back to answer his own question.
2015-10-27 17:54:54;Trouble with Angular html5mode and node express;
2015-10-27 17:00:24;Walkthrough to upgrade an Angular 1.x component to Angular 2;If you are wondering 'what should I do now', it's probably a good idea to start converting your app to TypeScript. That way your work won't blow in your face when you start doing extensive refactoring for the ng2 migrationim dreading the day I may have to do this. but 1.4.6 i feel like I can live with for a while
2015-11-03 20:41:49;Angular Cardboard Hackathon;
2015-11-03 17:59:39;AngularJS: Did you know…? From 1.0 to 1.3, part 2;Hi, author here - this is continuation of [AngularJS: Did you know…? From 1.0 to 1.3, part 1](https://medium.com/@skosno/angularjs-did-you-know-from-1-0-to-1-3-part-1-171fd93b9d4b). Again I try to list features that could have been missed or simply forgotten when developing in AngularJS. I will still follow up with post about changes made around 1.3-1.4 migration, after that I do believe change logs are really good (though might review again to see if some features did not sneak in unnoticed). Enjoy! (5 min read?)Awesome job, dude. I'll be sharing this internally to a team which uses angular extensively. Definitely a lot of important changes which are difficult to remember amidst development. Great summary.Yeah this is awesome stuff, a lot of changes that I wasn't aware of and that are hard to keep up with as new releases come out.  Thanks!Lots of little useful things here that could keep you from reinventing the wheel.  I've been studying Angular 1.X for over a year and still find new stuff that I could have used from day one.  Nice job!
2015-11-03 06:01:56;How to outsource an AngularJS projec;">I'm looking for advice on how to properly divide up and outsource this project - preferably whilst keeping the ultimate goal confidential.

Unless you have an incredibly specialized idea in some sorta niche field like cryptography, this is a bad mentality to have.

* The idea isn't the deciding factor of success, the execution is.
* If you hire *good* freelancers, then having them know the bigger picture can only help.  They'll write their code to not just tackle the micro-problem, but the macro-problem too.
* An NDA would protect you more than secrecy.  If someone happens to guess your ultimate goal without an NDA then they have as much right to the idea as you do.
* It shows respect to the people you hire.  This is a two-way street, you want them to respect you, so find someone worthy of you showing respect.

I would advise you against outsourcing to a country with a completely different culture than yours.  Besides time-zones I've never had issues with UK/North America.  Other parts of the world are fine too, just find someone you can talk to as a person rather than some abstract firm. 

The skill level you can hire depends on your budget.  

You want to hire someone that can help take your idea and transform it into a spec so that you both agree on what you're building.  This probably means the person you hire should be good at project management, and ideally they can make a screen-flow or quick mockup for you.  This is incredibly important if your idea is only defined in your head.  It needs to be on paper otherwise you'll get slightly different end-product than what you expected.

If you have any further questions feel free to PM me.  I've been a freelance webdev for years and Angular is my game.Step 1. Don'tI am actually finishing a project that is... well, a cloud based industrial iot control room with a widget (chart/gauge etc.) based data view, history etc. without prior experience of js app development and the year has taken a toll on me, so you are definitely making the right choice.

I think the best is to find someone it's easy to communicate with and whom has a preference towards maintainability and building scalable apps (Angular has several performance issues). I would rather use a consulting firm with solid js expertise or freelancers instead of hiring firms (especially overseas ones) whom don't necessarily have any idea or experience about this type of work./r/forhire has some wonderful freelancers.

However, I strongly agree with /u/acoard that you should not keep the goal a secret. It doesn't seem to be very purposeful. Good luck!9 women and 1 month do not a baby make.

Also being paranoid and keeping people in the dark about what your project actually is isn't a good way to get it done. You can't give engineers scraps of a blueprint, tell them not to talk to each other, and then expect them to build a suspension bridge.

If you want help you need to stop being secretive for a start, your idea probably isn't that original or special anyway and I doubt anyone's going to steal it because we all have our own pet-projects already.Well, first and foremost you are going to have to figure out what your budget is. 

The problem with the firms I have worked with in Indian; and this probably doesn't apply to all, but in my experience they tell you whatever you want to hear even if they are not proficient; with the intent of picking up the knowledge while doing the work. The thing is, it took me 3 years before I became really proficient with AngularJS. And they wait until the last minute to tell you they failed.

So yeah they are cheap, but you get what you are paying for. Now that being said, I would guess that a really proficient AngularJS senior engineer can probably make somewhere between 85k-115k based on all previous experience. On the low end that's 40/hr. Since it is freelance they will probably bump up the rate by 1/3rd, so You are looking at 60/hr on the low end. 

Now, some may be willing to do a lump sum per module/view, but that is probably from someone who isn't experienced as a freelancer; spike items always come up relative to what is easy to do vs the business requirements which may make a simple requirement difficult to implement. 

Your next issue is going to be ""how to properly divide up"" the project...preferably whilst keeping the ultimate goal confidential...that's very tough to do, especially if you are not an experienced Architect. Someone with a lot of experience breaking up the work will need to be consulted, get an understanding of the ""big picture"" and then figure out how to create modular components that are ""black boxes""; meaning whoever builds the black box doesn't need to know anything that happens outside that scope. Just what the inputs/outputs are. Usually you can have them sign a non disclosure form; meaning if they ever leak the info you can go after them in court; but that of course is time consuming and costly, especially if you have to prove that ""he/she"" was the one that leaked the info. People who get to Architect level has a lot of experience obfuscating processes(making it very difficult to track who did what type of deal). At the end of the day you will have to give them the non disclosure form; and basically get a feel for if you do/dont trust them. Most Architects I know are extremely professional. I've never taken any code I wrote for any given organization. I'm here to do a job, not steal intellectual property. 

Vetting candidates for AngularJS skills is also a very difficult task. You can ask basic questions; if you want I can compile a list of common Angular concepts; but as the saying goes, don't bullshit a bullshitter. You would need someone who has been there and done that to kind of...I don't know the right word, gauge the bullshit factor. Unfortunately unless you are an expert in writing software its very easy for people to memorize buzz words without really understanding how they relate to each other; I would say 70% of developers in general are under-qualified for the role they play; which is why products end up being shitty; but I digress. Fake it till you make it is a common term in the industry. 

Hope this helps.
 "
2015-11-02 22:01:36;Structuring a modern web app, take two;
2015-11-02 21:03:58;Upgrading apps to Angular 2 using ngUpgrade;
2015-11-10 20:00:51;Quick help needed ...ng-show i think.;"Bind the ng-show to a boolean in the controller and inside the api request response function brackets change it to true.

Or ng-show='data.length>0' depending on your data.

Here is a super basic example that won't actually compile, but hopefully points you in the right direction... Requires a synchronous search as well. If you are using $http to do asynchronous searches then just place the $scope.search_done = true within the success method of the promise (hope that makes sense)

    <script>
      var myApp = angular.module(""myApp"", []);
      myApp.controller(""myController"", function($scope) {
        $scope.search_done = false;

        $scope.perform_search = function() {
           mySearch = //perform synchronous search here
           $scope.search_results = mySearch.results
           $scope.search_done = true;
        }
      });
    </script>
    
    <body ng-app=""myApp"" ng-controller=""myController"">
      <div ng-init=""perform_search()"" ng-show=""search_done"">
        {{ search_results }}
      </div>
    </body>"
2015-11-10 17:49:00;Application bootstrap path/options when localStorage disabled?;"Modify the local storage provider so it stops halting script execution. That's the beauty of open source. 

Out of curiosity, what are you using for localstorage? "
2015-11-10 16:47:41;Angular 2 production ready?;"Haha, no. If you want to create a blog, yes.I would at least wait until the first betashttps://angular.io/download/

    let version = 'VERSION 2.0.0-ALPHA';
    let isReadyForProduction = version.indexOf('ALPHA') === -1;Well, the angular team were pushing to get to the first beta in time for AngularConnect last month, so they are very close to beta. If your application release is a year away I think it is a safe bet that it will be in good shape by then. From what I can see Angular2 makes a lot of the pain points of Angular 1 disappear. That said, a perhaps bigger concern is the lack of ecosystem for Angular2 - it will be a bit of time before that catches up. I have been using angular 2 in production for the last year and a half. No issues on my end."
2015-11-10 15:52:15;Introducing angular2-jwt: A Library for Angular 2 Authentication;
2015-11-10 15:46:50;Exploring Angular2;
2015-11-17 23:22:18;AngularAir EP41: The Importance of Learning JavaScript with Kyle Simpson (announcement of JavaScript Air);
2015-11-17 22:17:36;Updating saved data on to a json?;"[deleted]Angular cannot edit the JSON file without some help from PHP or similar. So the admin part has to update the file with a server side code.

Per stackoverflow.com someone asked your exact question as I am reading it. 

Link to comments: http://stackoverflow.com/questions/24919636/how-to-update-data-in-a-json-file-in-angularjsIt sounds like you're just wanting to use the JSON file in place of a proper database system. If you're not wanting/willing to roll a proper backend solution, you might look at solutions such as Firebase (recently purchased by Google):

https://www.firebase.com/

They offer a free/limited plan that might fit your needs."
2015-11-17 21:25:42;Been working on an AngularJS 1.4.5 tutorial series. Constantly trying to improve on it, let me know what it needs!;"This is a great initiative - nice job! My one big suggestion based off my own blogging experience:

To enhance the delivery of this would be to provide JSFiddle/Plunkr/whatever embeds next to the code pieces you're showing - to show the new Angular developer ""how"" you're assembling pieces of the UI/app as they're following you. I think a lot of developers will look at all the Gist examples and not really get it. One thing about embedding live examples of code is they don't need to fork the new repo each time - it allows them to play with the code directly in your article - which is great for getting people to stick around :)

Good luck and happy coding! :)version 2.0?"
2015-11-17 18:27:52;One of the biggest bank in Sweden (Swedbank) just released their new online banking web application written in AngularJS 1.x.;Hey, I'm also using that bank, but in my country still previous version, any idea if it'll be available internationally?Hey cool! The firm I am working for also decided to go with AngularJS for their banking frontend. Looks like angular is here to stay.. The biggest bank in The Netherlands and Belgium (ING) has been transitioning all their online apps to Angular for a couple of years now, with most of the online banking application being transitioned a while ago as well.Is there any screen shots of it or more of what it does. Obviously it is a banking app but any more responsive because they are using Angular VS what they have already?While we're at it, SiriusXM and Apple Connect.Bet the back end is probably still win 3.11... 
2015-11-17 14:02:11;"Debug smarter with ""track-digests"" - a simple Directive that counts $​digest loops";
2015-11-24 21:47:20;Interesting project using AngularJS and browserify;
2015-11-24 21:23:51;Mocking WebSocket calls in E2E/unit tests;The [angular-websocket](https://github.com/AngularClass/angular-websocket) module includes mock support. You may be able to extract the mock feature to use with socket.io.
2015-11-24 20:00:05;"Angular services with RxJS; decrapify your services";
2015-11-24 18:17:04;How do you hide the API key in an Angular app?;"Unless I'm missing something, cross site scripting restrictions would prevent you from consuming (for example) an Amazon API from within your web app anyway.

You would get around this by having a proxy service on the same host as the web app. This proxy service is the part of the code that would use the API key to talk to Amazon/Twitter/Whatever.Nobody cares about your api key. 
It's the token / session handshake that lets you actually do things. "
2015-11-24 18:09:07;ngComponentRouter - 1.5?;"I don't have an answer for you, but make sure you've got your msbuild version set correctly for node when building ""node-gyp"". Mine was defaulting to VS 2010, for which I didn't have the right files (I use VS 2013).

This link helped me out: http://stackoverflow.com/questions/14278417/cannot-install-node-modules-that-require-compilation-on-windows-7-x64-vs2012

One of these two commands did the trick:

    node-gyp rebuild --msvs_version=2013

    npm config set msvs_version 2013 --globalYea I'm looking for something too. Not sure how everyones using this router right now. There's no documentation.I think maybe you  are supposed to use the angular 2 router docs, its not completely the same, but similar

https://angular.io/docs/ts/latest/guide/router.html"
2015-12-01 23:48:15;ng-hack, done with AngularJS;
2015-12-01 19:54:39;Anyone have experience with Angular Material, specifically passing scope into mdDialogue boxes;"We are currently in a process of using material at work.

If u want to access the dialog scope atleast, u can define a controller for a custom dialog and access scope (and possibly services..) that way.

also, you can give ""scope: $scope"" in the options object to make it use a parent scope.Correct me if I am wrong, but dialog boxes are independent modules and should only take in an object/variables, and spit out a result that your controller handles.  Since Angular is moving to a more ""component"" based system with Angular 2, each component/module/directive should be independent of the current controllers scope.

NOW that being said, I work with Material at work in a project.  We use the `locals` parameter to pass in data that needs to be accessed:

    $mdDialog.show({
		controller: 'myDialogController',
		controllerAs:'dialog',
		bindToController:true,
		templateUrl: 'myDialogTemplate.tmpl.html',
		locals:{
			someVar:$scope.someVar //vm.someVar
		},
		parent: angular.element(document.body),
		targetEvent: ev
	}).then(function(returnedData){
            $scope.someVar = returnedData;
        });

Inside your dialog controller:

    myDialogController.$inject = ['$mdDialog','someVar','miscService'];    
    function myDialogController( $mdDialog, someVar, miscService){
        var vm = this;
        vm.someVar = someVar; //can now use it in the template.
        vm.returnData = returnData;

        function returnData(data){
            $mdDialog.hide(data);
        }
    }
    
Now again, this is how my team uses the dialogs.  They are separate from the scope of the parent.  But since they are glorified directives, you can pass your current scope in and use that instead. I have a site currently in canary that we rewrote with angular material. I've specifically used scope with dialogs as well. I really didn't have any issues after consulting the documentation. "
2015-12-01 16:10:14;I need to use a REST API which has more than just GET, POST, PUT and DELETE methods can offer.;"What exactly are you having an issue with? Whats stopping you from using $http service, to access those endpoints, or send data to them?ITT a bunch of people who didn't read this line: 

> I cannot modify the REST API so I have to deal with this. How should I handle these types of endpoints?

You already have your answer: 

> could I just define a method in my Zone factory (ex.: zone.incrementCounter()) which directly queries the server and increments the counter?

A non-RESTful method means you need to write a custom method. Not a big deal.[deleted]the url /zones/increment_counter/:id is not proper REST. There are a few design things to take into account here.

1. I want to just throw a caveat out here, for starters, you're issuing a command to modify the state of an existing object. by the rules of REST you'd want to issue a **PATCH** when you have a client modifying state. This is mostly a design decision but it leads into the next point.
2. Why are you allowing the client to determine if the counter gets incremented? Is this necessary behavior? I ask because it sounds like something that should happen organically by the server. Do you want the client to be able to get a zone without incrementing the counter? If not, simply remove it, change to /zones/:id and let the server handle counter incrementation without prompt from the client. If you do want the client to determine counter incrementation proceed to 3.
3. The proper procedure here is /zones/:id?increment_counter=true. The url /zones/:id/increment_counter is not proper REST because it's implying you're looking at a nested object under the zone, which is not what you're looking to do. What you're looking to do is to get the zone, and instruct the server to increment the counter. Using a query parameter is the best solution because it's both obvious to anyone looking at the specification as to what you are trying to do, as well it's natively supported by $http as well as should be the default way your REST framework handles these objects.Whenever I have a question like this, I refer to a best practices type document. The REST ""spec"" is too large/vague/etc, so I defer to real world examples. 

This is one of my favorites:
http://blog.mwaysolutions.com/2014/06/05/10-best-practices-for-better-restful-api/

If you cannot modify the API, that sucks. The increment call should be implemented as a POST method ( ~~or perhaps PUT~~ ) with the desired action at the end of the URL. Eg: `POST /api/zones/:zoneId/increment`

But, if indeed you cannot modify the API, wrap it in a service method that masks the ugliness of the implementation. $http or $resource won't care about where the zone ID occurs, only that it maps properly to the API.

edit: idempotentcy In REST, the URLs are usually supposed to represent objects or properties. It might be good to restructure the URL to /zones/:id/increment_counter. That will represent the increment counter of the zone with id == :id.

Then to perform an actual increment you can do a PATCH to the /zones/:id/increment_counter with the parameter incvalue = 1 which will represent how much to increment by.

You cannot use a GET, PUT or DELETE because those methods are supposed to be idempotent.Maybe have a look at this angular module: https://github.com/zerodine/angular-restclientI think this MAY be possible by using the 'url' param when specifying custom actions for your resource. See the following in the 'actions' argument from the $resource documentation: https://docs.angularjs.org/api/ngResource/service/$resource"
2015-12-01 15:24:29;Angular2 series – Tooling;
2015-12-01 10:11:29;Building a Simple Web Application Using AngularJS;The English isn't very good. This is useful for showing how easy it is to get an interactive page up and running quickly and easily with AngularJS, but a bit disingenuous as this doesn't really create an actual working application with any real functionality. It also doesn't explain much behind the steps to promote learning, so it really ends up being helpful for neither beginner nor advanced users.What is this cabbage? This is lifted from http://code.tutsplus.com/tutorials/creating-a-web-app-from-scratch-using-angularjs-and-firebase--cms-22391
2015-12-08 20:40:14;[Hiring] Orem, UT ~ 3 Month Contract;Dynamic forms in Angular is easy peasy even with large decision trees.  I've designed a ton of those for the medical industry.  
2015-12-08 20:02:39;£50 discount code to Todd Motto's Angular workshops;If I was in the UK, I'd hit this up. 
2015-12-08 16:24:12;Free Quickstart AngularJS Course @Udemy;
2015-12-08 14:01:36;How to Upload Files with AngularJS and Node.js;Direct link: http://code.ciphertrick.com/2015/12/07/file-upload-with-angularjs-and-nodejs/You don't really need to introduce another dependency, just use FormData where available, otherwise fall back to a hidden iframe.
2015-12-08 09:39:47;ngComponentRouter compared to ui-router;I don't know if I know enough about it yet to switch. But my goal is to switch if it means angular 2 sooner.
2015-12-15 22:09:54;Angular 2 Quickstart Repo (Couldn't find it on Angular Docs);
2015-12-15 21:13:39;AngularJS: Angular 2 Beta;
2015-12-15 20:12:40;Two different inputs to find items in array of array;
2015-12-15 19:57:13;angular2-webpack-starter has been updated to Angular 2.0.0-beta.0;
2015-12-15 19:53:41;Play with Angular 2 beta.0 now!;
2015-12-22 21:54:29;Attempts to make an webApp c#MVC and Angular ( need Help/suggestions );Hey, I'm a .net dev too. You need to get your data into a javascript object that you can consume via angular. The simplest solution for you might be to serialize the list to JSON and render it in a script tag in the cshtml view. The better way (in my opinion) is to set up WebAPI stuff in your app and make a Log controller that you consume via angulars  $http.get() function.Hi, I've tried both solutions (returning json from a classic MVC controller and webapi). I vote for webapi too: it's designed to work as a pure data producer instead of a whole page generator
2015-12-22 14:42:20;5 Fantastic Material Design Templates for AngularJS;
2015-12-22 09:32:21;By any chance is there anyone here from Northeast PA that would like to start up an Angular development group?;I'm in the Lehigh valley - what specially do you have in mind? I have very little experience with angular but I'm a professional webdev.[deleted]I'm in Lehigh Valley.  I'm up for a meet up.  I'm doing both Angular with a PHP Laravel backend and an Angular with a ASP.NET Web API backend.
2015-12-22 02:21:45;Unhappy with Angular Material and MDL. What other options?;"Use Twitter bootstrap with angularjs1. 

Angular material is a good thing, but not usable for rich applications, has some really tricky parts for now, needs more real projects to be usable for wide audience.

Angular2, on other hand, looks really good an I use it for few small projects, but it has not that mature community and libraries to build apps with, like router, tables, widgets, etc.

So, for now, stick with angularjs and bootstrap or you will never finish your project. Also, you will never need to write tons of css, but it is totally fine to write some here and there. So don't be afraid.Really? I find Angular Material guide page superb, it gives with detail and examples most directives, services and configurations. Also, the implementation of flexbox in angular material is amazing and super flexible.   Exactly what problems do you have with it? I might be able to help. Angular Material is good once you understand flex boxes. Try this: http://flexboxfroggy.com/

Some things that took me a while to figure out:

* md-content is for scrolling content
* layout-fill on the parent element to make sure children take up the entire area (I generally use this on the main ui-view).

I have a couple pages up from school projects using it, I'll be making a generator soon.

Blog site I'm working on with Angular Material: [mcebrian.com](http://mcebrian.com)

Interactive final project for a Digital Forensics course I just finished: [mcebrian.com:5930](http://mcebrian.com:5930) (just use any fake e-mail address/password combo to log in)

There's definitely a learning curve with Angular-Material, but once you get it you can bang out pages pretty quick.I also had issues with angular material and have switched back to good old bootstrap for now. Check out Polymer. I haven't used it, but it looks slick and have had it recommended to me.The big problem with Angular material is that they don't embrace modularity.
I want to use 1-2 of their components and have to bundle their whole library?
Just look at the size!
Will it work with the rest of my design?
The answer I got from Gitter it is meant only to be used as whole.

http://semantic-ui.com/ lets you `npm` individual modules, which I really like.Materlize is a newer framework, and not as mature as bootstrap but it's a nice MD css framework.

http://materializecss.comPersonally I like material, but if you aren't feeling it you might want to give [Angular Foundation](http://foundation.zurb.com/apps/docs/#!/angular) or [Ionic](http://ionicframework.com/) a try.

Have you looked at Semantic UI?
No need to mix JS with CSS to stay sane.Angular material is mostly for making things move and animate through user interaction. Are you trying to animate things? Use bootstrap for responsive layout without animations. It won't look or feel as great but that's the price you pay for simplifying your project"
2015-12-21 22:02:24;Path to learning Angular/Angular 2?;"Angular 1.x will continue to be used and supported many years from now. The question is if you want to work with new projects (Angular 2) or maintain old ones (Angular 1). However I would say that Angular 1 is still the most popular for new projects, but this will change soon. 

I find Pluralsight awesome when it comes to learning new stuff... You'll find quite a few Angular 2 resources linked over on /r/Angular2. Learning Angular 2 at this early stage will be a painful process depending on your current level of javascript expertise. The majority of past tutorials and blog posts are still alpha stage and woefully broken now that we're in beta. While learning Angular 2 is a worthwhile endeavor, if you have any type of deadline for a project and don't have a large amount of time to solve most problems yourself, you're better off with Angular 1.You can have best of both world 
javascript Code that works with both
https://github.com/ngUpgraders/ng-forwardAngular 2 only recently went beta. Angular 1 is prod ready. Personally I'm not doing anything with Angular 2 until it becomes more stable because a lot will change and some things will break. You'll find a ton more material and direction going the Angular 1 route while 2 is being figured out.

https://thinkster.io/topics/angular

https://angularjs.zeef.com/harris.brakmic

https://www.airpair.com/angularjs/posts/angularjs-tutorial[deleted]"
2015-12-29 22:15:07;Any tips about adsense and angularjs?;"I came to the conclusion that there is no legitimate way to effectively use Adsense directly on an Angular SPA. Any workarounds to make it work technically violate different terms or use. They did have some experimental AJAX loading feature a few years ago but it was shutdown.

What you can do though is use DoubleClick for Publishers (Dfp) which allows hosting Adsense ads loaded via Google Publisher Tags script. Although it's a bit of extra work initially and something new to learn it does give you way more control and lets you sell impressions to other ad networks as well as Adsense (so potentially increasing the bidding pool and thus revenue).

You can hook up ad-refreshes to route navigation or other interactions in the page or even refresh ads on an interval, lots of things that you can't do with native Adsense.

One thing that is still unclear is how well adsense crawler supports Javascript powered sites with AJAX loaded content for the contextual ads. I think the adsense and search index bots now use the same crawler and it seems like adsense loaded via Dfp into an Angular page understands the content just fine.So there are still no solution ? Angular is a great tool i don't understand why Google doesn't want to integrate it better>  I am considering getting rid of angular and turning this into a ""regular"" website, but I would rather avoid that if possible..

I'm going to go out on a limb here and guess you used angular to build a SPA when really all you needed was a basic website. Correct?

I think you may have mistakenly used the wrong tool for the job here. Angular is great, we can all agree on that, however it's very specifically built for web applications.

If you're wanting to monetize a web app there's lots of ways to do that. See every SaaS application for example. However ads are a very poor way to do this. That's why you're struggling to find a technical solution to your issue.

I'm not trying to berate you, but unfortunately sometimes we all have to learn the hard way."
2015-12-29 19:40:12;10 most popular angularjs projects from 2015;"> Having talked about most popular javascript and django libraries started in 2015, something felt missing, until we felt, angular was not reviewed angularjs.

I have read this 5 times now and I'm still confused by it. I have been out of the Angular game for a while now since working on React.js, but it sure is reassuring seeing the most popular projects being focused on ES6, Webpack, and Material Design."
2015-12-29 14:56:02;Multiple controllers in a single webpage;"I quickly threw your code into a few files and it worked.  If it helps here it is:

<!DOCTYPE html>
<html ng-app=""app"">

  <head>
    <meta charset=""UTF-8"">
  <link rel=""stylesheet"" href=""bower_components/bootstrap/dist/css/bootstrap.css"" />
     
  </head>

  <body ng-controller=""MakeGray"">    

    <div class=""row"">
      <div class =""col-md-4 col-md-offset-5"">
    <!--<button type=""button"" class=""btn btn-primary"" ng-model-->
    <button ng-click=""MakeGray_Button()"">Make Gray</button>
      </div>

    </div>
    <script src=""bower_components/angular/angular.js""></script>
    <script src=""bower_components/jquery/dist/jquery.min.js""></script>
<script src=""bower_components/angular-bootstrap/ui-bootstrap-tpls.js""></script>


    <script src=""MakeGray.js""></script>
    <script src=""app.js""></script>


  </body>
</html>[Here you go](http://plnkr.co/edit/A4eTzyOMJRDfL1MThTm7?p=preview)

The bottom line is when you create a module with an array of dependencies, angular looks for the matching ng-app. 

The module ""MakeGray"" is another application and needs to have a matching ng-app, but in this case it's redundant, just delete that line and attach to the ""app"" module directly to connect everything."
2015-12-29 12:56:05;Readme - Social bookmarking extension;
2015-12-29 11:53:25;Please give me some feedback on my first angular / node.js application.;First thing I went to look for were tests. You should write tests, and I will not take no for an answer! Also, the file structure is a little confusing, but that's just me.
2016-01-05 23:59:51;Which one for self-taught looking for work: Angular 1.x, Angular 2, or React?;"6 months ago? angular 1.x.
Right now? React.
6 months from now? Anyone's guess.You're not going to be able to get away with learning just angular 2. There will be huge market for converting 1 to 2. React is just a portion of what you'd need to learn to be functional in that space. 

If you haven't already, before anything else, I'd learn advanced vanilla JavaScript, specifically es2015, and NodeJS. You'll be using these regardless of what front end you pick.

After that, I'd start with angular 1, as a baseline. Then pick up the other two after. Being well rounded is important."
2016-01-05 22:38:08;two way data binding from directive to Parent Controller not working with ng-change?;"You should take a look at the docs for [ngModelController](https://docs.angularjs.org/api/ng/type/ngModel.NgModelController), there is a directive example at the end.This sounds like a potential anti pattern. Having things communicate with their parent, that is. hi.
there is a typo in the assignment of filterId in the directive's html.
""filterId"" should be with kebab case :

    <team-filter filter-id=""filterId"">

you wrote

    <team-filter filterId=""filterId"">
    
   
    Like others have said, using a Service to arbitrate the data would be better; but this can be done with the controller only as well.

IMO, you would be better have passing the data needed to run the controller into it - rather than it just having static data.
This data would probably come from a service as well, of course.

After this, you have the directive notify of a change in selection via a method.
This is slightly different than you have at the moment. Yours is working (with the fix from orizens) via two-way-binding.
Like you know, normally with two-way binding you would need to watch for changes with $scope.$watch.

Instead, you can pass in a method to call, similar to what you have with change(), but not only to notify of the change, but also to pass back up the selected item. This makes a clear data path .. you passed in all the data needed to run the component, and it passed back the selected value when done/changed. For the 'done' use case, think of a component which opens, and then passed the finished data back when you click save.

Check here for an example of all this :: http://plnkr.co/edit/IgqYbQmqogCBvvlNwAKr?p=preview

Note the way ng-change is calling back `ng-change=""selectFilter({ filterId: directiveFilterId })""`

The object in there is important -- angular wraps all function like this with it's own handler which helps with mapping parameter names.
The object property names are mapped to the parameter names you used when specifying handler to being with -- `select-filter=""select(filterId)""`
That filterId parameter will get the correct value because the object property is also called filterId.

I also added a way for you to pass in any initially selected value as well.
Angular options helpers make it easy to have a predefined option selected just by the ng-model already having a valid value."
2016-01-05 22:21:25;Hashtag Chatting - Built on Angular/Angular Material.;what am i looking at and why does there seem to be an active user base alreadyLooks cool! Is it open-sourced?
2016-01-05 21:52:36;Angular 2 for AngularJS developers - AngularJS-SF (San Francisco, CA) - MEETUP;
2016-01-05 21:09:30;How to include a vanilla js class in angular for use in both node and angular?;
2016-01-12 23:43:44;How Angular2 tackles problematic support of Shadow DOM across browsers and provides abstracted styling for its components?;
2016-01-12 21:36:08;Advice needed. Starting new project. Should I pick AngularJS 2 or 1.x?;"Honestly I would use Angular >= 1.5.x for now, but make componentization a real focus, avoid ng-controller etc.

Basically read this:

http://teropa.info/blog/2014/10/24/how-ive-improved-my-angular-apps-by-banning-ng-controller.html

2.0 is way too bleeding edge atm to be used in production IMHO.hi.
if you choose to go with ng1 > 1.5, consider using ES6/ES2015 - thus, making the code almost ready for a move to ng2.
You consult a styleguide i've started
https://github.com/orizens/angular-es2015-styleguideI get asked this a lot and finally put an AMA up with some thoughts: https://github.com/toddmotto/ama/issues/8

Hope these help! :)I would lean strongly towards angular 2.

If this software needs to be enterprise-grade from the start, or you have more than just a few people working in it, or if the rest of your team isn't keen on using the cutting edge, then for sure you should stick to 1.5.

If none of the above applies, then angular 2 is right now capable of being the core of a large project and you shouldn't feel too wary of it. I've converted an app to 2 already and am pretty satisfied with it. I'd recommend trying it out. It's pretty decent for beta. As long as you have time to keep upgrading it through the release.It depends on your launch timescale and how critical it is if things are delayed due to hiccups.

I've been ""kicking the tires"" of Angular 2 and even though there are still some rough spots and pain points you can see the promise of it. It's forward looking and embracing the future of client-side development rather than sticking with the past. There are plans for server-side rendering, web-workers etc...

Sometimes there are some frustrations not least because the documentation and know-how hasn't been built up yet but given time that will come. I already feel more productive with v2 despite the learning curve and having used v1 for quite a while.

If you have no Angular know-how at all then I think it's a no-brainer - learn Angular 2 ... when did any old-version framework ever outlive the new version? (apart from Python 2 vs 3)."
2016-01-12 21:13:29;Angular 2 - A Practical Introduction (e-book in progress);
2016-01-12 20:45:11;lightweight rest service/library;How is this different from $resource? TIA.
2016-01-12 20:01:06;"How do I use a ""link"" property on an angular.component (Angular 1.5)?";"Just expanding on @frogbacon's post:

- Component is generally for creating ""components"" (no shi...)
- Directives become ""decorators"" of HTML (think ng-repeat/ng-switch)

This change allows components to become merely templates and Controllers, and any DOM manipulation really shouldn't be done inside them.

If you need to create custom DOM logic, you're likely going to need to create a Directive for that :)

.directive() isn't going anywhere!Short answer, you don't.

These ([this](https://toddmotto.com/exploring-the-angular-1-5-component-method/) and 
[this](http://angularjs-recipes.com/#!/posts/5612d0/use-components-into-angularjs-15-before-mastering-them-in-angular-2)) articles break down how to use the new .componet method nicely.

If you need access to `$element` or `$attr` you can use a function for the template prop with those as params:

     angular
       .module('MyApp', [])
       .component('greeting', {
           controller: function() {
              var myCtl = this;
              myCtl.name = ""John Doe"";
           },
           controllerAs: 'myCtl',
           template: function($element, $attrs) {
             return '<h1>Hi ' + $attrs.name + '!<h1>';
           }
       });

For now it looks like you should be moving most link logic to the `.component` controller, AFAIK.

Hope this helps.`component` is not replacing `directive`. It producing a directive but if it's replacing something, it would be the route controllers.

For DOM manipulation, you need to create a directive using `directive`."
2016-01-19 19:24:22;AngularJS and SEO methods;"SEO is possible for AngularJS check those URLs

http://www.offlineprogrammer.com/angularjs-seo-part-i/

http://www.offlineprogrammer.com/angularjs-seo-part-ii/
I use the tips in [this article](http://www.yearofmoo.com/2012/11/angularjs-and-seo.html). It's a long read, but it basically boils down to:

* configure your webserver to use HTML5 history API
* writing a script to have PhantomJS pre-render all your views
* saving them to .html files
* configuring your webserver to serve these files when crawled by a webcrawler

Something to keep in mind with this solution is that any time you make a change and then publish your site to production, you're going to want to re-run your PhantomJS rendering script.We use Angular in one of our side projects. SEO optimization is possible, because Google can ""read"" your Angular context. The Google Search Console will help you a lot, how Google is crawling your site. We've lost about 15% of Traffic from Google since our rewrite with AngularJS.Prerender.io is easier to implement than you might think. I would give that a try."
2016-01-19 14:04:05;Angular 2 First App Post-Mortem;"How was testing? unit + e2e.

How many of those react/redux-inspired architecture pieces are the ng 2.0 way of doing things?[deleted]"
2016-01-19 13:54:25;AngularJS Architecture - What are best practices for dependency injection?;"You might want to look at [John Papa's style guide](https://github.com/johnpapa/angular-styleguide) Where you end up with an app.widgets place to store shared widgets.I just built a very , very similar system.  I indeed did use all directives, no controllers, and all comm is done through services or by $broadcast or $emit.  I store a config for each component once its ""placed"" in a column on the page.  I even store the row, cols in a view object and use a template to go through them all and generate the view.  Have them pick from a list of components(directives) to place somewhere and select a datasource for that component, bind that to the components config.  Ng-init = load that widget's data.if you're going to use es2015 - i encourage you to have a look at a styleguide i started:
https://github.com/orizens/angular-es2015-styleguide
* inspired from john papa as well.https://www.youtube.com/watch?v=5rGkVcnIuj0"
2016-01-19 11:01:50;Hi! I created my own Angular / Typescript / Browserify boilerplate. (a small demo crud application included).;
2016-01-19 04:25:20;Do you write angular 1.x in TypeScript;"I love typescript, and lots of people here tells me there is no reason Not to use it.

After considering it for a work angularjs project I realized that it's too much extra work with not as much benefits back. You have the whole tooling setup and typings / interfaces for your app, resources and 3rd party libs. It takes a little extra time to write controllers with correct interfaces and all. In the end, in es5, our controllers are very lean and easy to read, there isn't many bugs that extra typings would have catched. 

I though will use TypeScript for hobby projects and I would recommend it for a more complex and bigger app.I've been doing this exact setup for a number of months now. For the most part it has been excellent, and definitely worth the time to setup. It makes dealing with services so much easier as you always get correct completion, even getting objects out of promises. 

It is also very useful for refactoring. I can remove a field from an api, and immediately see most of the files in the project that depend on that field. This has turned what used to be a major effort (basically retesting everything, and fixing the bugs one by one) to a pretty small job. Only issue is when such a field is used in an angular template.

Lastly, by doing it in typescript will save a lot of effort when I eventually migrate to angular 2 (which will be at least a year or more), as angular 1 + directives + controller as + controller/service classes + typescript is as close to angular 2 as you can get. 

In terms of testing, I have very little unit testing for the frontend, rather I have been focusing on integration/automated browser tests using selenium. Only for some of the more complex views/services is there any unit tests. This may partly be caused by using typescript, as the type safety it gives likely removes a lot of the need for unit tests for simpler views, making doing more integration tests a better use of time.

The main cons are:

 * It is a fair bit more setup. You have to configure a compiler (I use webpack), as well as the typescript compiler, and getting typings for the right angular libraries. You will occasionally have to write your own typings if you find a library not in definitely typed.
 * You really need to switch to using the ES style modules rather than simple concatenation for it to play well with typescript. Although this once again is future proofing your code.
 * It is yet another frontend technology to learn
 * You have to be careful entering the types of dependencies to constructor methods, as there is no way for typescript to check you have given the right one. Eg if you use `constructor(someService : AnotherService) { ...` you wont get a compile error, but you will get runtime errors due to someService not being anotherService. 
 * There is no type safety in html templates. This is turning out to be the biggest cause of runtime errors during development, which shows how many errors are prevented by typescript everywhere else.I'm doing a major project now in NY for one of those giant over-priced retail stores.

It's 1.x using TypeScript and I cannot imagine living without it.

Benefits have been:
- Interfaces making everything crystal clear in terms of intellisense.
- Natural implemention of patterns (e.g. Abstract Factory, Observer)
- Abstract classes
- Just plain vanilla classes with private, protected and public methods.
- Strong typing prevents a bazillion errors along the way.

And so far, every one of my 3rd party tools have a definitely typed typings.

I went from vanilla JS to TS about a year ago. It was challenging to adopt short term, but has paid itself off by several factors of 10.

Of course, YMMV.
Did not work well enough for me and one of my past projects.

To me TypeScript just felt out of its element in an angular 1.x app. 

Angular operates on its own set of things - services, factories, controllers, directives. Most of the first-class citizens of your app are plain old javascript objects and functions by design. It's primarily a ES5 framework from the ground up. TypeScript felt forced and unnatural to use, I had to build my own abstractions and my own types to leverage all the awesomeness of the language. 

But maybe things have changed since the last time I tried it. `controller as` syntax, for example, allows you to bind to a controller directly, which allows making your controller a class, leveraging typescript to have statically typed fields and methods.Yes. Based on the sidewaffle templates which are sort of hybrid javascript typescript. Where it comes in handy is with code completion when using injected services.I use es6 with angular 1 but no typescript. We use it in a large internal application and it was a life saver. Started back with 0.8 or so and now at TS 1.4?

Highly recommend and it will help you get ready for ng 2 or es6 style applicationsMy work does. I don't like TS, so any hobby projects I do in vanilla JS.

The only thing we've found (at least the excuses they've given me) is that we have to use services instead of factories because TS wants you to new everything up. I personally think that's just BS and someone was too lazy to learn how to properly do things.

As far as testing, we use Karma/Jasmine just fine. You have to cast your mocks, but as long as you remember to do that you'll be okay.

Also, if you use Typescripts source maps (which you should) you can see the TS code in the Chrome debugger, which is super handy when trying to track something down.I've used it on two fairly large applications.

The first one was designed with Typescript in mind from the beginning and was wonderful to work with. Types and interfaces definitely helped a lot when troubleshooting issues. It's hard to explain how helpful it is to know what the data you're sending/receiving looks like, especially when it's something that has passed through several hands.

The next one was a bit more complicated. It was bascially an admin app bought off Themeforest then hacked to make work with the backend, and later half-heartedly converted to TS. By converted, I mean they renamed the files to TS. New features were written in a mix of vanilla JS wrapped in TS. I've been working hard to convert and update as much as of into proper TS and it's easy to just see which parts of it are more maintainable/expandable.

Like u/nanothief, we don't really need to do any testing. the types definitely make it that much easier to work with and both tslint and the compiler work great to alert us of any problems that may occur.

Set up honestly isn't that difficult, we've used both grunt, gulp, webpack and plain old npm scripts. They're all fairly straight forward, the real problems were in setting up the configurations for the various systems.

I have a simple [ng1.x with TS & webpack starter kit](https://github.com/SenHeng/ng1xts) if anyone's interested in trying it out. It's still a bit wonky but usable for the most part."
2016-01-26 23:28:42;"I made my first real Angular app! It lets you filter Github repos by ""tags"". You create a tag just by modifying your repo's description!";"Need to let users hide that nav or something... takes up nearly half the screen on mobile.
"
2016-01-26 23:06:44;How to manage build configuration for different environments.;"environment variables are the thing to look at and the principles of the 12 factor app (http://12factor.net)

having aliases for resources allows them to be redirected easily

In our case, the built code still contains placeholders for environment-specific constants.

We use Docker, so our build artifact is a data-only container exposing the code as a volume.  When we deploy, that volume is mounted into the web server container, and a one-off that runs a final grunt-replace task using a config file appropriate for the environment.

That way the same data container that's used in test is also used in production (or random dev environments, or whatever).  The only difference is a few replacement variables for the various environment-specific values (which are relatively minimal, just the app server URL and a few tokens for third-party APIs).Definitely [Docker](https://www.docker.com/)"
2016-01-26 20:40:10;$stateChangeStart won't fire up, but $locationChangeStart do.;Some people don't think it be like it is, but it do.What version of ui-router are you using? They deprecated the $state* events in the latest one. 
2016-01-26 17:50:44;Why would you structure your app using folders-by-feature?;"Probably your coworkers haven't done any large AngularJS project with that arguments (btw, typical arguments of lazy people / people who dont care to improve), because you are going to get really really frustrated when you start having more than 5 features and keeps scrolling all the time to locate related feature files types. Its going to slow down your productivity and workflow exponentially as application grows.

If you are going angular way, you should modularice your features and keep related items in same folder, making then 'units' or 'packets' with all the functionality encapsulatted on it (that is a module).

Btw...folder by type is not a industry standard, not these days, moreover on big large client side applications. (It reminds me old times with ASP.Net webforms with app_themes, app_code, etc...)

Edit: AngularJS development is not like classical n-layers development...Your argument and what is in that style guide is basically all there is to it.  People work on features, not types of files.

Companies organising by type / ""layer"" is also pretty common though, as well as countless other practices that wouldn't be considered ""good"".  Nowhere you work is going to have a workflow perfectly aligned with your own preferences, but it's never hard to adapt.

You could just use associate files with features through your editor / IDE for example, and use those filters rather than the directory structure.[deleted]Reminds me of spaces vs tabs. Both work although I do prefer folders by features better. The sock drawer folder structure can work pretty good if you are not going the web component route.[John Papa's Angular Styleguide](https://github.com/johnpapa/angular-styleguide) which is endorsed by the Angular team, has a section on ""Application Structure"" to back you up. Lots of good stuff there.We have two angular apps, one is by-type, another is by-feature Both apps are linked to the same backend, but serve different needs. It really doesn't make that huge of a difference to fight about, both have their pros and cons.

Having all the controllers located in a single folder lets us see at a glance how much 'stuff' we have.

Having everything separated let's us see at a glance how many features/modules there are though it hides away the little details.

On our smaller app with fewer files, having things grouped by type makes it easier to find each individual file. On the larger app, it's easier to concentrate on each particular module at a time."
2016-01-26 17:42:48;What is Angular 2? How is it different? Should I be upset if I took the time to learn Angular 1.x?;I think many of us are getting sick of this topic.The headline could have been much less annoying but the article is well written Angular 2 seems to require a lot more work than 1 both to setup and to code.  What would be the % adoption of 1 vs the 2 beta overall?  
2016-02-02 19:45:59;Help understanding the AngularJS todo App and mass deletion.;[deleted]
2016-02-02 06:33:53;When building a new app (and you build both front and back ends), how do you deal with data? Where do you start?;"I almost always start with the backend. If it is for an personal application I always start with the backend, and I always start with authentication. I know a lot of my resources are going to depend on authentication and restricted routes, so it helps to get this out of the way first that way I can better prototype the other features as a user. 

I don't really do any mock authentication. I have my own boilerplate for authentication that I can change whenever, and I'll test accordingly. That gets a decent part of the work off my shoulders if there is secure authentication, reset emails/tokens and validation emails already set in place. 

Once the basics of the back end auth are set up I will start working on the client side. 

From there it depends on what the project requires. I was a designer before I got into this programming thing, and I still find myself thinking like one.

First thing I do is think of the use-case, how the user is going to use `the thing`, what kinds of data `the thing` needs, the variations of all those datats.

Then I create JSON mocks of the data.

Then I create a simple app to use that JSON.

Then I start working on the database, then the ORM and finally the API.Does the UI or the data have the most unknowns? That's the one I want to work out first. Then I'll build the other so I have something that can be demo'd. Always drive toward a demo.

For example, I just built [xplr.in](http://www.xplr.in/) and the biggest unknown was reactjs because I hadn't worked with it before. Storing data in postgres is easy to plan out.Build out the front end, mock your data up with a fake rest API or stub data within the app. Then move to the backend. 

OR

Build out a backend and tie that into your app's UI.

What in trying to say is, you can do both by focusing on features (think epic/story in agile) and knocking them out sequentially. 

http://programmers.stackexchange.com/questions/55883/front-end-first-or-back-end-first-of-the-two-which-is-a-good-system-design-pratHow I do it is I start from the back-end, building the most simple CRUD REST API that I need.


Then I begin building the interface and as I build the interface all the rest of the pieces fall in place in my mind and I know what to add to the backend.


I typically leave authorization for the final stage, unless the features are very dependant on user roles.Normalize your data, create a database schema, store it properly, make the relations, define your entities.

Don't just throw it into mongodb because it'll bite yourself in your assFor me it depends on how I feel. Sometimes I start on backend, sometimes I start on frontend.I recently started playing with http://deployd.com/ and as primarily a front end Dev it has been a very nice way to scaffold a back end! Lots of plugins to play with, built in auth, self documenting, woo!

Not sure I would use it for production, but I'll cross that bridge later :)I think about the data and how it will be accessed then design the storage and data transfer format so back-end first but with the front-end in mind.

It's an iterative process - sometimes it's worth making changes to the back-end to make some front-end parts easier or less chatty but generally the data storage is the most long-lived, then the back-end and the front-end will be re-written every other day based on the current javascript framework of choice (or does it just seem like that?)I start way back on the backend with my logic for how the functionality is handled and build from there. That way I'm not trying to satisfy the UI right away.

After the functionality is in place, I'll add an end point that serializes to JSON and make sure it spits out the right fields.

Then I add things like authorization, throttling, etc.

I'm lucky enough to work with a top notch UI/Angular guy who handles 90% of our front end stuff, so I don't often have to go there. But when I do, I follow the same process: implement resources, then transformations and finally UI.mock it on paper the flow of the app the back end objects
itirate ui and backend"
2016-02-02 00:08:58;What's best? Regarding ui router resolves...;"I would use resolve, but also make sure I'm paging properly in my API so I'm only loading small amounts of data at a time.

At a lower level, you could use $stateChangeStart and $stateChangeSuccess to implement a spinner/progress bar etc

As a rule of thumb, I use resolve for anything that's critical to the appearance of the page. Your users page is useless without the user data, so you want to resolve that data. It also makes your code much less complex, as you aren't setting flags while you get data etc to show and hide divs, and keeps any API logic out of your components.Resolve sounds like the way to go here.

Resolves are usually the cleaner approach unless the data displayed has search/filter/pagination capabilities that hit the server. Then I'll use a spinner and load the data using a service that handles API calls/pagination/filtering.Use resolves.  Injecting resolved data allows your components to not be concerned with *how* data is fetched, only that they require some data to be provided.

In upcoming versions of ui-router we want to offer better options for displaying content while a state is being entered.  Here's a proof of concept for one of the ideas I had: http://plnkr.co/edit/b8zl3JV6FlxL5dewtpX6?p=preview"
2016-02-01 22:28:52;Service with a $resource;"You don't need $q to filter the data.

    var resource = $resource(url);

    service.loadData = function(){
        return resource.get().$promise
            .then(function(result){
                  //munge data however you need
                 return formattedData;
           });
    }Hi!

I would do something like that:

    app.factory('getArray', ['$resource', function($resource) {
        var filter_function = function(array) {
            // some filter stuff here...
        };

        return function(url) {
            var resource = $resource(url);

            var promise = resource.query().$promise.then(
                function(array) {
                    return filter_function(array);
                }
            );

            return promise;
        }
    }]);

The main point is that `$resource` internally has `$promise` which we can use to filter its result using technique called `promise chaining`. After that procedure we get a new promise, and so on. And to use it in our controller we simple resolve result promise again:

    var promise = getArray(url);
    promise.then(
        function(filtered_array) {
            // do some stuff with filtered array here
        }
    );
"
2016-02-01 19:43:37;Looking for up to date testing resources.;"I wrote a [3-part series](https://daveceddia.com/testing-angular-part-1-karma-setup/) about testing Angular a few weeks ago.

* [Part 1](https://daveceddia.com/testing-angular-part-1-karma-setup/) - how to set up karma + jasmine to run tests, and get the first test working
* [Part 2](https://daveceddia.com/testing-angular-part-2-jasmine-syntax/) - jasmine syntax (describe, it, beforeEach, etc)
* [Part 3](https://daveceddia.com/testing-angular-part-3-testing-recipes/) - ""recipes"" for how to test the different parts of Angular (controllers, services, directives, promises)

There's also a Udemy course that /u/mattkentz posted here last week - looks like it's $45 now (it was free when he posted it, I guess the coupon code ran out). I haven't taken it myself but it looks quite comprehensive :)"
2016-02-09 23:00:29;A tool to quickly Scaffold Database driven projects with Angularjs and Flask;
2016-02-09 19:26:31;Check out popular Angular JS unit / integration testing seed updated to Angular JS 1.5 using new .component() API!;
2016-02-09 16:54:05;Why does Ng-class call the function 6 times?;"It has to do with the way the digest cycle works. Angular creates three elements in the DOM, each with an ng-class attribute. The first digest cycle executes that function for each element - that's the first three calls. But the act of executing those functions could have changed something else in the view, so it runs another digest cycle, executing that function three more times. Angular sees that running the digest cycle a second time didn't change the view, so it doesn't need to run any more.Yep - your function could change something in the scope, so angular has to double check that nothing changed after calling your function At the end of the digest cycle, it performs another cycle for dirty checking, and repeats this process until the scope has stabilized.I might be wrong, but here is my expectations

AngularJS bubble up the JS events to jqLite or jQuery (based on library used). Now since adding class is JS event, AngularJS first fires up it's call and print 'Hey' but then bubbled up event makes another call from JS and hence 'Hey' is printed twice."
2016-02-09 16:40:59;.@AngularAir: #Angular2 #ReactiveRedux with @VictorSavkin, @Dan_Abramov and @RobWormald;
2016-02-09 14:42:13;Is angular.js is the hottest JavaScript framework?;"Kinda feels like this article was written 3 years ago. No mention of React in the competitors, and no mention of Angular 2? Very confused.>  Even Google supports it

They fucking made it. Of course they support it."
2016-02-16 15:17:29;Angular 2 + Highcharts;
2016-02-16 15:02:19;Two Angular Questions ($stateProvider and HTMT5Mode);"Regarding the first part, yes. Resolve is just an object. Save it outside your states in a variable and share it between state objects.

I personally have a helper ""constant"" angular object that stores things like this that I share between states. I need to inject this because all my states are in different files."
2016-02-16 11:04:34;How to integrate Stripe payments with Ionic, AngularJS or NodeJS;I've been using [this](https://github.com/laurihy/angular-payments) plugin to integrate stripe on Angular. It provides basic payment, and some helpful validations (i.e. card format). The only problem I've found so far, is that it does not support subscriptions (or at least I couldn't find how to make them work :P
2016-02-16 03:24:19;Angular2 - calling constructor() vs new keyword to create an object?;"The two cases you listed are the difference between implicit and explicit instantiation. If you have to explicitly instantiate the service then _you_ must decide both who should own its creation and when that owner should create it. Does the application own it? Does your component own it? If the application owns it then the application _must_ instantiate the service in its constructor, even if no component actually uses it (for example, think about a menu that needs a service but the user never opens the menu). It doesn't make sense for a component to own the service's creation because services are meant to be shared across multiple components of your application. Why should one component own creating the service but not the other?

By moving the responsibility of service instantiation to the Angular library itself, you don't have to worry about these details. All you have to do is inform Angular that the service class exists with the `providers` property in your app's Component decoration (EDIT: technically you can provide in any component):

    @Component({
        ...
        providers: [HeroService],
        ...
    })
    export class AppComponent {}

then use the constructor syntax to consume it:

    @Component({...})
    export class MyComponent {
        constructor(private _heroService: HeroService) { }
    }

This way, Angular waits until _your_ component gets instantiated to instantiate the service. The next class that needs the service just needs to use the same syntax and it will get the same service instance:

    @Component({...})
    export class MyOtherComponent {
        constructor(private _heroService: HeroService) { }
    }

Your code never called `new`, the service was lazily instantiated, and all components that needed the service got the same instance.

One more benefit to using this pattern is that you can create mock services that get substituted in at run-time for your real service. There are many possible use cases for this but the most obvious is for unit tests. Imagine a service that calls some RESTful API. You wouldn't want your unit tests actually calling that RESTful API, so you make a mock service that returns some ginned up data instead. When you use Angular's mock service substitution pattern you don't have to make changes to the service consumers (your components) because they are not concerned about the inner workings of your service. As long as the interface of the real service and the mock service are identical then your components are happy.the constructor is what gets called when you call new Thing()>constructor(private _heroService: HeroService) { }

That's a TypeScript shortcut to defining a private variable in the class and having a value assigned to it through the constructor during class instantiation (e.g. var x = new class(new HeroService());).

>var _heroService: HeroService = new HeroService();

You're just defining a variable type HeroService here with a new HeroService class object."
2016-02-15 23:26:16;Beginner - how to start using Angular in my projects?;"You definitely need to learn proper JavaScript first. Angular looks easy and like magic at first, but you will run into a wall if you start too early.

Angular isn't a go-to solution for all kinds of apps either. You choose Angular if you feel the app will benefit from it. And to know if it would benefit from it, you need more experience in programming.

You can do anything with vanilla JavaScript with so-called promises, custom elements, HTML imports and such. Right now not all browsers officially support those, but there are frameworks like Polymer that provide polyfills. jQuery is, of course, very popular in leveraging the distance between current JavaScript and the up-and-coming version ECMA 6.

Having a good foundation of proper javascript will make your life easier when you try to learn advanced frameworks.I am not sure how much experience you have with JavaScript but I thoroughly recommend you have a read of EloquentJavascript as it goes through the basics and advanced parts of the JavaScript language:
http://eloquentjavascript.net/

For angular, if you just want to play around and learn more about the framework, and how it is unique compared to vanilla HTML/CSS I recommend going through some examples over at thinkster.io 
https://thinkster.io/topics/angular

Then if you want to dive deeper, I recommend the ngBook.
https://www.ng-book.com/

With this all being said, you should consider that Angular 2.0 will be released in the near future, and it may be worth learning ES6 JavaScript to prepare yourself for the transition.Hello! 

Following off what u/StefMitra has said, absolutely go through those examples and any tuts you can get your hands on. 

To really start learning I began converting my own personal site into an Angular based site. Grab a boiler plate and just start stripping it apart, ask questions on Stack Over flow and really get in there. By applying logic to your own work after reading all about it, you'll get the most out of your learning.

Good Luck! Codecademy has some walkthroughs for angular and JS, which might be good starting points for bothBasicaly if you have any repeating elements, a list of messages, comments, contacts or a grid of images or products you could use angular to generate the repeating elements from a easy to write json.


Then filtering or search is a fun example also allowing your users to input new data even if you're not saving it anywhere.I have same question with you when I started as a freelancer. So I decided to create a project by myself and when bidding with client, I give him that project, describe what I done in that project. After that I got his project. So you can start by create your own project too.ng-repeat.  look no further.  the bloody thing single-handedly had me hooked.  and from there [brace for this](http://www.bennadel.com/resources/uploads/2013/feelings_about_angularjs_over_time.png) "
2016-02-23 21:54:26;Angular notify - A really tiny angular service with a dead simple API for interfacing with native browser notifications;The thumbnail looks like it's about to rickroll me This isn't going to work for devs not using common.js as a packaging format.
2016-02-23 17:56:09;How to use a spreadsheet to power charts in angularjs apps?;"Why use jQuery $.get instead of Angulars $http service? - the need for $scope.$apply probably has more to do with using jQuery - if you were using $http.get, the request is already inside of Angulars digest cycle, and could avoid the $scope.$apply

$scope.$apply can also be finicky at times - and throw up saying 'already in a $digest', $scope.$evalasync tends to be a little safer, or can wrap things in a $timeout(function() { },0) -- although it's a little hacky.
Nice article but why use jQuery in an Angular app?Do google sheets still have the bug where you can view if logged into a google account, or signed out of one, but then non-viewable to google accounts that were timed out?

I tried this google sheets/database technique a couple years ago, and that was the thing that was preventing use live."
2016-02-23 17:41:09;SyncList Directive;"New to r/angularjs was wondering about the scoping of this directive and how to optimise this for receiving async data etc.  The directive is working as planned but the code seems like it could be made a lot more concise.

The aims of the directive were to take in two lists firstListModel and secondListModel. secondListModel being the total set of all possible options, while firstListModel is the set of selected options and display them as two individual lists of checkboxes.

It is known that firstListModel only contains elements with ids in secondListModel.

These are rendered into two ng-repeat'ed checkbox lists the first showing firstListModel and the second showing secondListModel filtered by a selected attribute.

At the moment I am uncertain about how the scoping should be, and whether I am using scope and bindToController on the directive in the right manner for what I require.

I would also prefer for the directive to need to use a init function that set the selected attribute on the intersection of both lists.

In the context I am using this directive the data could be loaded at any point and being able to remove the need for the init function would be amazing.

"
2016-02-23 17:07:54;Noob question.;"Are you talking about using templates to contain all of your portfolio pages? If so, you can make a single index.html, which loads your templates into it.

Like this:

    <html>
        <body>
            <div ng-view></div> 
        </body>
    </html>

Inside the div, you can have your controller load a certain portfolio page. Depending on your preferences, that portfolio can have its own angularJS file, or you can merge them all into one big file.

As for your JSON file, [read up on how to use HTTP GET in your angular projects.](http://www.w3schools.com/angular/angular_http.asp) This is what routing is for. You can define a single index page with a view and then depending on your route, you can load a new view. Each view can have a separate template but the same controller. You can check out Angular UI Router; it's powerful and widely used. However, for a simple portfolio, the default ng-router is probably good enough.If every page has the same markup and different data, then yes just make one template and controller. Ideally the controller will call a function from a service to get its data."
2016-02-23 15:19:46;Hey, I'm new to AngularJS. Is there a way that I can use it in combination with a MAMP PRO server?;Angular is just like any other JavaScript based library. You could download it from their website and serve it from your page, use npm to install from the command line, use bower to install from the command line, or just reference in your HTML file from a CDN.
2016-03-01 14:24:47;Adding function dynamical to angular objects;"Improved: http://codepen.io/anon/pen/mPyaMr

Original: http://codepen.io/anon/pen/WwbLZMavoid $scope in controller and use ""Controller as""
http://codepen.io/anon/pen/LNEooe"
2016-03-01 13:37:17;How does Angular 2 Change Detection Really Work ?;This is a post digging into the change detection mechanism, how it works, and what does it mean OnPush.So they just kind of monkey patch browser api's? Interesting.
2016-03-01 11:45:28;Smart vs Dumb dilemma, thoughts?;"I've encounter this problem quite many times, and my ultimate question is sort of:

In my component, I receive input data from the outside, expose action rather than modifying that data directly. Outer component should modify and the data will flow down to the child components. But I need to **process** that input data to make up the rendering of my component (like splitting, filtering, mapping, reduce ....).

**Should the processing happen inside or outside my component ?** 

And **If the processing logic happen inside the component, the only way it can realize the change of the data is using $watcher, or?**I would do like this. Basically remove all the overhead and let the component take care of the logic.
In case of heavier data manipulation that can't be solved in the template I would have used a $watch in the component in the way you did, but in this case I don't see the need.

Plunker: https://plnkr.co/edit/sCB4ap9KDBZMfgAhMQsE?p=previewInterested to see where this discussion goesAnswer here: http://teropa.info/blog/2016/02/22/dumb-components-and-visual-feedback-in-angular-apps.html#comment-2545792153

@teropa
> Hi, I didn't see your question but I guess it's about a preference between the two components?

> First of all, I'd characterize both of these components as ""dumb"" because neither actually mutates the state. They both delegate that to the container.

> The difference is then just *where* to organize the data (in this case, split the collection) for displaying. I don't think there's one single good answer for this, but I kind of like the one that just receives two separate collections from outside. My thinking is that if this was a Redux application, I'd probably pull the whole thing out of components completely: Manage two separate collections of todos in my reducers/store and have components just use them.

> If you'd prefer to separate the collections within the (dumb) component, there's a way to do it without introducing any more state (or a manual scope.$watch) by calling methods from the view, like here: https://plnkr.co/edit/tO5Ma6kU5t9M3FUYNTDl?p=preview"
2016-02-29 21:54:07;Move your Angular1 project ahead and bring it closed to Angular 2, without moving over to Angular2 yet. Using Typescript, JSPM/SystemJS, core-js & the Reflection API.;
2016-02-29 21:20:29;New long term project - Angular 1.5 or 2?;"If it's going to be a production app I'd definitely say 1.5. Let 2 mature a bit and come out of beta before you use it for anything too important.1.5. Angular 2 isn't out of beta and 3rd party support is almost non existent at this time.Oh hey! The daily 1.5 vs 2 question. Whoop!I'm a big fan of what A2 can bring to the table. Yes there's no stable release yet. I'd say 1.5 but leverage the tooling to make upgrading easier. SystemJS works great with any framework, and is the choice for A2. Write solid 1.5 and meet 2 half way. ITT: Use (insert new web ""technology"" name here).JS. Christ, web development has turned to shit. Have you considered using something else than angular?
Angular 1.5 has a lot of problems in big production apps, and angular 2 isn’t production ready just yet.If this is going to be a big app. Use EmberJS :)From Peter Bacon Darwin : ""If you're thinking of creating something that's going to be ready for production at the end of this year or early next year, I would seriously consider just starting it in Angular 2.""

https://devchat.tv/adventures-in-angular/081-aia-angular-1-5-with-peter-bacon-darwinLast week I heard couple of Google guys say they use it for production apps intern at google. 

Ok it is still in beta but given the time they are developing it, it is rather mature. And as long as you stay on the happy flow you should be good to go. 

If you rely on3rd party libs then you should do a spike and see if you can get away without them. React with MobX."
2016-03-08 23:33:06;Angular 2 beta.8 starter project with TypeScript incremental compilation;Man, I was hoping this was pure tsc -m system --outFile main.JS -watch, but apparently it's using gulp to watch the files
2016-03-08 23:01:03;Creating service wrappers dynamically during runtime;check out https://oclazyload.readme.io/
2016-03-08 19:57:11;A form builder using angular-schema-form and generates angular-schema-form code. Thoughts?;
2016-03-08 18:01:45;What I feel like when learning Angular after using basic jQuery for so long;"Ha, yes!  When I started learning angular I read that if you really want to learn angular, don't use jQuery (or anything else).  I listened to that advice but as I wrote more angular code, I kept wanting to manipulate the DOM in my controller (which I kept seeing was a huge no no) and that I should use angular's templating logic.  I finally just gave in and started learning more about the templating logic.  Now that I'm used to it, I love it!Wait until you get used to it and then have to work on your old jQuery code!  It's like having to again walk the route you got accustomed to biking.

Ironically, huge jumps in efficiency can be demotivating.  If letting Angular true up the DOM makes so much more sense than manipulating it yourself, what's the *next* step, and shouldn't I be spending my time looking for or developing *that*?  Am I still wasting my time with Angular and just not understanding how?  That sort of thing.

Edit: By the way, Interstellar is a great movie.  Don't let me use jQuery, Murph!And then when you learn lodash, you become a 5th dimension beingIt gets easier.
Then it gets harder.
Then you want to say fuck it, I'm not using it.
Then it gets easier again.
Then the Angular codebase changes (Angular 2) and it gets harder.

Stick with it.When I was starting my jQuery to angular transition a few years back, I wrote a short book about all the things that initially confused me. If it helps you can read it here: http://nicholasjohnson.com/angular-book. 

Angular is worth sticking with. Best of luck.Hahaha!  Yup!  It gets better... I'd spent years in jQuery before looking at AngularJS - for lack of a less cliche way to put it, it's a paradigm shift...  

When initially reading up on AngularJS, I regularly found myself questioning everything... ""WTF did I just read?  Directive-huh? Transclusion-what?!  You guys are just messing with me here, right?!""

To be honest, there was a lot that just didn't quite click until I learned a framework based on AngularJS - which is admittedly a bit bass ackwards...  

For me, it was the Ionic Framework - using their directives, and at times being forced to learn more about why/how they were doing what they were doing, brought it all home via practice and repetition...  Similarly, using Angular Material is tying a lot together for me currently...you mean you lost in space immediately? :)
When I was starting my jQuery to angular transition a few years back, I wrote a short book about all the things that initially confused me. If it helps you can read it here: http://nicholasjohnson.com/angular-book. 

Angular is worth sticking with. Best of luck.Try react, redux and webpack in es6 on a new platform with docker images for each and every microservice on AWS with Macbook as workstation after working for years in the Microsoft landscape with visual Studio. Every feels like my head is going to explode.

"
2016-03-08 16:40:17;Configuration Tips to build Hybrid Angular 1 and Angular 2 project in real world;
2016-03-15 23:30:23;Iterating over 2 arrays;Do you just want to treat them as a single array? If so you'll probably want to merge them in your service and return a single array from your service to your controller. You could merge them in the controller but this sounds like business logic so probably not best to do it there.
2016-03-15 23:11:09;The Deep Roots of JavaScript Fatigue;"I've come to the conclusion that this JavaScript fatigue phenomenon is a result of everyone thinking they have to use the latest and greatest and can't stick with their choices. Oh AngularJS came out? Let's build our app on that. OH NOES React just released! Gotta rewrite on that, because that's what everyone's talking about now! OH NOES ANGULAR 2.0, GOTTA REWRITE AGAIN!!! OH GOD REACT IS BACK!! REWRITEEEE!!!!

And because JavaScript got a major update, which is too much to handle for most because JavaScript usually gets small incremental updates over a long period of time, so they can take 3 days to learn the new stuff and never have to learn again for another 5 years. But now they're on a regular release cycle so they actually have to put in work learning and keeping up to date with their language choices. the most maddening part of all is that it seems that the typical Javascript framework life-cycle is now:
alpha(unstable/incomplete)-> 
beta(almost complete/stable) -> 
obsolete/deprecateda good read if you aren't familiar with the history of JSSystemJS/JSPM with Babel transpile is the way to go. 


This at least eliminates the module diversity. I have no problem with JavaScript fatigue. I call that ""job security"" :PJust as a note, the JS world moves fast, but it doesn't mean the technologies you pick at that moment are all of a sudden bad. They are still amazing frameworks and technologies, there are just better ones.I hang out in the Javascript StackOverflow chat room and it's just madness how fast Javascript moves. It's hard to keep up."
2016-03-15 18:27:04;Painless form validation for AngularJS. Powered by the jQuery Validation Plugin.;"Please excuse if this is an ignorant question, but isn't this exactly the opposite of how one ""should"" Angular?Why does this even exist? Angular already has its own validation framework that doesn't use crazy config objects and is crazy extendable.

This splits everything up so that if I want to look at how it is validated or what messages it spits out I have to look in a completely different location. Additionally, you lose fine-grained control over how the validation messages are presented.

Finally, it used ""ng"" in the directive prefix. In case if you made this and also so others that come across this know: Don't use ng as the prefix to your own directives. That is the angular team's prefix, use something else. I don't need to know it's angular, I already know that."
2016-03-15 18:00:36;Custom File Directive, Jasmine Unit Testing Headaches;Any help is appreciated this has been driving me nuts for about 2 weeks now and not sure if there is a solution, I may just have to cover this is protractor tests.
2016-03-15 17:33:20;routerActive directive for angular 1.5 component router;
2016-03-22 23:38:54;How do you create form different states?;"Check out [UI-router](https://github.com/angular-ui/ui-router). Its a third party routing framework that in my opinion is better than angular's routing system. It deals with states rather than routes. You can have substates that would work well with what you're describing.
Are you using UI Bootstrap? It has a nice service for creating modal windows that render a given HTML template, with a controller and so on.

https://angular-ui.github.io/bootstrap/#/modal

There's also stuff like https://github.com/btford/angular-modal - or you could write your own modal service.I think people are misunderstanding the OP, the links aren't sending users to a new state, they're toggling the visibility of an element.

I think you could leverage a directive with transclusion to achieve what you want.  The directive has isolate scope, with a single scope variable that handles the hide/show state of the transcluded element. This would allow you to not have to track every single hide/show boolean in your controller.I like to use the ng-switch for naviagtion within a single page app. This is usefull to me because what i work on has lots of angular application that are loaded with the router and then each has sub navigation with ng-switch. It really depends on if it's ok for you application to reset on a page refresh.

With this you dont need all the hide boolean variables you just need to switch that one variable to the value it is checking for in the html. 

Heres the link to the ng-switch documentation
https://docs.angularjs.org/api/ng/directive/ngSwitch

     <div ng-switch=""expression"">
       <div  ng-switch-when=""matchValue1""><div ng-include=""path to html""></div></div >
       <div  ng-switch-when=""matchValue2""><div ng-include=""path to html""></div></div >
       <div ng-switch-default><div ng-include=""path to html""></div></div >
     </div>

Edit: changed the example to use ng-includes to help with organization of codeYou would have some sort of variable that contains the state, and a lookup table that calls a certain function at each state.

For example,

    registerState(""new-post"", newPost);
    registerState(""subscribe"", subscribe);
    registerState(""search"", search);

Look familiar? It's a router."
2016-03-22 23:23:00;Getting started with Firebase and Angular - Firecasts #4;
2016-03-22 23:18:54;"I’m gonna puke if you compare Angular to React again; heres why!";"Just to twist this around, ""I'm gonna puke if anyone else says Angular and React can't be compared"" ;)

I understand that they do different things. They do. The sum total of Angular has more functionality than React by its lonesome, this is absolutely true. React is basically equivalent to Angular's directives (and maybe controllers). It doesn't give you services, a module system, an HTTP library, form handling, routing, animation, or promises.

The argument goes that, in order to compare apples-to-apples you've got to add libraries to React until it has all the features that Angular does... and in so doing, you now have to learn 15 libraries instead of ""just Angular"". But on that point, I disagree (or at least, I think that's a bit disingenuous).

One can do just fine writing a bunch of Angular directives, not touching $http or anything else. ...Until some data needs to be rendered from the server (go learn $http). Wait they're restful! (go learn $resource). And you want to add some routes (nobody uses ngRoute anymore, gotta install and learn ui-router). And validate/submit some forms (learn ngForm). But then the forms get really complicated (install and learn angular-formly).

It's the same story with React. If you want to build a complex app, you need to learn a lot of stuff, like the article says. Redux, Redux middleware for promises, and on and on.

Web development takes learning and a bunch of moving parts, there's really no getting around it. Angular at least packages stuff up for you under one umbrella library, and that's handy to a degree. Doesn't mean you're off the hook for learning it all, unfortunately.

Angular is like a big complicated engine - does everything for you, and you can get some aftermarket mods if you want. React is more like a lawnmower. Does one thing well, but if you want to turn it into a fully-functional car, it's gonna need some heavy modifications.Why do you need redux and company to compare to react?  Completely agree, and it's a point I often have to push with people when discussing them. They're both very different products for very different purposes. React is fantastic for creating components, but takes some work to wire up a full application; and Angular is great for creating an entire application, but overkill for just making components. It's definitely up to an experienced technical lead to make the call on the more suitable framework for a project.Thats a log of unnecessary text...  Its comparing Apples to Pumpkins.  Angular is a framework, React is a library.  Two very different things.Well, of course, one is full front end framework and the other is a render library.

...Or is it?  Nobody makes applications with vanilla React, you always need some sort of state manager, let it be something you build, or Redux or something else.

And for me this is the core of the comparison, Angular is a batteries-included pack, it is heavily opinated and does pretty much everything. What happens if you DONT like the Angular way you are pretty much forced to use?

In that case React (and hence the things you will need to make a React based application) is a valid option. React does one thing and comes with a shopping list of suggestions for the rest, is always up to you to fill the gaps.

Couldn't have said that better. Angular vs React is the new apples vs oranges."
2016-03-22 21:30:38;Why does saving angular checkbox ng-model in an array result in an array with key value behavior and not object?;"An array is still an object.

console.log(typeof([]));

What is the intention behind ng-model=""checkStateList[myElement.name]"" if you're trying to bind to an array? It's equivalent to this: ng-model=""checkStateList.WhateverMyElementNameIs""


You could write checkStateList[$index] but that's super sloppy.

Just use this directive: http://vitalets.github.io/checklist-model/"
2016-03-22 19:44:43;UI Deck – A super versatile theme with a myriad of uses;"I know there's no specific rule in this sub against it, but posting something you just made and released for sale is in bad taste for most subs.

This is especially true considering you only post about your own website. It's right here in the rules: https://www.reddit.com/wiki/selfpromotion"
2016-03-29 23:50:27;What's new in AngularFire 1.2;
2016-03-29 18:33:01;Embed youtube videos with ease in your angularjs application using ng-youtube-embed;"Correct me if I'm wrong. This directive converts an `<ng-youtube-embed>` tag into an `<iframe>` tag.

Why would I use this?"
2016-03-29 14:58:03;Angular 2 with TypeScript: Let's discuss tools, specifically WebStorm and Visual Studio Code;"fwiw, visual studio code's intellisense [directly integrates with typescript](https://github.com/Microsoft/TypeScript/issues/4789), which i'd say gives it a good edgeI started using WS2016 with NG2 and typescript. I was blown away at the improvements.
I guess that VScode has a comparable autocomplete, but the one in WS is awesome. 

What also is fantastic is the auto import! You start writing the name of the object, and WS suggests all exported objects (first the local ones, then the node_modules). If you accept a suggestion it automatically adds an import line at the beginning of the file.

It also minimizes all the imports section to one line.Visual Studio is good in terms of feature, but if you are writing full javascript app (ex: nodejs/angular) using typescript, I found Visual Studio Code doing amazing job. I don't really find myself in need of these extra features the regular VS has and I love how light VSC is.I'm still a Sublime Text user. It requires some manual plugins (not different from VSC), but once setup it can be complete tool.Anyone been using WebStorm 2016.1 for TypeScript development? What has your experience been? New features look pretty nice, though I've not had a chance to play with it myself. Here's a couple of stats: 

VSCode 127Mb installed, project opens in 3seconds, 58 first level menu options

WebStorm 476Mb installed, project opens in 6 seconds, 179 first level menu options

I suppose that WebStorm does a lot more than VSCode, but VSCode seems to do everything that I want it to. I think Microsoft really nailed it when they decided what to have in out-of-the-box and what could be left to extensions. 

Personally, beyond editing the code itself most of my development activities are handled by a gulp file, so as long as my editor is gulp aware that makes it an IDE as far as I'm concerned.

WebStorm, in comparison, is carrying a lot of things that  I just don't need, for example : 'Toggle Temporary Line Breakpoint  Ctrl+Shift+Alt+F8'.

(context: express/angular, there's no way I'd use VSCode for .NET)You said VSC is an editor as opposed to a full-blown IDE like WebStorm; why is that?If you are not using Visual Studio Community 2015, you are doing it wrong. It has full angular and typescript support.

I may be biased because I'm a .net developer, but it's no secret that Visual Studio Community is the best free IDE available today."
2016-03-29 10:49:42;Private Project Ideas;Look into ionic framework if you think it won't be too much to handle in addition to angular. It lets you write mobile apps with angularjs. :>
2016-03-29 09:01:47;Angular 2 Universal Rendering support coming for PHP / Twig;
2016-04-05 23:01:54;React Fundamentals For Angular Developers;"Thanks for the article. Not really convinced yet but you explained it well. I'm still not a fan of mixing HTML and JavaScript or setting templates by inserting them in a big tree. Also the fact that you really need to dive into the various modules to complete the stack might seem more like a downside to me. While it enables people to go far beyond, it will be difficult to see which to use, why and how they develop separately. Since every module of Angular can be replaced as well, that doesn't really seem like an upside to me. Mainly because with Angular you know there's at least one that will function properly with every new version that comes out.

Also i haven't found many tutorials that explain how you would build bigger apps and how that would keep the code readable, understandable and simple to make. With all these DOM statements and renders, i have doubts it will be as easy as with Angular.

And with React many things like Browserify have come up to do things differently. But i already have a good setup with Gulp that works and which allows me to do pretty much the same thing. And since it won't give me better performance, it doesn't really seem to offer me all that much. It really feels to me that its doing things different just for the sake of doing it different. And you might argue that since the code is mainly based on JavaScript and favoring JavaScript over HTML that it is better, i really like the way Angular is html-centered. And with how it is setup i can really separate HTML, CSS and JavaScript like i want.

It might be that i'm currently too heavily invested in Angular 1 and gotten used to it, that it is a bit more difficult to be enthusiastic about React, but I've got the same thing with Angular 2.My peeve with this? 2yrs ago: ""please, don't write you htlm in javascript"" or ""if you're using jquery, try do use .appends as less as possible and DOM manipulation as much as possible"" (meaning, have the html ready on the page beforehand, mess with it afterwards)    
     
Whats the current trend now? Make HTML with a factory to make HTML, with no html on file beforehand - please!    
    
I haven't used React yet (mainly because I saw no point in it, and also because I hadn't had the time to understand the point of it) but now? Now I look at ReactJS as an overly-verbose ""`jQuery.appendChild`"" and I feel *no* need to use it as it feels like we are moving *backwards* on webdevelopment - sure, Angular isn't perfect, but at least it feels like it's going in the right direction."
2016-04-05 21:15:39;[HELP :( ] I need some help with this AngularFire problem.;bumpity bump
2016-04-05 20:28:17;Tindergarten: Crowdsourcing tinder responses;
2016-04-05 18:41:20;What the advantage of using system.js?;"rather than serving your entire bundle, you'd lazy-load it by view with `System.import('module/name')`. users only pay the bandwidth they need for whatever they're accessing on your site.So I work on a ""Brownfield"" Angular application, which has a lot of JavaScript that is written in a different framework. This framework was mostly written using the AMD module system. For my team System.js becomes the life savior that allows Angular 1.x modules to be able to interact and utilize AMD's without to much hoops. We then get lazy-loading modules on top of that ""for free""."
2016-04-05 17:38:22;Angular best practices using NodeJS-Style modules;"Thanks for posting.
Few questions:

1. Isn't it true that 'use strict' isn't required if you are using modules? I read that everything inside a module is strict anyways?
2. So you make a app.js where you fill all the config, controllers, services, etc and also name them, but not inside the files anymore? Like before you had `app.module('app').controller('myController', myController)`, but inside the myController you now not see it anywhere?
3. Why are the `$scope, ['$scope']` reversed or why is `['$scope']` not outside the module function?
4. How will the file end up concatenated? What order?
5. Is this the only way this folder structure works or are there different ways on setting it up?
6. I'm still unsure on how the browser knows its using ES6 and not ES5, can you explain?
7. And is it true that unlike ES5, every file you load in a script tag, isn't automatically available for every other file?
8. To remain compatible, i'm guessing one would use Babel as well to make it work in current and older browsers? How would this code end up there?

It seems that this is still quite close to how ES5 handles Angular 1 and might be a way for me to use the new fancy ES6 features that i do like (i don't like ES6 all that much).  But thanks for explaining :)"
2016-04-12 22:11:25;Need help understanding why my directive doesn't update on API response;"Here you go : http://plnkr.co/edit/c1CO3bcY9sf2NwhOq8FD?p=preview

You'll need to change <key> to your gmap key.

Or you can simply change to use this instead : https://angular-ui.github.io/angular-google-maps/try this:  add $scope.$apply(); to the promise callback functions after you assign your $scope data

    app.controller('wellsController', function($scope, $http, API_URL, wellsFactory) {
    var getWells = function() {
      wellsFactory.getWells()
          .then(function(response){
              $scope.wells = response.data;
              $scope.$apply();
          }, function (error){
              $scope.status = 'Unable to load well data: ' + error.message;
              $scope.$apply();
          });
    };

    getWells();
    });Ok! Use scope.$apply for update ui (makers). Ex: jquery libs or external libsUse scope.$watch in directive"
2016-04-12 20:51:15;Help me understand angular and API stuff.;"This has nothing to do with Angular. You need to understand how to work with JSON and Arrays first.

Check the value of vm.data.list[0].temp.day etc.Don't post your api key publicly... it could be revokedThis submission has been randomly featured in /r/serendipity, a bot-driven subreddit discovery engine. More here: https://www.reddit.com/r/Serendipity/comments/4ekaa6/help_me_understand_angular_and_api_stuff_xpost/Did you check out the API docs for what you're accessing?

* http://openweathermap.org/api"
2016-04-12 17:52:31;How I Use Angular 2 with Webpack (Series);Looking forward to the rest! Thank you for doing this.
2016-04-12 15:40:58;"ngHref putting ""unsafe"" before HTTPS urls";"Here's an example of how to set that up
https://github.com/metric152/move_to_spotify/blob/v3/js/app/app.config.jsWhile the resolution has already been responded i agree with you that it is a very annoying system and i don't really understand why it does that by default.

A while ago i also had the same thing with an Angular Cordova app on Windows Phone 8 that did similar things i had no control over for the same reason (and it took way too long to debug)I think you want aHrefSanitizationWhitelist in $compileProvider. 

[$compileProvider](https://docs.angularjs.org/api/ng/provider/$compileProvider) "
2016-04-12 10:11:27;AngularJS Dynamic Meta Tags Directive;
2016-04-19 20:31:55;How I Use Angular 2 with Webpack (Part 5): TypeScript Compiler;
2016-04-19 19:33:34;Latest Angular 1.5 course on component architecture and advanced Angular features;"The Tony Robbins of Angular.Lots of shills posting on this ad.[deleted]Just curiosity, in the form to order the course you've got two buttons to decrease or increase the amount of licenses to purchase. But it takes like 2 seconds to update the price, what is going on in there? EDIT: it makes 3 requests whenever I press those buttons. The buttons look disabled while the requests are loading but they aren't. If you double click, you get 6 requests. Ho hum.

Also, if your own site was made in Angular that would make me more confident about all this.

I'll probably be buying the performance one regardless...When does the humble bundle come out?DISCLOSURE: I am paid absolutely NOTHING for this comment. I endorse Todd because of his ability and reputation. However, I am also very disappointed by many of the comments on this thread and so I feel the need to support my brother!

Here's the thing guys. Todd is clearly a leader in the industry. That isn't a question. The question is do you realize the value of being trained and mentored by somebody like Todd?

I've been mentoring developers all over the world for a long time, and they pay me for it. Why? Because it's worth their time to get unstuck, get problems solved, and be able to ask questions to somebody who can get them answers.

If you want to read the docs, read the code, build the examples, troubleshoot the oddities, and spend the time that Todd and I spend mastering our craft to be able to mentor and train people; feel free. However, if you'd like to be mentored by an expert in the field that's already put in the hundreds of hours it takes, then the couple hundred bucks it costs to get the ultimate package is absolutely nothing. You can spend a few hours working and make that money to INVEST in yourself.

I'm hoping that this mindset starts catching on because Todd is amazing at what he does and he's a great mentor. Mentoring is a gift that not everybody has. It takes patience to walk somebody down a path and teaching them things in the right order. It also takes great effort to build courses that are valuable.

So, let's clean up our comments, and let's also consider the fact that we could save ourselves a LOT of time (and $$$) by learning from Todd and always having these videos at our reference.

Remember, time is the one resource that can NEVER be renewed.

So, go grab that ultimate package now and make yourself more valuable! Invest in yourself!

Here's the link :)

https://courses.toddmotto.com/products/ultimate-angularjs-bundle[deleted]I'd prefer to see an actual course instead of an advertisement of one."
2016-04-19 15:24:35;Dynamically switch directive based on input.;"I had a similar problem recently and used a service/directive to handle proxying the directives. 

Something like the code below should work, though I typed it from memory without any testing so beware!


        
    import angular from 'angular';
    import _ from 'lodash';

    angular.module('app', [])
      .service('ProxyService', ['$compile', '$injector', ProxyService])
      .directive('proxy', ['ProxyService', proxyDirective])
      .directive('errorEvent', errorEventDirective)
      .directive('redditEvent', redditEventDirective);

    // Proxy Service
    function ProxyService ($compile, $injector) {
      return function (target, scope, element, attrs, ignoreAttrs) {
        
        const directiveName = attrs.$normalize(target) + 'Directive';
        const omitAttrs = (ignoreAttrs || []).concat(['class', 'id']);
        let forward = angular.element(`<${target}>`);
        
        // Check if the directive exists and fall back to <error-output> if not.
        if (!$injector.has(directiveName)) {
          let errorDirective = angular.element(`<error-event title=""${target}"" message=""The event was not found!"">`);
          console.warn(`Failed to proxy '${target}'. The directive '${directiveName}' is not available.`);
          $compile(errorDirective)(scope);
          element.replaceWith(errorDirective);
          return errorDirective;
        }

        // Move attrs, excluding `omitAttrs` and any beginning with '$'
        _(attrs).chain()
          .omit(omitAttrs)
          .omit( (val, key) => key.charAt(0) === '$')
          .each( (val, key) => {
            element.removeAttr(attrs.$attr[key]);
            forward.attr(attrs.$attr[key], val);
          });

        forward
          .addClass('was-proxied')
          .attr({
            'event': '$ctrl.event'
          });

        $compile(forward)(scope);
        element.replaceWith(forward);
        
        return forward;
      };
    }

    // Proxy Directive <proxy event=""event""></proxy> 
    function proxyDirective (ProxyService) {
      return {
        restrict: 'E',
        priority: 500,
        replace: true,
        template: `<div class=""event-container""> proxied directive renders here </div>`,
        scope: {},
        bindToController: {
          'event': '='
        },
        controller: EventController,
        controllerAs: '$ctrl',
        link: function (scope, element, attrs, ctrl) {
          const el = element.find('.event-container');
          ProxyService(`${ctrl.event && ctrl.event.source || 'error'}-event`, scope, el, attrs, []);
        }
      };
    }

    // Shared Event Controller
    function EventController () {
      console.log(`Hello from the `this.event.source` shared event controller!`);
    }

    // Error Event Directive - Used when the directive to proxy isn't found
    function errorEventDirective () {
      return {
        restrict: 'E',
        scope: {},
        bindToController: {
          title: '=',
          message: '='
        },
        controllerAs: '$ctrl',
        controller: function () {},
        template: `<div class=""error-event"">
          <h1 ng-bind=""$ctrl.title""></h1>
          <p ng-bind=""$ctrl.message""></p>
        </div>`
      };
    }

    // Reddit Event Directive
    function redditEventDirective () {
      return {
        restrict: 'E',
        scope: {},
        bindToController: {
          'event': '='
        },
        controllerAs: '$eventCtrl',
        controller: function () {
          console.log(`Hello from the `this.event.source` controller!`);
        },
        template: `REDDIT!`
      };
    }


So given an `events` array like:

    [
      { source: 'reddit', title: 'hello world', etc: true },
      { source: 'twitter', title: 'you get it', etc: true }
    ]

You can do:
   
    <div ng-repeat=""event in events track by $index"">
        <proxy event=""event""></proxy>
    </div>In this instance, I would probably use an `ng-include` with links to templates.  For instance:

    <ng-include src=""'templates/' + src + '.html'""></ng-include>"
2016-04-19 12:26:43;Ngconf ticket for sale, half price;Still have it? PM email I might know of someone that wants to go I'll buy it
2016-04-19 11:14:09;Can Angular POST to json (without node.js)?;"You sound like a beginner so I'm going to break it down so a beginner would understand. You're getting some not entirely useful responses, recommendations for other tools (MongoDB, what the hell?), or half information which I don't think will help you if you don't understand the problem. I'm going to use the analogy of a restaurant.

You are a restaurant customer (your web browser, or in this case, your web browser+the angular javascript) and you sit down at a table. The customer wants some food so he orders it from the waiter (make a GET HTTP request). The waiter is the webserver (IIS, apache, nginx are web servers). His job is to take orders/requests and make sure they get to the right person for them to do their job. When you order spaghetti and meatballs, the waiter doesn't make it, the chef does. So the waiter(webserver) sends the order/request to the chef to make sphaghetti and meatballs. The chef is your application. (be it .NET, PHP, Java). The chef finishes cooking. The chef does not bring out your food, right? That's not his job. He doesn't know who ordered it or where they're sitting, just that he needed to cook it. He needs to be in the kitchen busy cooking other people's meals. Instead, the waiter gets the food from the chef, and brings it to you. (The HTTP response).

Now, you're ready to eat, but you need silverware (maybe, an image), or a napkin (maybe, CSS), a salt shaker (a plain JSON text file) - stuff that's just sitting around somewhere. Could you imagine if the waiter went and bothered the chef for simple stuff like that? The chef (application) couldn't do much cooking if he was running around doing all that kind of stuff AND trying to cook. Instead the waiter (webserver) goes and grabs you a napkin and silverware, and brings it back to you.

The analogy breaks down a little bit for a POST, but bear with me. You're about to eat, and realize you want to change something about your spaghetti and meatballs, you want more more sauce on it. You give the waiter(webserver) your plate and some information about what you want and ask them to change it. This is your POST, the mean and information you want them to change is the data in the POST (be it form fields, JSON, whatever). Just like the get, the waiter doesn't give you more sauce. He brings it back to the chef (application server) to get you more sauce, hands it back to the waiter, and hands it back to you.

What else is the waiter good at? He knows who came in and what they ordered and writes it down (logging). Now the chef might do his own logging too, make a note that he's running low on ingredients, keeps track of how many individual meatballs he's made. We can also add more waiters too to speed things along, take more orders, get the food out faster, etc. That's like adding more webservers for example.

So back to your example. You're asking the waiter to cook your meal. You need a chef to do it. IIS is not going to know how to take your POSTed JSON data and write it to a file. The answer is no, it is not possible using only IIS and Angular.

You need some sort of application code that can take the JSON you gave it, open a file from the file system, modify the existing data with your new data, and write the file to disk. Sounds simple, but think about all the things the application code needs to know about here. It needs to know about the file system and how to traverse it, it needs to know how to read characters from a text file, it needs to know how to take that JSON and turn it into a data structure it can work with (arrays and objects) aka deserialization, it needs to know how to add your data into that data structure at the right place, then it needs to know how transform that data back to a string aka serialization, then it needs to know how to modify and  write a file. Those steps sounds a bit like a recipe (a program) to me, doesn't it? That's why the chef does it.

You mentioned NodeJS. NodeJS can sometimes be kind of a hybrid with the right packages, like Express. If it's a busy restaurant, you still want a waiter to manage the orders and deliver the food. But sometimes, in a smaller restaurant, the person that takes your order goes and cooks the food too. The latter situation is probably how you've seen Node used. You didn't have Nginx or something sending requests to it, you just asked Node to do stuff directly and it did them.

Hope that helps you (and anyone else who's stumbled here).If you want to write to a file. Handle the request in your action, and use file read/write operations at that point. Getting the object or json to your server is step one, then convert that to whatever format you'd like, and write it to the file on the server. Try using this :
https://github.com/typicode/json-server

A magic tool that I have found really easy to put in place and which fit your needs for your local tests
When you say ""a local IIS server""; what exactly do you mean?
Do you just have IIS pointing to directory on your HDD, and serving the static files in that folder?
Or, are you running a .NET application from there, probably some small asp.net app?
Or, are you running something else from there? PHP? etc..

By itself, IIS is a web server only, rather than a proper web application.
Much the same as nginx or Apache. (There are of course differences too!)

Like others have said, once you're inside a web application (which will then be running on/in IIS),
then you will need to have an endpoint which can take a POSTed object and save it to file.
It's not a hard task overall, but if you're learning then it's all baby steps while you get going... keep at it! ;-)


It is possible,  just create the json object and include it in your post. You'd do something along the lines of $http.post('url/to/action', { 'model' : model }). If you're using .Net as your backend the default model binder can convert your json to a usable object. You may have to roll your own but the default should handle most cases.I don't really do any work in windows (for reasons like this, honestly.. as much as they say windows is ""easier"" than linux.. programming inside it is a nightmare compared to linux).. but, the answer absolutely has to be yes.

There might be helpers to do these things.. for example, mongodb can be thought of a giant, mutable json file.

in any case, look here for writing a file in IIS http://stackoverflow.com/questions/4505634/iis7-permission-denied-asp-file-write

The basic idea would be to read a json file into a native object, modify the object with the post request, and then write the file with the new object.

this is horribly inefficient, and json doesn't lend itself to appending, so doing this in a text file is a recipe for disaster if you are expecting this to scale past a very very small amount of usage.  but if it's just a little toy or something being used rarely by a small number of people, it should be fine"
2016-04-26 22:09:31;Correctly consuming external REST API's;"I've done this in the past for plain JavaScript solutions by building my own Node API to simplify the calls that I want to make to the API I have no control over. I'm sure there's an easier way, but my project time was limited to figure it out and I was more comfortable with node than performing the calls on the client side. 

Definitely interested in what others have been able to come up with I don't know about your cross origin problem. But it could happen if you try to reach a server from localhost while testing. Chrome has the option to disable that check via a launch option.

Regarding consuming the REST api: I would suggest to use ""Restangular"". It is very easy and intuitive to use. No need to go via nodejs.Your http server literally needs to provide an http header stating `Access-Control-Allow-Origin` where the value is either`*` (probably insecure) or a list of domains that your users should be allowed to make calls to.[deleted]1. thoroughly read up on CORS and apply a solution that fits for your backend platform
2. use restangular on the front end.
If your are still just in the dev phase, you can open Chrome with the security flags disabled. You WILL need to configure CORS at some point, but this can keep you coding in the mean time...

on a mac in terminal: open -a Google\ Chrome --args --disable-web-security

Make sure you have closed all other Chrome instances before you do this for it to take effect. 
"
2016-04-26 16:14:17;Could ngSwitch and $q promises impact SEO?;"I only skimmed your post, but if you are concerned about SEO you'll want to setup something like Prerender.io to serve static versions of your pages to crawlers. Research the `escaped_fragment` technique.

If your site is large, I would recommend setting it up yourself, but Prerender.io makes it easy.

BTW, it's worth noting that Googlebot doesn't need this anymore, but pretty much every other crawler out there still does."
2016-04-26 15:03:35;A sense of speed: Improving (perception of) performance in a single-page application;"Some clever things in here. I like the idea of storing API requests in local storage and then refetching. Would new neat to have a little library that sets this up using http intercepts.

Also worth looking into jsdata for this sort of thing.That link didn't work for me. 
This did https://medium.com/@plestik/a-sense-of-speed-2042c2804f80#.i5ev3tovg"
2016-04-26 14:13:38;[help] I transfer data between different directives and a controller and then when I do ng-repeat it creates lines but not the data;It might be something so simple as you evaluating the correct values inside your expression. I think we're gonna need some code to diagnose your problem. 
2016-04-26 12:57:59;An Open Source Form Builder & Renderer for Angular.js;
2016-05-03 21:23:52;Looking for help on picking a replacement for jQuery DataTables;I use smart table pretty much exclusively at work, although we've done enough modifications to it by now that it's quite different. But overall, we're quite happy with it, and it lets us do what we need.I'm using ui-grid for a datatables replacement after trying out Ultimate Datatables and ngTable. It seems to fit the needs so far.Couldn't recommended ng-tasty enough!  Simple, but fast and easy http://zizzamia.com/ng-tasty/UI grid
2016-05-03 21:21:01;So our #AngularJS 1.4 Blog series is over. What would you add to make this even better? Share your thoughts with us;Well personally I didn't bother looking at it as it wasn't using latest Angular version and still relied on bower.
2016-05-03 20:27:35;why can't i use factory in my code?;Eliminate the [] in each angular.module('flapperNews', []) after the first. Passing an argument there tells angular to create a new instance of your module and therefore destroys any previous instances. yaaayunrelated to you already answered question, have you consider using the [John Papa Angular Style Guide?](https://github.com/johnpapa/angular-styleguide) helped me keep my code clean and readable 
2016-05-03 18:19:44;Why isn't my Angular form submitting any information?;"Trying my best to put this together in my mind, a better option is to show us your code by preparing it into a [plunker](http://plnkr.co/edit)

From the looks of it, in your playerCtrl, you have a updateUser() function. However in your template, it looks like you're trying to ""pass"" something into it, something called edit. But your form is working on the ng-model ""$edit"", not edit, but this is besides the point.

your ng-model on those form items are bound to scope, you do not need to pass that in to your submit function, actually nothing is being directly passed in.

In your updateUser() function, simply access the bound ng-model property you're using, in this case ""$edit"", so you can use $scope.$edit to pass to your Person.update() method."
2016-05-03 15:50:13;Simplest way to implement the Spotify API in Angular with only my user info;"Can you link to the part of the spotify documentation that explains how to send the client id? I don't know about the idiosyncrasies of the spotify api, but in general you can add an object with headers to the config object you use with the $http service, the same way you add a URL. Example from [the docs](https://docs.angularjs.org/api/ng/service/$http):

    var req = {
     method: 'POST',
     url: 'http://example.com',
     headers: {
       'Content-Type': undefined
     },
     data: { test: 'test' }
    }

    $http(req).then(function(){...}, function(){...});
"
2016-05-10 23:11:01;Question About Components - isolating scope, or pass directly to controller?;In general, it's better to inject services into higher level components like your mainController and have them instantiate lower level components using the property bindings. This helps your components to be more reusable, composable and easier to test.
2016-05-10 19:42:40;Question that recruiter could use to screen with;Explain how promises work.  What libraries are useful for dealing with promises in angular?List the differences between Angular 2 and Angular 3, and your plans for converting from the lame, obsolete Angular 2 to the newer version.Explain the difference between '=', '@', and '&' when passing values into a directive.  Explain the pros and cons of two-way data binding.Explain how controllers, directives, and services work together in an application.
2016-05-10 15:21:53;Angular 2 - Desktop apps;thanks for getting a brother started :)
2016-05-10 15:00:54;Why isn't there any angular sessions at Google I/O?;There are two actually, though they might not be on the schedule yet. Alex and I will be doing one on Progressive Web Apps w/ Angular2, and there is another more generic Angular 2 talk.Maybe related to the fact that ng-conf was celebrated last week.[deleted]
2016-05-10 13:45:20;Request for feedback for an Angular2 online training (updated to Release Candidate) aimed at experienced developers - please let me know what you think;Again just about anything you can tell me about your opinion, good or bad I would be glad to hear it. At least I know where I stand. Thanks everybody. 
2016-05-17 18:40:04;Is this even possible to fix? Track by group value does not solve it.;The `track by player.team` works when you upgrade Angular to 1.4.x. In the JSBin at the SO link of this post, Angular 1.2.22 is being used. I'm not sure why the author mentioned it worked in an older version of Angular (which it doesn't seem to in the bin).
2016-05-17 09:17:32;Build A Simple Mobile App With NativeScript And Angular 2;
2016-05-17 06:16:57;create a GitHub Issues dashboard using REST API in angularjs;
2016-05-17 05:39:10;AngularJS;Is it though? This seems like a useful article for people looking for a specific thing in angular, but not new learners.Login using GET? No thanks.AngularJs article useful to new learners
2016-05-16 15:24:52;BlurAdmin angular dashboard v1.2.0 released!;"The only thing I'm not a fan of is the button hover effect, but I'm sure that can be easily overwritten.

Otherwise, looks great!Let us know what do you think about new version. Thanks!Inspiring.

Wonderfully tidy codebase too.This is great! I've been creating admin panels for a while and this it up there with the top dogs! Great job!!!One of the best admin panels I have seen.This is amazing. I've been looking to purchase something that uses angular to get more of a real time learning experience, seeing real code and how it all works. Was a bit scared to spend $30 on themeforest for the chance that I understood nothing and couldn't even make it work.

Looks beautiful, about to start it up and look at the code! Good work guys!"
2016-05-23 22:18:38;AngularFire seems to be deprecated/unsupported after Firebase's update. Is it going to stay that way?;"The docs say ""You're viewing the legacy docs. They are deprecated as of May 18, 2016."" Which means the docs themselves are outdated. I'm sure there will be updated ones on the updated site https://firebase.google.com/docs/ it just a matter of time. 

Github currently has the AngularFire2 repo that is being developed side by side with AngularMaterial 2 and Angular2, so I doubt they are going to get rid of Angular1 versions without having Angular2/AF2 running to replace it.


Here is a link to the docs and tutorials/examples
https://www.firebase.com/docs/web/libraries/angular/api.html
https://www.firebase.com/docs/web/libraries/angular/examples.html


Hope that helps!Check please AngularFire github, there is a pull request for use version 3. And devs said it will be merged till the end of this week. And still you could use old version AngulatFire with Firebase 2.*. Changes to support version 3 to many, need some time to check them.Every time I see AngularFire, I read it as Angelfire and get very confused. The firebase team had a live google hangouts yesterday. AngularFire will still be supported with the old firebase still and they are working on a new library to support firebase v3."
2016-05-23 16:02:11;Building a corporate website/blog in angular: A question;"Why not run headless wp and grab posts with the wp-rest api? Not sure about any equivalent for ghost - comments from the peanut gallery?

Edit [hey look at that](http://getmoxied.net/lean)Switching to WordPress won't keep your site code modular and clean but it sounds like the best fit for this type of site. If you could pick up Angular I think learning WordPress would easy. It has a very low learning curve."
2016-05-23 14:02:50;How to run Angular 2 (Release Candidate) in Production Today - Testimonial post for How To Run an Angular 2 App in Production;[deleted]This is some return on experience on to run an Angular 2 in production, while waiting for final to land. It goes over some tooling choices: which bundler to choose, the bundle size, etc.
2016-05-23 07:02:22;So is the new and shiny Angular CLI worth for real development?;"Its not yet ready, and its indeed an issue for beginners. There is the alternative of using plunkers, but thats very far away from what a real development environment will look like.

Check this video for a simplified playground which has already a lot of things:

https://www.youtube.com/watch?v=abdCkkqwWTk&list=PLOa5YIicjJ-WDC7tEgD_krKalYWVnixXE&index=1?vq=hd1080

BTW, the CLI bundling is already working, with the -prod option. "
2016-05-23 05:19:32;complete guide for using D3js with angularjs for beginners;"Paragraph per page and annoying floating ad... But to advertisers... You might have gotten 10 views out of me for a long article like this arranged reasonably. Instead you got 2 because I was annoyed instantly.I think the article take too long actually describe what d3js is.

It should be explained in the introduction."
2016-05-31 19:47:25;Help, new to Angular and am trying to create a date range picker with predefined date range buttons;
2016-05-31 17:01:44;angular-sherlock, an Angular 1.X directive for Natural-language event parsing;
2016-05-31 16:08:42;best way for login?[help request];"Use: `$state.go('name-of-state');`"
2016-05-31 14:09:41;Angular 2 for Angular 1 Developers — Full Video from Developer Developer Developer Sydney conference;
2016-05-31 13:30:14;Filter by ternary operator HTML text;"I don't understand the question. Can you please describe it a little better?well, to be honest, I don't think there is a very pretty way of doing this. Since you don't want to add temporary keys, would you mind creating a brother to the array?

lets say you get

    accounts = [{active:""yes""},{active:""no""}];

Then create a brother from that looking like this

    copyOfAccounts = [{active:true}, {active: false}];

and then use the copy in the ng-repeat. And if you then need some sort of action on the Actual array just use the index form the copy to get the correct index in the original?It looks for the value ""true"" in the entire object, which exists in the model:  
>     {   
>      active: true  
>      tmpActive: 'Yes'  
>     }  

You can filter on subproperties by doing:  
>     filter: {tmpActive: someInputField}

Updated plunkr demo: https://plnkr.co/edit/IroL8gLs4oAA49gBgXYo?p=preview"
2016-06-07 22:45:52;Amazing-Angular-Projects: Collection of open source apps.;<3 awesome to see mah DuckieTV in there :)
2016-06-07 18:35:48;Pattern for varying display for different models;"Well there are a lot of ways to go about this, and I dont feel there is any way better than the other, and completely up to you.

I think there isnt an easy way to get around some sort of ""switch"" statement, either in code, or in the template.

One approach is to have a directive that is the ""container"" of the individual cards. Then specific ""card directives"" for each type of model. Then in the template of the grid container directive, do an ng-switch when looping over your models to determine what card to show. Now to go about each different card having the same information thats common amongst all card types, you could then go further and write a common info directive, that sits inside each specific card type directive.

Again there are a few other ways I can think of to approach this, but in the end they still have some sort of ""check logic""I would do a directive which can display one card ( with however many different types that card has ).

In that directive, I would use ng-show and ng-hide to get the stuff displayed that you want displayed.

Another option that helps a lot with performance—and that many don't know about—is to use a function to return your `template` or `templateUrl`

There's a couple ways to use this efficiently.  If each type has a unique ""name"", you could do something like this:

    templateUrl: function(tElement, tAttrs) {
        return tAttrs.cardType + '.tpl.html';
    }

or

    template: function(tElement, tAttrs) {
        return '<' + tAttrs.cardType + '></' + tAttrs.cardType + '>';
    }

(I'm on my phone, but hopefully you get the idea.)

This is great if the type won't change, because you don't have any overhead after the initial directive is loaded (vs using ngSwitch).

I would _definitely_ not use ngShow and ngHide, because these don't prevent the unused directives from loading, which will absolutely kill your performance.

Check out the [$compile docs](https://docs.angularjs.org/api/ng/service/$compile) for more details.Create a directive with it's own controller and use a service to delegate the card types to the directive. Don't rely on keys to be a direct correlation of card type alone. Try to use a class to denote the visual style of the card."
2016-06-07 14:16:13;Any benefits in replacing Mongo with Firebase?;"I use both at work. At the moment queries on Firebase are very limited. You can only really query one value at a time on any collection which presents a lot of limitations. The fact that firebase does not store arrays might also require a deal of refactoring for many projects, at least in their state management.

Having said that, I like Firebase. Their libraries are simple and easy to use. But just keep in mind this is not a 1 for 1 swap. Firebase lacks a lot of the features of a fully fledged DB system like Mongo.

I've never had an issue with firebase.  I use it for all my dev including many that have MSSQL data storage as well.  It's remarkably easy to use and instant.A better alternative for Firebase might be [Horizon](https://rethinkdb.com/blog/horizon-release/). I haven't had a chance to use it yet but it was described to me as a self-hosted Firebase. I'm sure there are other nuances that make them different but might be worth looking into.Do you want an easy library with simple functions that is still pretty limited? Or do you want to go the hard way but have full control and lots of possibilities?

Also: Firebase is proprietary and cannot be hosted yourself. You need to get some subscription from them. Now they lowered the prices a while ago, but they can still be quite expensive if you grow fast or need to do lots of queries per user (for which some of the limitations for getting data, don't really help).

Personally i would only use Firebase as an example for tutorials and stuff if you don't really want to spend time on a backend. But if you are looking to make an app and make money of it, you'd probably be better of with some for of self-hosted solution, probably with mongo.I tried setting up a firebase project last week and it was a bit painful. Couldn't get it to work reliably.

Try pusher.com if you get stuck.

Edit: -4? At least explain why..."
2016-06-07 05:03:20;@AngularClass/form-errors: Like ngMessages for Angular 2;
2016-06-07 03:55:36;I need help with catching up, it's been long.;"Read up on the new [component tree](https://docs.angularjs.org/guide/component) structure, they've basically copied the design from React, you should pick it up really easily with your background and find it much easier to work with than the old model.

I don't agree with the following the styleguide anymore, it's been neglected since John Papa moved onto Angular2.  You really want to be using components and the documentation is the best place for this plus some of Todd Motto's [blog posts](https://toddmotto.com/exploring-the-angular-1-5-component-method/)I think the biggest change is the grown popularity of CommonJS. It can definitely help structure AngularJS apps too, but can be a bit of a hassle as a result of how Angular's own module system works.My go to is the John Papa Style Guide: https://github.com/johnpapa/angular-styleguide or the Todd Motto Style Guide: https://github.com/toddmotto/angular-styleguide

Both go over pretty much everything you need to know for best standards and practices."
2016-06-14 23:10:43;"Is it possible to bypass pattern=""[0-9]*"" with angular?";"Figured it out - answering for others.

It's a simple one-liner:

    ng-model-options=""{allowInvalid: true}""

Edit - If this is included inside of a form, make sure you add ""novalidate"" to the opening form tag.

Edit 2 - Here's the entire input field:

    <input class=""input-currency"" type=""text"" pattern=""[0-9]*"" ng-change=""vm.formatCurrency()"" ng-model=""vm.currency"" ng-model-options=""{allowInvalid: true}"" ng-value=""vm.currency"" />type=number not working for you?"
2016-06-14 20:23:37;Understanding custom directives in AngularJS;
2016-06-14 14:37:08;Angular directive scope variable undefined.;"The campaign is not ready when the directive is initialized. You are probably setting the data async from your controller.

You can either set a ng-if attribute on you directive, like: 

    <run-report
        ng-if=""viewCampaign.campaign != void(0)""
        campaign=""viewCampaign.campaign""
        user=""viewCampaign.user""
    ></run-report>

so the directive renders only if the property is defined. I only do this for one-off initialisation, when I know the data is not going to change, and i just want to quickly add a condition when the data is valid.

Or you can set a watcher inside your directive and implement the logic once the value is a desirable one:

    function link(scope, elem, attrs) {
        // watch scope.campaign
        var unwatch = scope.$watch('campaign', doMyLogic);

        function doMyLogic(newVal, oldVal){
            // newVal is the current value of scope.campaign
            console.log(""scope.campaign"", newVal);
            // you will probably be prompted with a few ""undefined"" until the value is attached to the controller's scope, when the request data returns.
        }

        // clear the watcher when element is destroyed -- i think angular does this automatically
        element.on('$destroy', unwatch);
    }

Either way, a watcher is set on the value of the scope property, and the property will be checked every time something on scope changes.

The console.log after the $timeout works, because you actually wait for it to be set on you scope.

Check more of angular's documentation on watchers, there's a third parameter, that tells angular if you want to ""deep watch"" the object, and a $watchCollection method, that is specialised on watching.. well.. collections."
2016-06-14 06:30:39;Angular 2 - dealing with LESS/SASS?;"They're both good choices. You can use Webpack (which is the big new thing) or stick with Gulp or Grunt and leverage compass. It depends if you're on a team who has similar skills or if you're looking to be on the bleeding edge of modern trends. LESS/SASS lets you extend stuff so make sure to have a vendor file and include that in you _component.scss files.might be able to @import the variables file into each component's sass/lessYou may @import the variables file and all your apps SASS/LESS files, into a ""core"" file.

Just see the mostly used frameworks like Bootstrap and Ionic structure."
2016-06-13 22:43:01;Angular 2 Tutorial For Beginners - YouTube Playlist of about 40 lessons - Introduction To Typescript, Components, Directives, Pipes and Services more lessons published daily;"Is there a reason some of the videos in the playlist are marked as private?

Specifically, #29-33 and #37This course is an introduction to the Angular 2 application development framework. The goal of the course is to cover the fundamental aspects of Angular 2 development, establishing some solid ground for further courses. 

In a short time and with the help of the lessons code you should be up and running, and be able to know the essentials of Typescript and know how to build simple Angular 2 components and applications.As Angular 2 is quite a movable feast at the moment - particularly the router, which version is this targeted at?Amazing work! I have a small request though : it's quite offputting having the face in the middle of the screen, perhaps a small box at the bottom-right hand corner, or none at all. Like the focus to be on following your cursor/mouse :) keep up the great tutorials!"
2016-06-21 20:11:54;Can anybody please point me at a *simple* way to upload files with Angular?;"I've used ng-file-upload a couple of times now, and it's worked really well.

https://github.com/danialfarid/ng-file-uploadHalf the battle is what's on the server side receiving it though, you might get better advice if you specified what you're using there.[This article](https://uncorkedstudios.com/blog/multipartformdata-file-upload-with-angularjs) seems to cover the most ""pure angularjs"" way, and includes a jsfiddle to work off of.My fav is ng-droplet.  It provides a drag and drop file upload experience.  The challenge is more on the server side than the JS side to be honest, least it was for us because we were sending in a multipart form with the files and JSON metadata for them.If you only need to support modern browsers (IE11+, latest chrome, firefox and safari) you can simply use plain Javascript to get the file and submit the form like normal to your API. Javascript has the FileReader api which can be used to read a file (though the console won't show how it has been read but you can be sure that it is included. Depending on how your api wants to handle the file, you can use readasdataarray or readasdatauri to convert it.
Then when posting it, you need to set the proper headers and add the file as Formdata (also Javascript api).

Its basically what most modules use but this way you have complete control over how it works and are able to do with it what you need (and have less overhead). If however you need to support older browsers too (which i wouldn't recommend as it is quite a hassle) you could use the modules or add a polyfill yourself by adding some kind of flash uploader.

I think this provides a solid answer on how to do it:
http://stackoverflow.com/questions/18571001/file-upload-using-angularjs

Just know that it isn't that easy and it mostly depends on how your form works and what your API expects to do with the files. Most plugins are also about submitting the files to an API but if you want to use them locally, you probably cannot go around the Filereader API.

I'm a fan of doing it with native Javascript instead of some module as it allows you to better understand what happens, easily adapt it to your situation with less overhead and are not committing to a certain external plugin/module whatever happens in the future. The Javascript libraries will be supported for a long time, those plugins might not."
2016-06-21 10:36:37;[help] Trying to make an object editor (editable lists);"I'd probably do it something like this, setting the model to be part of the original data

    <li ng-repeat=""param in layer.params"">
        <input ng-model=""param.value"">
    </li>

So your layer object will end up looking something like this as the user starts filling in data:

    {
      ml_id: 3,
      ml_name: 'InputLayer',
      params: [{
        mp_name: 'layerName',
        mp_id: 2,
        mp_type: 'string',
        value: 'abcdefg' // or whatever the user has typed in
      }, {
        mp_name: 'batch_input_shape',
        mp_id: 4,
        mp_type: 'tensor',
        value: '12345'
      }]
    }"
2016-06-21 09:33:29;Update on Angular 2 Forms - The Forms API underwent a redesign in RC2, Learn how to use the new API - updated post on RC 2 Forms inside;read more about the reasons behind the changes in this document https://docs.google.com/document/u/1/d/1RIezQqE4aEhBRmArIAS1mRIZtWFf6JxN_7B4meyWK0Y/pub
2016-06-21 07:29:57;Top Ten Reasons Web Developers Should Use AngularJS - DZone Web Dev;
2016-06-21 07:19:30;Why every other Angular 2 tutorial out there is in Microsoft's TypeScript?;"So I've been building out an Angular 2 app in vanilla Javascript.

I'll post some tutorials  & lessons learned soon!I get this. I really do. The guy is getting downvoted for his negative angry comments, but we have all been there one way or another.

JavaScript isn't enough. Add jQuery and plugins. Add a framework and lose jQuery. Add Bower. Add Grunt. Add NPM, lose Bower. Add Gulp, lose Grunt. Add framework modules. Add Webpack. Add ES2015. Add Typescript, lose ES2015. Add Babel...

And this is just the past 4 or 5 years! I have been using angular 1 since 1.0.3 and love it. I have had to learn all this other stuff, and then forget all this other stuff because new stuff just keeps coming out and everyone jumps at it.

I definitely see the benefit in all this new stuff, so I learn it. But man, my day is busy, so add in learning a new technology and how to port over some existing technology. It gets frustrating. I will do it though, and I will use it from then on, at least until a new defacto standard comes to be.At least it's not AtScript.just fucking accept change as the only constant and deal with it. if you don't like it, don't... change. Angular 2 has been designed with TypeScript in mind, every feature gets backported to pure ES5 but it won't be as simple to use.If you take the type annotations out, you will have a hard time distinguishing it from ES6+.

You can still benefit a lot from the type safety even without using type annotations. Just initialize all variables, and the types will be infered. 

If you initialize a variable to a string and then assign it a number you will get an error.

Its really not that different from plain Javascript (meaning ES6+), and one of the main guiding principles of the language is convergence with plain Javascript.

In the future when type annotations make it into the language (this will eventually likely happen), then the two languages will be hard to tell apart.

Typescript will slowly become another babel. The main difference is that babel only implements features that are at least in early stages in the Ecmascript standard, while Typescript will add new features experimentally to see how well they work. 

Better than every StackOverflow solution for Angular 1 assuming you use JQuery as well...I assume because it's the default language when you go to [angular.io](https://www.angular.io). Also, it's the language that the developers wrote it in.

It took me a while to switch over to TypeScript but i'm liking it. I was dubious about the benefits of typings but it has stopped me making mistakes and has helped tracked down bugs."
2016-06-28 20:31:17;Beginner having trouble running app locally;Going out on a limb here but I'm guessing you're standing in the root when running the script, and your index.html is inside src so it doesn't find the file to start from. Could I be on the right track here?YouTube Brent Aurelie, or something like that. He has the best MeanStack videos ever
2016-06-28 20:16:12;How can i use AngularJS 1.5, ES6 and Webpack?;"Tons of questions. I also use ng1 with ES6 and Webpack.

Interesting how you wrote your HTML in a string. My IDE does not.

I'm also curious about how you instantiated your UsersListController. How would this look with injecting services?

What about services? How would that look?https://babeljs.io/ and https://github.com/babel/babel-loader[deleted]"
2016-06-28 17:20:48;Creating Routing Table on the Fly;What I do with ui router is to build my entire state tree manually as normal, then fetch my user information in the resolve function for each state. If the user doesn't have permission to access that state, reject the promise and redirect to another state in a $stateChangeError handler. 
2016-06-28 15:21:31;I created this quiz to test your AngularJS knowledge. Please check it out and let me know what you think.;That was fun, played four games and saw only one repeating question. Enjoyed it. very good game!!!!Nice! Best score was 96, no repeated questions.Nice work. Very cool. Good job, I liked the layout and how fluid it feltVery enjoyable and informative -thank-you! Good as a research tool too.Really well done. I know little about AngularJS, but still did well. Make the questions harder! :DGood job!Super cool! The game and site itself worked fine but I did have a problem with the nav bar at the top overlapping the top of the page a bit too much on an iPhone 4sCrowdsourced questions is the way to go! Good job!@orionmelt Are you using Firebase only for your authentication or for your while site? I am curious, cause I am building a quiz game as well. But it's more than just a quiz game. It has strategic elements as well.nice quiz... well done
2016-06-28 12:59:31;Callback after $http, regardless of success/fail?;"Stop using .success and .error, use .then, .catch, and your requested, .finally. You can read more https://docs.angularjs.org/api/ng/service/$qIn your case, you could use:

    .finally( function () {
         // do stuff here...
    });

Edit: formatting."
2016-07-05 20:52:04;Compile Transcluded Content in 1.5 Component;"I'm not sure why my post got downvoted. Didn't seem like a crazy question, but maybe it was. From my understanding, angular 1.5 components are simple directives, so according to the docs: 
https://docs.angularjs.org/guide/component

linking and compile functions are not available to you. You will have to use an old school directive most likely."
2016-07-05 17:06:36;How to Add a Test Coverage Report to an Angular 2 Project;
2016-07-05 12:45:04;Suggestions for building an AngularJS mobile app?;"Check out ionic framework. Uses both angular and cordova.I would also suggest you use ionic framework which has Angular already integrated in.framework choices aside, you might find some inspiration by these free APIs: https://github.com/toddmotto/public-apisOnsen UI 2.0 plays nicely with AngularJS and Cordova. It provides also auto styling for iOS and Android, what means that it automatically changes the look of your app with very little effort from your side. Also, it provides a very simple and easy to use routing so you don't need complex stuff like ui-router for simple apps. You can check it out in https://onsen.io/v2/
Also, if you want to check quick simple examples, there is an interactive tutorial: https://onsen.io/tutorial/> (things like file structure and using RequireJS vs Browserify, etc.)

Why not webpack?

Also, found this ( http://jaysoo.ca/2016/02/28/organizing-redux-application/ ) linked today - might come in handy. It's about React, but same principle can be applied to Angular (depending on how you separate your code, I used to keep my components JS / HTML / CSS separate and then bundle them with webpack)I am using Ionic to build a simple  app that gets data from external API. 
I really like it, just follow simple steps from ' get starting ' section . "
2016-07-04 23:26:29;Angular 2 books;"There is no book yet.

No one bothers writing a book about something that is not released yet because it's *bound* to be outdated when you are ready to release it. And with regards to the ""small"" changes to the Router during the RC phase this was a very wise decision.[deleted]Right now I'm reading Switching to Angular 2 which is pretty good. I'll probably buy ng-book 2 next. I bought the first version of ng-book and liked it.ng-book 2 https://www.ng-book.com/2/ is a great one. Loved the first. It is not a physical though book but a pdf. You can get updates when the writer makes changes to the book. "
2016-07-04 21:33:28;I made a basic Angular 2 ES6 quickstarter;
2016-07-12 21:03:49;Checkout this amazing AngularJS seed/boilerplate. Better alternative than Yeoman. ﻿;
2016-07-12 17:46:56;AngularAir (live video podcast) at 2PM Eastern: Migrating a ui-router app from ng1 to ng1/ng2 hybrid to ng2;[deleted]Fantastic work Chris, keep up the awesome features and updates!
2016-07-12 13:24:28;Angular 2 Production Testimonial: Startup Reports triple perfomance with New Progressive Ionic 2 Web App;Its getting easier and easier to build muti-platform apps: 1 developer, a couple of months of work and one month previous experience in Angular 2 thats huge. Looking forward to try Ionic 2 out !
2016-07-12 10:06:14;React vs AngularJS;
2016-07-12 09:47:49;Top AngularJS Frameworks Simplifying Web App Development;Mobile user here. Drop the freaking full page modal asking me to subscribe, and stick something at the bottom of the damn article or somethingYo dawg
2016-07-19 14:49:50;How to increase Angular / phonegap performance?;"Without knowing more detail about your performance issues, I'd say reduce your watchers and decrease the digest cycle.Disable debug info to get increase performance.

See : http://paulsalaets.com/posts/disable-debug-info-to-increase-angular-performancehere some perf improvements I came across:

**startup:** 

* inlining: bundle your javascript and inline it into your index.html. even though you would request js file(s) over file:// protocol, I found this to be a **huge** startup speed boost.
* keep an eye on how many plugins you use

**slugginess in the app:**

* reduce watchers
* don't use resolves in ui-router, but give the user instant feedback and then load your dataSwap out Angular for React"
2016-07-19 14:11:16;XSS - should I escape user inputs server-side in a *EAN app or rely on Angular (1.x)?;"Never trust the client. 
"
2016-07-19 13:53:51;Newer courses similar to Anthony Alicea's excellent course ??;"--yy,
I am a big fan of Anthony also. I even sent him a message ""thanking him"" via linkedin but he didn't respond :-)

Anyways, I research bunch of videos, books etc about Angular and the only resource I found that is similar to Anthony's is the ng-book and ng-book 2. If you are a fan of Anthony, I can confidently say that you will love ng-book 2. It is a book though. 

Thanks,I have a paid account of egghead, and I like their ""learn how to do this small thing"" approach. I prefer shorter videos focused on specific things. John Lindquist is one of my favorites in that page. 

I've also paid for 3 Tony's courses (JS, Node, Angular), and they're really complete. But I'm afraid they're a little bit outdated now...

About Todd Motto, I'm a big fan of his blog, and I've seen a few of his videos, but their courses seem too expensive for me. Just one of his courses on Angular costs the same than my annual egghead subscription. That's what stops me.Todd Motto's Ultimate AngularJS are great.

They are new and use 1.5.x.

https://courses.toddmotto.com/pages/courses

"
2016-07-19 13:10:04;Protractor 4.0 Released with TypeScript support;
2016-07-19 10:39:50;How Browsers will re-shape App Development with Progressive Web Apps and JS frameworks;
2016-07-26 14:58:01;Confused on communication within 2 directives. One directive has the information for the radio buttons, but another directive has the save button that saves their input.;"> The issue is that the save button function and features are in another directive, on a completely different folder.

What's a folder? 

If the directive have a parent-child relationship you can achieve this with binding a callback function from the parent to the child, that the child will call when the value changes, so the value is stored on the parent.

If they are siblings, you can use a service that holds the value and share it between all the elements.You could also use $on and $broadcast."
2016-07-26 12:30:48;Why two and how many (digest cycles)?;
2016-07-26 12:19:47;[UPDATED] Angular (v 1.5) with ES6 Style Guide;"This doesn't seem like the most well thought out style guide for ES6 Angular 1.5 code. Certain things seem to be very verbose and unnecessary to me.

This worst thing is the proposed Application Structure. It to me makes no sense just to have a folder where you dump all of your components (either Smart or Dumb). This to me is going back to the days of the ""controllers"", ""services"", ""directives"" folder-by-type structure instead of the much better folder-by-feature structure.

While I think some things here are interesting I would still say that John Papa's Style Guide is much better guide for ES6 Angular 1.5 code, or Todd Motto's Style Guide."
2016-07-26 07:55:32;Selecting Rows from DataTable with RadioButtons and Checkboxes with PrimeNG;"Why not UI-grid
http://ui-grid.info/docs/#/tutorial/210_selection"
2016-07-25 23:13:05;Select component for Angular;"I don't know of any jQuery-free components besides ui-select.  Believe me, I've looked many times.

But I've used ui-select for a couple years and haven't had a problem with performance, even with multiple on a page.I'm the maintainer of http://myforce.github.io/angularjs-dropdown-multiselect/#/

Not sure if this what you are looking for but if you have some issues with it I'm certainly willing to help/fix/add features."
2016-08-02 23:09:48;I made a small angular 1.x module for quickly adding mock REST endpoints to an application. This is the first project I've shown to the public. Criticism appreciated.;I've got a current project this would be really handy for.  I'll try and give a go sometime this week and let you know how it goes.DUDE MY CURRENT PROJECT WE SPENT AT LEAST 1 OR 2 WEEKS MOCKING OUR DATA. THAT WAS 3 MONTHS AGO. TOTALLY USING THIS NEXT PROJECT. KEEP UP THE GOOD WORK AND THE SUPPORT FOR IT! Yeah, did the same thing and decided this was a good use of time as a side project. As long as you don't need REST endpoints that act outside of typical CRUD behavior this should work fine.
2016-08-02 17:12:31;Another angular2 mapping project seed using MapboxGL;
2016-08-02 05:59:52;Help in tracing angular source code.;"Not sure if I understand your question correctly, but AngularJS doesn't dynamically load files.

Your example, `rootScope.js`, only exists in the source repository. When angular is shipped the files are concated into one large file and in this specific case the `$rootScopeProvider` from `rootScope.js` is registered as a provider in `AngularPublic.js`.

When you register your own modules in your own application, your own source files need to 'know' the `angular` object and use `angular.module()` to register the loading code (config, dependencies, runBlocks). The injector uses the information from the registered modules to instantiate them.

tl;dr: Angular doesn't load/pass around files. You pass your functions to angular.Building AngularJs from scratch is. Good ebook"
2016-08-02 03:46:03;Dive into code with Angular JS. Learn Data Binding and the power of the most common built-in directives in Angular JS;
2016-08-02 01:16:37;Anyone else have trouble moving backwards to standard multi-page applications after using Angular?;I can't imagine going back ... I've been doing SPA's for three years now.I have been playing around with Angular 1 & 2 a bit. I'm just wondering. Do you see Angular as a generic solution that works with any kind of project? From the few projects I have done I don't think Angular is suitable as a sole solution for the majority of web projects. Mainly because of SEO and initial page load speed. I can totally see how it could argument many aspects of sites though. You are not alone! Going back to backbone or jquery is like going back to riding a donkey after driving a Ferrari.Yeah I'm just not excited about WordPress anymore. More evangelism needed. i think jQuery is dope. I think the biggest selling point of Angular2 is its ability to integrate with jQuery nicely
2016-08-09 23:15:12;Create a simple reactive store for #Angular2 by @AngularClass;
2016-08-09 21:05:27;.@AngularClass/angular2-seed: A simple seed repo featuring #Angular2 rc.5 and #Webpack2;
2016-08-09 19:39:51;The New Angular 2 V3 Component Router (will also be available for AngularJs) / Reactive Router has hit Release Candidate Status (RC1);
2016-08-09 17:30:50;Directive communication with isolated scope;"taken from angular documentation:
https://docs.angularjs.org/api/ng/service/$compile#-scope-

you assign the parents scope to the one of the directive via bidirectional data binding (localModel: '=myAttr' )

example here: https://plnkr.co/edit/tkDd2ZLsVLvLPSyjol1n?p=preview

the elements should live in a common parent scope (this can be the rootScope, but should be avoided for larger, complex applications)It's a bit out of the scope (pun intended) for your particular question/set-up, but maybe look into something like Flux or Redux (if you're not already familiar with it). I found that it really cleans data flow in my Angular applications, by promoting one-way data flow. 

This prevents stuff like having to deal with updating child directives with new data if the parent's data changes, or vice versa, and reduces a lot of cross-talk between isolated directives. 

Again, don't worry about it for now, since you're still new to Angular. And7s' answer is good, but depending on how many directives you're using, sometimes data binding can get complicated, so you might want to look into just using a service to hold onto that information."
2016-08-09 12:52:38;Project ideas for beginner Angular.JS developer;"Have you looked into build tools (gulp, grunt, webpack) and doing stuff in (babel/es6 or typescript)? Nowadays keeping up with kind of these auxiliary tools and packages are somewhat par for the course.

I also know most engineering teams really care about TDD (test driven development) and documenting code. Maybe consider learning some testing frameworks (Jasmine/mocha + protractor) to help sell yourself as a well-rounded developer. I think the best way to show competence is to combine more than one interest. For example, I was interested in buying an electric car and discovered MPGe was misleading, so I created an angularjs website in an attempt to clarify the true cost of MPGe by comparing it to current gas prices. It's just a calculator, but it was fun, relatively small, and it serves a real purpose. It also gives me something to talk about in interviews: http://mpgecost.com/Give a try to ionic, it's based off angular.

That way you can show your mobile app development skills as well.

For projects, if you are looking for something of modest complexity, i would try and do an online store, with payments, control panel for the sellers, other store-y things.
I made a pokedex and a guitar app in angular as projects.

Http://notpokedex.thebigoh.net 

Http://guitar.thebigoh.net 

The pokedex has a huge api call so uh... it's laggy

I gotta put more responsive css rules in the guitar one because I completely forgot about smaller screensI would say, go on a month long journey just API mashing and building like a dozen Angular App

Use Typescript or ES2015. Use modern build tools, start with a seed project to save time. Make sure you take the TDD approach. 

I'm doing a similar journey. I would say, go on a month long journey just API mashing and building like a dozen Angular App

Use Typescript or ES2015. Use modern build tools, start with a seed project to save time. Make sure you take the TDD approach. 

I'm doing a similar journey. Since you talked about using mongo I'm assuming you have at least a little bit of backend experience. 

Try creating a forum! With boards, topics, and comments. Let users like /dislike, favorite things, upload images, add friends, send direct messages. 

It is something of decent complexity that is easy to expand. 

"
2016-08-16 22:59:14;Angularjs Carousel Slider;
2016-08-16 14:04:39;Any help will be appreciated;http://stackoverflow.com/questions/38975757/drag-and-drop-is-hidden-when-i-drag-out-of-div/38976906#38976906
2016-08-16 07:13:23;Angularjs for non-SPA?;"If it is not an SPA, you may want to consider react/vue instead of angular.

What are you using for routing? Angular UI-Router allows you to divide up your UI into multiple, nested views with their own controllers and data. You can load data before the UI renders, which allows you to show loading times, and you still get all the benefits of a SPA application. I would guess that bootstrapping an Angular app on every page is more of a performance drain than you think because you have to initiate controllers and views and such each time. Sounds like Ember or Vue or React might suit your needs better than Angular.Personally, if you HAVE to avoid SPA then I wouldn't use AngularJS. I would just use React or something similar or render the views completely server side and then deliver them. 

If your reasoning for wanting to have separate pages is so the user gets a loading transition, show a loading bar or spinner during routing but I imaging the transitions will be so quick you'll never see it.

Your app will run much better if you let Angular handle routing and view transitions. Think about what's best for the user and implement that, it's my opinion that in this case going with a true SPA will be a more seamless experience for your users. Loading time does matter.You know you can hook a youtube-like loading bar between views, and each time u call http in a second, right?I've had to work on several applications built in this way (routing handled by .Net, with Angular handling DOM and Ajax duties after page load).  I would say the major downside for me is that I don't dev on a windows machine, and don't know ASP/.Net, so my workflow is not nearly as optimal as how I'm used to working.

But if this is a project where you're likely to be the only dev (or everyone else is already a .Net dev), then I don't imagine this would have much negative effect.I've done this before. Each page just has its own view and a single controller that bootstraps on load. It works pretty ok for adding interactivity pretty quickly. 

I have not done much with sharing components between pages though. Not sure what that would look like. "
2016-08-16 06:27:45;angular-drag-scroll: Lightweight drag to scroll directive for AngularJS;fluid 
2016-08-15 21:36:50;All about $q and Promises in Angular (constructor/ resolve /reject /race /all /ES2015 Promises);"This guy is John Papa's spiritual son I guess.    
Jalousy's speaking.Great post! Using your new style guide at work, helping the dev teams backend guys write components :)Hey Todd, great article! I would have loved though a bit about testing using $q from Jasmine, as it's always been a little bit unintuitive to me that you need to do a scope.$apply in order to force $q to resolve.

I would love to know what some of the best practices are to avoid problems like multiple digest cycles happening at the same time during tests."
2016-08-23 20:43:59;Looking for simple Angular 1.5 projects built using Typescript.;"If you're preparing for Angular 2, I'd start by rewriting your directives as [components](https://docs.angularjs.org/guide/component) and maybe consider something like [ng-metadata](https://github.com/ngParty/ng-metadata)

You get all of the nice features of Angular 2 with none of the version churn.just getting back into angular. do you guys suggest learning angular 2.0 or mastering angular 1.5x?Here is my side project. I was trying to rebuild from scratch one project which i maintain right now, but i abandoned it for a while.


https://github.com/KillaBee1985/angular-diplushttps://github.com/CSC-IT-Center-for-Science/iow-ui 
This one did help me out a lot - a quite huge project built with Angular 1.5 and TypeScript. 

I also published a couple of ideas on Github: 
https://github.com/joachimprinzbach/AngularJS-TypeScript-BestPractices

And a small example App: 
https://github.com/joachimprinzbach/TypescriptAngularSample

As discussed earlier - Those examples use pretty much only ES6; TypeScript is used only for typings. So no big boilerplate inheritance stuff, just simple ES6.

Total shameless plug, but you can see my seed repository which handles Angular 1.5 in Typescript. It's very simple to pick and understand.

https://github.com/bikasv/angular-typescript-seed
inb4 the typescript fanboys downvote me..... i recommend you use es6 and not typescriptGenerator-angular-fullstack has an option to generate in typescript, at least for the client components.Thoughtram's classroom app is a nice example.

https://github.com/thoughtram/classroom-app

I've never actually gotten it to work before, but since we already use TS at work, I only use it as a reference."
2016-08-23 20:07:27;Using the web server for routing vs the app;Yeah, every time a user navigate to a different view the whole app need to be loaded. That include loading angular and other app dependencies, angular need to bootstrapped on every routing and load your app modules aswell.One of the whole points of angular routing and views is to **not** have to load the entire web-page client-side stack on every link click, etc. If you're performing full page reloads with angular then you're **completely** disregarding the paradigm of single-page-applications (SPAs).
2016-08-23 17:46:05;Creating Your Own JavaScript Framework/Library;"This article is not great at all.

And... where the hell is the COMMENTS section on articles?! I wanted to comment on it.. but noooo...

Gimme a frickin' break. More Internet garbage.
"
2016-08-23 16:29:52;New Angular 2 CLI Demo - See The New Webpack 2 Version In Action, Including a Production Build (20k bundle likely to come soon) and Hot-Reloading;The New webpack 2 based angular-cli version ( RC5 compliant ) is working great for use as a quick playground for trying out new concepts (currently in Beta but looking great).Hi all, please note that if you click the title of the post you are sent to the right video. But in this page somehow reddit linked a different video, not sure what happened but this is the correct video - https://www.youtube.com/watch?v=sIHMrPATQFs&list=PLOa5YIicjJ-VDfh3Hgh1ojae8_KV6wkXZ&index=10
2016-08-23 12:06:44;Angular 2 Smart Table component;"Hey guys,

Since our team started developing in Angular 2, we've been missing a good smart table component. That's why at some point we decided to create our own. Today we think it's good enough and tested well on our projects to be released in public.

Feel free to leave your feedback. We're always happy to hear some!

P.S. Smart table is also already in our ng2-admin project! http://akveo.com/ng2-admin/#/pages/tables/smarttablesSeems pretty good !    
Is there an Angular 1.x version ? May be made during Blur admin development<rant>

God dammit.  Angular 2 code basically looks like gibberish to me.  Don't get me wrong, I understand typescript and blah blah blah, I'm just not excited about having to learn everything all over again.  

How the hell are you supposed to know what to import in the imports section?  What I'm getting at is that you didn't have to worry about that in Angular 1.x.  I hope there's some really helpful way that is all going to be exposed, i.e. intellisense, etc.

</rant>"
2016-08-30 22:44:47;Best practice for widely used variables?;"Use a factory, a service or a component (1.5+). It will create a singleton instance of a class which all directives / controllers / other components / services / factories can access.

Don't use $rootScope unless there is really no other way, which is not very often.Hey, 
I am not an expert, but there is a topic in the AngularJS FAQ that might answer the question:

> 
> ""**$rootScope exists, but it can be used for evil**
> 
Scopes in Angular form a hierarchy, prototypally inheriting from a root scope at the top of the tree. Usually this can be ignored, since most views have a controller, and therefore a scope, of their own.
> 
> Occasionally there are pieces of data that you want to make global to the whole app. For these, you can inject $rootScope and set values on it like any other scope. Since the scopes inherit from the root scope, these values will be available to the expressions attached to directives like ng-show just like values on your local $scope.
> 
> Of course, global state sucks and you should use $rootScope sparingly, like you would (hopefully) use with global variables in any language. In particular, don't use it for code, only data. If you're tempted to put a function on $rootScope, it's almost always better to put it in a service that can be injected where it's needed, and more easily tested.
> 
> Conversely, don't create a service whose only purpose in life is to store and return bits of data""    

 [Source](https://docs.angularjs.org/misc/faq)
(scroll to the bottom)


Personally I never used $rootscope because I always had a Service that related to the concern I needed to access the variable for.
I have seen some angularJS code that used $rootscope a lot (probably because it´s an easy and fast solution). But refactoring or understanding the code in the future will lead to a headache.

*edit: Reformatted the headline of the FAQ topic* 
Not sure if this is the best way to go about it but we use it in our application. 

We have a POJO named state service which keeps the state's we need to use in other scopes accross the application. Directives have a built in way of communicating with each other using the `require` attribute. This allows you to require the controller of a parent directive in child directives which will then have access directly to the parent's controller and the variables and methods defined there. I would say that if you can build your directives to have this parent-child relationship then this is the cleanest, ""most Angular"" way to communicate between them. 

If you have sibling directives, then a service or factory becomes the better option. If you need the data in a view controller, it's usually best to use data bindings. 

For info on using `require`, see [Todd Motto's blog](https://toddmotto.com/directive-to-directive-communication-with-require/) and [the Angular docs](https://docs.angularjs.org/guide/directive)"
2016-08-30 11:33:32;In-depth help in understanding the angular compiler;[deleted]I've tried to find something for AoT but it was more or less nothing. Ionic guys are going to implement it in beta 12 so I'll learn from there 😉At the moment I'll not put so much effort as it is still rc and changing in each new rc. Once it reaches production stage it will make more sense to me. Now I'm focusing on daily job to make something with angular :)
2016-08-30 08:54:10;AngularJS 1.5 on IE8;Nope, 1.3 dropped IE8 support.Let me guess, you work for a government department and their browser spec has IE8 as the minimum?I had to support IE8 a few years ago when we were on Angular 1.15 and even then we had a bunch of poly-fills to get it to work and it was sketchy at best. I can imagine it's even worse now.
2016-08-30 02:38:14;Can someone help me understand factories/services a little better?;"https://toddmotto.com/factory-versus-serviceLike this maybe?

https://plnkr.co/edit/3pp25QYFTj8uE8spaGr9?p=previewHonestly, I would only worry about services. I believe ng2 only uses services, and having 3 types of providers is confusing. Since the official team settled on .service, that is the only one I, personally, would worry about.For Angular 1.x:

Services are a singleton object that you can share across any number of your controllers.  All controllers see the **same** object.  Below is an easy way to write a service.  

**obj**, like any object, can have anything you want in it... functions, values, other objects, arrays, etc.

    myapp.factory('SomeService', function() {

        var obj = {
          x : 6
        };
    
        return obj;
    });

Then use it like this:

    myapp.controller('MyController', function($scope, SomeService) {
      // will print 6
      console.log(SomeService.x)
    }

If you assign the Service name to a $scope variable, you can bind x from inside your dom like so:

    myapp.controller('MyController', function($scope, SomeService) {
      $scope.s = SomeService;
    }

In your html:

    <!-- The span below will get the value 6 -->
    <span ng-bind=""s.x""></span>

Enjoy.I'm really surprised at how often this question gets asked but it's a case of over thinking as it is really quite simple.

A factory is a function that gets injected. The return value of the factory function is used as the injectable for things dependent on the factory.

module  
  .constant('bar', 2)  
  .factory('foo', (bar) => bar * 42);

This creates an injectable ""foo"". It is created by a function that takes one argument ""bar”. ""foo"" is equal to ""2*42"", so ""foo"" injected later has the value ""84”.

A service is a constructor. The constructor is injected. The new instance of the object is used as the injectable for things dependent on the service.

const MyClass(bar) {  
  this.bar = bar;  
};  
MyClass.prototype.cat = function() {  
  return this.bar * 42;  
};  
module  
  .constant('bar', 2)  
  .service('foo', MyClass);

This creates an injectable ""foo"". It is created by a constructor that takes one argument ""bar"". ""foo"" is equal to ""new MyClass(2)”. Later, you can inject ""foo"" and call its method ”foo.cat()” which will return the value 84.

There is no other magic. One is an injected function, the other is an injected constructor. The value stored is the result of each.

Sorry, typed his up on mobile. If you have any questions, please feel free to ask.
You use services for access to things which are typically public resources, and have some limited public API. Services are for commonly accessed things like REST resources or accessing which news items are currently in the blog feed.

Factories should be used to create services, or to create patterns that facilitate the creation of lots of objects, instead of just accessing them. It is the most powerful option but should probably be treated like a class definition in terms of what it does.

Also, I would note that a lot of times it can be helpful to use both. Sometimes something you create with a Factory should be retrievable through a service. Like, lets say you are trying to separate your comment section from your article section. Your comment section could use a factory to render several different view subtypes per the comment ( ""sponsored"", ""deleted"", ""approved ), while the article might just want to know how many comments there are total, and that information might be available from the comment controller as a service."
2016-08-29 21:07:52;Including Angular 2 Components from a CDN;"Technically possible, architecturally  bad. I'll consider hosting of front files on cloudflare as you can fine tune caching options as well it will be spreaded across their cdn.are you using systemjs? I can help you use an NgModule wrapper for the component to import from an external resource if so.I don't think that's possible for two reasons: 1) The component wouldn't be there when your application is built... which at least would give you a headache at build time and might not be possible at all. 2) Dealing with cross origin script stuff is a huge pain.

Can you explain what you're trying to do in more detail? It sounds like you have a common control you want to use in multiple applications. You could turn that control into a library that's used by each application instead of trying to reference things cross-CDN or whatever..."
2016-09-06 17:53:32;List of practices for developing lightning fast Angular 2 applications;
2016-09-06 17:48:50;A Hacker News client built with Angular 2, RxJS and Webpack;"Is the source code available?Would like the details on how you built it.39 requests, 320kb transferred over 3g in 4s, domcontentloaded after 4.06s.

versus http://news.ycombinator.com:

6 requests executed, 14.4 kb transferred, i can read the whole page after 200ms.

Sorry, i'll stick to the webpage.

This is the beef I have with these 'clients'.
"
2016-09-06 16:55:12;Preserving timezone after JSON.stringify;"I'm not exactly sure what you're after here... After looking at the Kendo UI API, I think you're example above is really supposed to be along these lines:

    var now = moment()

    var timeFormat = ""hh:mmazz"";
    var nowAsString = now.format(timeFormat);

    $scope.timePickerOptions = {
      parseFormats: [timeFormat],
      interval: 15,
    };

    // nowAsString is already a string so this isn't necessary? you weren't even assigning this to anything in the first place so this line is especially useless
    // JSON.stringify(nowAsString)

EDIT: if you can create a simple CodePen or something that illustrates your issue I'd be more than happy to debug it with you.A little known feature of JSON.Stringify is that it can take a third argument, which is a function that gets called for every field/value that's about to be serialized.

In that callback, check if the value is a date, and return it as new .toISOString()So I work with dates and time and moment in almost all of my companys application so i'm familiar with the frustrations. Looking here I'm assuming this is already a case of UTC / how dates are handled and expected on the server side.

But to clarify, the value you're sending to the CRM api is just a time value. so literally a string representation like ""8:05am"" ? Then when you receive that BACK the API is sending you a value that is 5 hours off? Is that correct?It might be a server issue ?

I had a similar problem, my back end is .NET, after receiving the value I had to invoke .ToLocalDate() to get the correct local date.

Try something similar in your backend.

JSON.stringify() does keep the timezone, just tried it, the stringified string looked like that:

    ""2016-09-07T12:49:26.898Z""

Then creating a new Date passing this string got me the date with the time zone:

    Wed Sep 07 2016 15:49:26 GMT+0300 (IDT)

    
"
2016-09-06 15:52:21;File Reader Directive for Your CSV File;
2016-09-06 13:07:59;Opinions on Todd Motto's Ultimate Angular JS courses?;"Recently ran through these videos and they are legit. If you're completely new to JavaScript, I wouldn't start here to learn Angular, but that's probably my favorite part about them. The beginner vids are *Angular* beginner, not coding/js beginner, so it doesn't waste time dumbing things down.

I don't mean this to be an exclusive statement, but I will say the sweet spot for these videos is probably devs that know enough Angular to be dangerous. If you're writing Controller-heavy, $scope-dependent, Angular <=1.3 code, these will help you understand how to write Angular 1 correctly and get your shit ready for Angular 2.

My two-thumbs-up rating is limited by my lack of additional thumbs. Thanks, Obama.

*edit: typo, of courseI'd also like to hear opinions. I get a free Pluralsight acc. at work with lots of AngularJS courses but Todd seems like a really great guy to learn from.I've listened to some of his screencasts and he does an absolutely amazing job breaking high level concepts into something simpler and easier to understand. He really knows his stuff.Bit expensive for me to consider, especially as the life expectancy of Angular 1 isn't that long.  In my line of work I don't hear about many companies using the new 1.5 features.

Fair play to Todd though, he's the only person still really pushing Angular 1 and is actually making it look more appealing than v2.Someone read Authority...

Despite what others have said; a professional programmer [in the US] will probably make more than that in a day; so if you want to learn Angular to become a professional in it; then the cost isn't that much.Todd does a couple things VERY well... he is obsessive about doing things ""right"", he is very good at explaining what is happening and then taking it three steps further and he consistently translates that to great content. I consider myself to be an excellent Angular developer and he still manages to show me new things that I hadn't considered.[deleted]"
2016-09-13 20:35:33;Help: ng-model inside directive template;"Solved. I needed change the input's ng-model to ""ngModel[optionselected.value].min"" and I changed the optionselected model to an object {""value"":""12345""} instead an array of strings.Are you adding a new scope properly called ngModel? Don't think that maybe the best way to utilize ngModel. 

The directive property require might suite better. "
2016-09-13 15:06:05;Need help to get started with angularjs;"How comfortable are you with javascript? I'm no expert, but that's the foundation. Gordon zhu has courses in both(js +angular) . Eloquentjavascript.net also good. You don't know js.  All free, I think. This tutorial is great: https://www.youtube.com/watch?v=i9MHigUZKEMI found the [Tutorial](https://docs.angularjs.org/tutorial) in the docs really helpful as a jumping off point.[Egghead.io](https://egghead.io) has some angular courses that really helped make angular ""click"" for me. They have some free courses but lots more for premium. I agree with others too, learning vanilla JS as a foundation will help smooth out the Angular learning curve. 

(At the risk of sounding like an ad...) Word of advice, invest in something like Lynda.com, Tutsplus, Egghead, etc. At least try all their free stuff you can and then make a decision. For me, I love being able to know I can sit down for a few minutes and get something that's high quality, been vetted, and shows me how up to date it is. You already have dev experience so I'm sure you'll be able to smell bad content before wasting much time, but I still think it's a worthwhile investment. Especially if you can get your employer to pay for it or write it off as a freelance expense!You could be fine jumping straight into angular. JavaScript is just a loose ass version of Java. Angular is amazing and works really well once you get the hang of it. Currently trying to learn angular 2 with typescript now.Thank you all"
2016-09-13 08:57:02;$http in component;"    $http.get('/someUrl', config)

It doesn't seem like the variable 'config' is defined.>angular.js:13294 ReferenceError: config is not defined

`config` isn't defined. Read your error message.

>at new scheduleController (schedule-list.component.js:12)

And.. this happens at line 12 of schedule-list.component.js.

Guessing you have some stuff at the top of that file that you're not sharing, because the line in issue is this:

>        $http.get('/someUrl', config)."
2016-09-12 19:27:55;UI-Router 1.0.0-beta.2 for Angular 1 and Angular 2 released;How does it compare with Angular 2's built-in router?
2016-09-12 15:55:55;Named vs Anonymous functions;"Named is for reading stack traces.

http://www.therightcode.net/naming-functions-yes-but-not-all-the-time/I like to put things that are 'exported' to the view at the top as a reminder that these things are visible in the view. Then I put the actual functions down below, often after a 'return' to show that 'thre is nothing more down here'

    vm.myFunc = myFunc;
    vm.yourFunc = yourFunc;

    //do stuff

    return;

    function myFunc() {

      ....
    }

    function yourFunc() {

      ....
    }I am not the biggest fan of angular, so take my advice with the smallest grain of salt. Having said that my company is big on angular, and John Papa's style guide of angular.  Function expressions are generally frowned upon. He recommends setting your scope member to be the name of a named function... since named functions get hoisted, the reference is there. Function expressions only hoist the variable not the definition of the method...  so you could run into some problems. For this reason he recommends named functions.

i.e.
vm.foo = foo;

... stuff ..

function foo () {...}


Edit: code sample and link to style guide
https://github.com/johnpapa/angular-styleguideit doesn't matter. Second example sets the function's property `name` to `myFunc`. This can be printed if an error is thrown inside such function. You could say it is a bit better-but I wouldn't be afraid of debugging problems-any browser will output a correct line of an error-so there really is no need to identify the function by it's name."
2016-09-20 17:21:08;Question about multi y-axis support with Angular-nvD3. Apologies if this isn't the right place.;"Not sure if it is possible, but I remember it was possible with http://www.highcharts.com/

Edit: answer found here if you're going to use highcharts http://stackoverflow.com/a/16962188/4655177When I used it about a year ago, there wasn't possibility to create second y-axis. IIRC I created an issue about it to Github, but got no responses.

I recently bumped into c3js here in Reddit and it has possibility to create two y-axis (http://c3js.org/samples/axes_y2.html). Never used the library though, but it looks pretty good and has Angular directives too (http://jettro.github.io/c3-angular-directive/). I was just using angular nvd3 for a work project and I don't think there is a built in way to do it.  All the D3 wrappers do an admirable job of making doing some common things pretty easy but it also makes customization somewhat difficult.  You very well may have to use raw D3 for the charts.  I could be wrong about this though so definitely check around a bit before taking my word."
2016-09-20 08:36:53;Jasmine test for a service;"Seems to me like you're getting unit tests and end-to-end tests mixed up. Take a look at Protractor for writing end-to-end tests. 

https://github.com/angular/protractorYour approaching in testing seems correct to me. Remember you are testing your Angular service, not the HTTP backend. Your unit test should assume that the request will return the correct values. You should also test the service returns what you would expect if you receive an incorrect response or 404."
2016-09-20 01:34:52;Why upgrading to Angular 2 isn't for me;"> [no] Progressive enhancement

That's definitely a valid reason not to use ng2.As a long time Angular 1.x user, I have gotten used to the pattern of registering components by getting the particular module (`angular.get(""app.module"")`) and then using `.controller(...)`, `.directive(...)` etc. This way, I can have separate JS files completely decoupled (in a sense) from the root module.

When I realized that, in Angular 2, every time a new component is defined, the registry process is to *go back to* the particular module and not only `import` it, but also add it to the `declarations` property in the decorator, I lost all interest to even use Angular 2. Decorators look ugly enough. Now I have to bloat it with ALL my child components?

I have been waiting for Angular 2 for a long time and been excited about it, but now that I have tried it, I don't think it is worth my time. Just not for me.Progressive enhancement is a concept I haven't heard in 10 years. Modern browsers have stable js engines  that are always on. 
If a user has javascript turned off these days that basically excludes the majority of the web.


I think its no secret that ng2 is designed as a whole application framework. You are not supposed to drop it into an existing application. And assuming the user has a modern browser is ok, its not 2006 anymore.[deleted]Happy to see that I'm not the only one that has tried to implement Angular 2 in an existing shopping cart.


In my case, I was just having a bit of fun and wanted to see how hard it'd be to implement Angular 2 within our Magento shopping cart.


Long story short. I ran into similar issues that you did, and as you said, it really doesn't seem suited to enhancing existing functionality.


If you have a bit of appetite for exploration. Check out Vue.js 1 and 2.0 rc. I've been using it in another project and I almost wish that was Angular 2.


Really easy to implement, a real easy API and its really well suited for adding additional functionality via components.Isn't this the reason that they added server side rendering with Angular Universal? The idea being that you could return a totally static HTML page very fast and then have Angular bootstrap and take over at a later time? Maybe I'm mistaken?> I like the new binding syntax

Really? Personally I like Angular 2 but I can never get over the ugly [(ngModel)] syntax"
2016-09-19 22:54:08;Why Learning Angular 2 Was Excruciating;"The author absolutely answers his own gripe:

> To be fair, I have been using versions of the library that have thus far not been officially released. Maybe, you say, it’s my fault for trying to download and use a version of the library that is still in alpha/beta/release candidate and expecting it to work and be relatively easy to use. **Perhaps you are right.**

If you are not prepared to, or in a position to, handle the breaking changes, then Angular2 during RC was not the right choice for you. Period. The Angular team was extremely clear about that, except maybe for a very brief time around ngConf during the excitement when the first RC was announced (they rectified that in most of the following interviews and public statements). 

We looked at Angular2 around the time of ngConf, and decided it wasn't ready and that we were going to wait for the final, whenever that was. Even developed a nice sized ecommerce / online ordering app during that time frame. Heck, we may not even do our next app using Angular2, not for lack of desire or an over-abundance of caution. It's called being prudent and practical.

The biggest problem I see with the JS community isn't the library/framework authors, but rather that developers aren't willing to actually wait for betas/RCs to settle down, but don't wait to criticize. Done productively, that is a good thing. The rant in this article isn't productive. It's just a rant. It's great that so many are willing to test these platforms, but they should realize what they are getting into and signing up for when they do that.The real issue here is the lack of clear distinction between; alpha, beta and release candidate. Breaking changes in the alpha and rewrites, are fair enough. Breaking changes in beta, still fair enough and ideally at this stage very minimal rewrites. The release candidate stage should be stability and bug fixes, but no architectural changes or rewrites.

The problem with the authors gripe is no matter what stage he started using Angular 2 from, he would have encountered many of the same issues, save for using it after it hit final release. The release candidate for Angular 2 was nothing short of disgraceful, every release broke something, going against what a release candidate is supposed to be.

The Angular team sold the NG2 vision far too early. Heck, the router component alone was rewritten 3 times in its lifetime because of poor design choices the first couple of times. They were definitely not clear enough. This post is accurate and well-deserved criticism of Angular 2.

The very nature of front-end development is things are constantly in a state of flux, things are getting deprecated before they even hit a 1.0 release and yes, rolling with the punches is definitely part of the job. Some open source projects handle releases a little bit more smoothly, like Aurelia for example which is NG2's closest competitor. I think when you're a well-known project with a lot of contributors and the backing of Google, you are held to a higher standard and thus more scrutiny. This isn't a basement project being maintained by a single developer with a day job, there are people working on NG2 fulltime, people being paid to work on this.

Say what you will, but the way NG2 has been handled up to its final release is unprofessional. The lack of communication and fact that it is first and foremost driven by Google's internal Greentea team (the reason for Angular existing in the first place).

Oh, and the icing on the cake: look how long it took them to use semver.Yep, angular2's development cycle was a literal circus. > A few months ago I decided to try my hand at web development.

That problably didn't make learning a new, complex framework that's still in alpha any easierIt's true the js ecosystem is horrifying. 10 years from now we'll be laughing at our current selves. Good times.We've been using Angular 2 at work for some time now. This article perfectly captures our experience. The amount of breaking changes per release, along with odd versioning, was just painful. I'm super happy that its now at 2.0.0 SNF using semver, but I'm still not 100% sure on Angular 2. > To be fair, I have been using versions of the library that have thus far not been officially released.

to be fair isnt typescript just a rush job of the latest javascript standard that also hasnt been released, this isnt your fault, release candidates whilst not stable are not supposed to be like this.The official Angular 2 release is out. I tried the alpha of Angular 2, and it was excruciating, but I decided to wait until the official release came out. It's a lot easier to deal with than the alpha. So, that's a start. > How many developers ... have sworn off Angular forevermore in favor of React? 

I'm so sick of this comparison.  Angular is a full MVC framework.  React is just a View.  They serve two different purposes, and, in fact, could even be used together (I don't know why anyone in the world would do it, but it [has](https://github.com/ngReact/ngReact) [been](http://www.williambrownstreet.net/blog/2014/04/faster-angularjs-rendering-angularjs-and-reactjs/) [done](http://angularjs.blogspot.com/2016/04/angular-2-react-native.html)).  People saying React is faster than Angular are 100% correct, because React doesn't deal with the Model or the Controller.  It's, in my opinion, fancy jQuery.this is why I like EmberPeople complain about alpha software not being ready for real-world usage."
2016-09-19 15:56:46;How do I pass a value obtained inside a JQuery function inside a Angular (ver1.5.8) directive to a $scope.var?;"Just fire $http when the button is pressed? Check out angular-stripe it does something similarI saw your edit, but I still dont understand why you need to use jquery? its a big library and your sample code is easily achieved with angular. so ill try to answer in an angular way. Im not an expert though so feel free to suggest errors or improvements :)

I try to put my http calls in a service. 

    app.service('svrCalls', ['$http', function($http) { 
      var getStuff = function(value, success, error) { 
        $http.get('someUrl' + value)
        .then(function(res) { 
          success(res); 
        }, function(res) { 
          error(res); 
        }; 
      }; 
    }]);

and call that from my controller 

    app.controller('myCtrl', ['$scope', 'svrCalls', function($scope, svrCalls) { 
      $scope.model.searchValue = ''; 
      var readyGo = function() { 
        svrCalls.getStuff($scope.model.searchValue, 
        function(res) { 
          $scope.saveHere = res.data; 
        }, function(res) { 
          console.log('opps'); 
        }); 
      }; 
    }]);

you can use that controller function how ever you want. you can call it from a button with ng-click, or use any of the other out of the box directives to attach it to a dom element somehow.. I kind of dont understand the bit about why you would not want to use ng-model on your input box? this is how angular works. it is just the easiest way to get the value from the input.. binding to your scope like this is one of the awesome benefits of using angular :)

I dont think you should usually make ajax calls from a directive though. I normally just use directives to manipulate the dom or enhance an element with a little bit of extra functionality. if you are using angular, i think you should try to do it the angular way, and try to take advantage of all of the stuff angular provides, otherwise it is kind of not worth using the framework to begin with."
2016-09-27 22:09:22;Question: Annotating images;Maybe you could use something like [this](http://pwambach.github.io/angular-canvas-painter/), you would have to change the canvas background. I did something similar using that library.
2016-09-27 20:35:28;"Confusion around the $onChanges life-cycle hook and ""deep"" watching.";"Your UI is updating because your are passing your binding to the child component by reference.

You need angular to break the binding between the object from the parent to child. 

You can do this by using in your child component:
      this.changes = angular.copy(changes.foo.currentValue);

You can check out my recent reddit post https://redd.it/54k3kt where I mention the favoured approach(Todd Motto's) for parent/child bindings.

If i'm telling you something you already know, apologies :-)I think $onChanges checks for reference changes. Try $doCheck to watch for value changes."
2016-09-27 19:16:10;Need explanation for this function.;"Sure.

First row declares a self invoking function, this is a method in JS to self contain code.

    (function () {

app is the angular app that is currently running. This code creates a new filter for this app.

        app.filter('unique', function() {

Each filter registered in Angular is invoked with the collection you want to filter, and the parameter you want to filter by (keyname).

            return function(collection, keyname) {
                var output = [],
                    keys = [];
    

This row specifies a method to run on each item on the collection.

                angular.forEach(collection, function(item) {

For every item in the collection, check if that item has a field with a similar name that was supplied to our filter.

ex: keyname = ""title""; item = { name: ""David"", title: ""CEO"" }.

So in this next line, key would be ""CEO"". If the keyname was not found in our item, key would be undefined.

                    var key = item[keyname];

Now we check if our key (""CEO"") does not exist in an array. 

                    if(keys.indexOf(key) === -1) {

In case it doesn't, we save the key in that same array, and save the item to be returned from the filter.

                        keys.push(key);
                        output.push(item);
                    }
                });

When all the iterations on our collection are done, we return the filtered collection.

                return output;
            };
        });
     })();

So basically, what this filter does:

If I have a collection of people with many different titles, I tell this filter that I want to receive a new collection, that only has unique titles, no duplicates.

The filter goes through each item, if it finds a new title that it didn't encounter before (unique), it saves that title in an ""already seen"" titles list that it can check for later, and saves the item to be returned."
2016-09-27 19:12:52;Make it Easy by Angular-JS Directive to Format or Filter Date;
2016-09-27 15:11:17;I rounded up some of my favorite AngularJS Templates this year.;I have found that integrating pre existing templates very troublesome. I prefer styling and writing templates from scratch with the help of some CSS framework. Saw Bootstrap on basically all of these.  Puked on my computer.  Threw it.  Cried.  Got a new computer.  Commented.
2016-10-04 19:52:14;Anyone else seeing rogue spaces, bad indents and other misc problems with Angular-HTML Formatting in VS Code?;"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/vscode] [Anyone else seeing rogue spaces, bad indents and other misc problems with Angular-HTML Formatting in VS Code? • \/r\/angularjs](https://np.reddit.com/r/vscode/comments/55vrh1/anyone_else_seeing_rogue_spaces_bad_indents_and/)

[](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*

[](#bot)As OP on that thread pointed out, it was because they had a malformed HTML tag earlier in the file where they were seeing issues."
2016-10-04 19:01:38;Angular 2 Smart Components vs Presentation Components - What is the difference, When to use each and Why - distinction also applies to AngularJs;A tutorial on the different types of components that we might want to create in an application (its me on the video) - application-level components or smart components, and pure components or presentation components, when to use each type of component and why
2016-10-04 17:52:48;Angular 1&2 training with Lukas Ruebbelke and Todd Motto;"I love Todd's stuff but looks like the Angular 1 course is his previously published one.

Personally I had to stop watching the Frontend Masters Angular courses because I found Lukas so annoying, hopefully he tones it down in these ones.
I was thinking about this as well, but I can't justify the price of these courses.  Yearly subscriptions to other sites are the same price.This is angular only right?Is there any student discount? :D "
2016-10-04 17:37:40;Question from a frustrated newbie learning Angular 2 inside.;"Do you have a question? o.OPut your code on GitHub so we can correct your errorsAre you looking for a tutorial that will build the app for you?! 

Cough.

You basically just described Tour of Heroes."
2016-10-04 16:00:59;Do you think using $filter('filter' in a controller/service is an anti-pattern?;"/u/toddmotto says ""do it."" 

https://toddmotto.com/use-controller-filters-to-prevent-digest-performance-issues/I wouldn't call it an antipattern. Javascript is a functional language - calling something like this:

> var currency = $filter( ""currency"" )( amount );

Shouldn't look crazy to most JS developers. If you end up using it a lot, or want to decorate it, then you can always store the function in a scoped variable, i.e:

> var currencyFilter = $filter( ""currency"" );

I'm not sure if you necessarily ""lose"" anything here except that you would be stuck with whatever the currency filter was when your component was loading. ( I'm not sure you would ever want multiple components to have different filters with the same name or to mess around with the filter provider, but its worth qualifying )."
2016-10-11 23:30:55;Stateful and stateless components, the missing manual (Angular 1 + 2);Very good article,  I learned a few very interesting things! In the 1.5 version, does the $locals (in todo-list template) refer to whatever arguments the child todo component will send?On Angular 1.5, is there a reason I should pass a callback to the child component instead of requiring a parent as a controller?
2016-10-11 17:51:21;Who should be in charge of the data? the list component or the parent component?;"This may help -> Stateful and stateless components: https://toddmotto.com/stateful-stateless-componentsIs this ""on-play"" event only specific to the dashboard? You want the grand child component to trigger something in the dashboard component?One of the standards to stick to is that child components generally don't handle data management just data rendering. Typically it's left to the parent. "
2016-10-11 17:42:18;Help with simple example from tutorial;"TypeScript is a typed superset of Javascript, so if you have no interest in using types then I'd suggest using pure JavaScript instead!

> onSelect(hero: Hero): void {
    this.selectedHero = hero;
}

The ""void"" indicates that the function does not return a result.  If it returned a result, the type of the return value would be specified instead.  Similarly ""hero: Hero"" indicates that the hero argument will be of type ""Hero"".  This function is simply setting the value in ""hero"" into the instance's ""selectedHero"" variable.

The export statement makes the Hero class public so it's functions etc. that have been declared as public can be used outside of itself.  

I would suggest that you do some TypeScript tutorials if you're wanting to use it with Angular rather than JavaScript.  The ones on lynda.com are good if you or your employer (if you're in the field professionally!) has a subscription, but there are loads of free ones around as well.Regarding the first snippet, :void means that this function won't return anything.

Regarding the Hero type, the reasons for (hero: Hero) are:

1. Intellisense / autocomplete - the compiler knows what properties are on the Hero type.
2. When invoking such a function and providing another type, for example a string (onSelect(""hero"")) your code won't compile. sure you can define it as any onSelect(hero: any) but inside the function your code relies on certain properties of that object - this will throw errors on runtime...

Why is that necessary?

It's not. Typescript will also work if you write plain Javascript... but TS have a lot of benefits over JS. like tooling support, types etc. 

Bottom line, it helps you write better code.Thanks guys, that helped me out. One last question about the void method. What would be the syntax for a method that did return something? Would it just be something like this:

    onSelect(hero: Hero): function() {
        var newId = hero.id + 1;
        return newId
    }

edit: The more Im reading the typescript docks, the more this is making sense. Not sure how I feel about the entirety of the Angular docs being in typescript rn."
2016-10-11 17:22:33;Spring and AngularJs;deleted  ^^^^^^^^^^^^^^^^0.2297  [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/85790)
2016-10-11 10:37:08;Live Q&A with Jules, Rob, and Stephen from the Angular core team at Google;
2016-10-18 20:36:46;Mistakes I’ve Made in Angular 1;very useful as i am working on a electron app and have no plans to ever use angular 2.
2016-10-18 19:16:34;100 days of Angular 2;"No love for the Angular-CLI? It would have done what you did in 5 days (including tree shaking) in under a day. And you would have just coded Angular the whole time, no messing around stuff like build systems and other stuff that's not your project's code. It's really that simple. 

Disclaimer: I'm the lead of the Angular CLI project. Very in-depth! Amazing, so many articles skip over the ""easy"" stuff which is obviously relative.This is a great learning resource. Thank you!The frowny face at YOUR PARTICULAR favourite editor not supporting syntax highlighting OUT OF THE BOX is where I stopped reading."
2016-10-18 19:08:01;Angular 2 form fundamentals: template-driven forms;"Todd always pushes great content! I remember he did some great content on getting started with AngularJS. 

https://www.airpair.com/angularjs"
2016-10-18 15:43:32;Unit test an angular controller and service which uses a promise?;"There are a couple of problems here:

* You're module in the factory/controller definition is called 'app', whereas in the test you call it 'euroApp'.
* You don't define the module 'app' at the top: you need to write angular.module('app', []) with the square brackets.
* You never actually call the results() method of the controller. Since you've made it a $scope property, I saved a copy of $scope when params is initialised. Then calling $scope.results('testuser') will execute the function, calling into your fake searchServ.fetch().
* You resolve deferred with repos, but repos is undefined. Resolve it with somethng, e.g. a string, and scope.repos will be set.
* You have a mixture of $scope and scope; they are not the same.

Working Fiddle: http://jsfiddle.net/xxjs4ey3/1/.

A few other points:

* It would be easier to return $q.when(mockResults) from your fake searchServ.fetch(), which [returns a promise](https://docs.angularjs.org/api/ng/service/$timeout) which automatically resolves to the value of mockResults. Then you can simply call scope.results() in the test and assert that scope.repos is undefined: http://jsfiddle.net/xxjs4ey3/2/.
* Why are you using a $timeout in your factory? This seems totally unnecessary. Moreover, you've not cleared up the promise returned by $timeout by clearing it.
* You are relying a lot on $scope, which is generally considered bad practise as we move towards Angular 2. Moreover your factory is never new'd, so [should probably be a service](http://blog.thoughtram.io/angular/2015/07/07/service-vs-factory-once-and-for-all.html). See here: http://jsfiddle.net/2e0sLjwe/."
2016-10-18 15:26:20;working with select with data type number;
2016-10-25 21:44:10;Help starting;"I'm not sure what tutorials you're using but either ng-app or ng-controller should be a start.Just download the latest Angular.js and .CSS files and add them to your .html like any other JS package and CSS sheet.

I have a simple single file angular app I created that I can't share publicly but if you PM me I can get it to you.  I think it's handy for exploring and you can simply start breaking it up into parts once you start to understand angular."
2016-10-25 15:50:29;Angular 2 Forms — Create Async Validator Directive;
2016-10-25 13:34:29;Configuring components with ui-router and ngRoute;
2016-10-25 08:01:34;PrimeNG is updated with new horizontal tree, inplace and steps UI components;
2016-10-24 14:41:56;Angular 2 Smart Components vs Presentation Components: What's the Difference, When to Use Each and Why?;
2016-11-01 22:13:41;Typescript 2 IDE - How To Setup WebStorm Step By Step;
2016-11-01 18:23:32;AngularJobs's survey of 10,000+ Developers: 87% feel culture is paramount when choosing an employer.;Can confirm. Current employer has real cultural and leadership issues that are running some of our team ragged. Including myself, one of two JavaScript developers. 
2016-11-01 17:35:58;"Lost my job, going into interviews that focus on Angular. Where can I brush up on Angular ""interview"" knowledge and run some quizzes? Any tips?";"Yeah, I find interviewers like to throw ""see how smart I am"" questions at you that no reasonable dev would know off the top of their head and would most likely need to stack overflow anyways.

My advice, if they throw one of these, don't try and bullshit your way through it.  Just say, ""I don't know."" 

As far as interview questions...

What is transclusion and when would you use it? 

What is the difference between link and controller in a directive? 

What is scope? What are the different kinds of scopes? 

Explain the digest cycle to me.

What are some things to watch for in using angular? 

How does a filter work? 

What is rootScope? 

Explain the difference between $emit and $broadcast.

What is the difference between a factory and a service? 

What is the difference between ng-if and ng-show? 

... Those should get you started.I got a lot of dependency injection questions-- which is neat if everyone is doing it and less neat if just a few guys are doing it. So, that is one area that you may go in with more knowledge your technical interviewer may not have, because they may not use it as often. --I found myself having to defend my deeper knowledge to a guy that didn't end up choosing me. The guy was just plain wrong about some limitations Java has that Angular does not. Better where I am at now regardless.Hey. Sorry to hear about the startup falling through. If you are looking for angular + .net work we are looking for people, I sent you a PM. One I can suggest is https://www.toptal.com/angular-js/interview-questions, although it has just 11 questions.don't, just be yourself and be honest about your abilities and experience I just came out of interview today. The only time we talked angular specific questions was a casual conversation. We spoke about typescript concepts if I like gulp etc. Not sure if that helps a lot but that was itI don't study for interviews exactly, I build stuff on the side and of course OJT but when I'm in between contracts/jobs I work on sites/side projects for my domains I own and practice real time on the technologies I want to work with.

If you can do this:

>I just built an entire web client for a HIPAA-compliant chat using Angular, SignalR, and .NET Core, so I'm pretty confident in my abilities.

I can't see why anyone in a hiring position would not grab you immediately over someone who ""prepares well"".
Read, research, understand and answer the questions here and you ll be sure to tackle any interview for an advanced level.

https://github.com/krosti/angularjs-q-a"
2016-11-01 16:19:49;Linting for Angular based on the official style guide, in your browser;
2016-11-01 14:10:05;$Scope.$Apply() returns a circular json error after loading data into an angular-ui-grid;"Hey guy, $scope.$apply not return any object. It's just force new $digest run. This bug come from your post object. It's have a circular reference like this

a: {
    c: 2,
    d: a
}

You need to remove circular reference before do anything.
https://codedump.io/share/wKEQTDpK8Pjq/1/jsonstringify-avoid-typeerror-converting-circular-structure-to-json


If you have any problem, inbox me your team viewer"
2016-11-08 21:25:03;Are there any angularJS modules or directives for calculating IP subnet numbers?;"Why not fork it and remove requirejs? It's all just JavaScript after all. looks like it has leftpad too.  We all know how that went. 

Honestly, this looks simple enough to just write the code yourself using this as a tool. that library looks like it has a lot of features, based on your description, wont need.  

The library referenced doesn't walk the whole network stack.   is that kind of capability even possible with JS let alone a directive in angular?I guess creating my own AngularJS code is the only good way. I was thinking about some kind of a library that's not created by angularJS developers but by other communities. Sadly for now there's no such thing so i have to create it by myself. 
Thanks for comments!But.. But.. Angularjs isn't a piece of tech devoted to perform calculations or conversions. It's a fricking framework to build web apps. 

OMG"
2016-11-08 17:47:14;React developer learning Angular, need help!;"> Are tutorials before Angular 1.5 still relevant? 

Yes. 

The main thing which angular 1.5 added was Components, but components are basically just a specialized type of Directive. Components are good because they're concise and they force you to make sensible design decisions, but anything you can do with a Component you can also do with a Directive.

-----

One thing to be aware of when reading older tutorials though is that they will often be written in a style that makes frequent reference to $scope. For example, you'll see a controller that looks something like this:

    function MyController($scope) {
       $scope.greet = function (name) {
          return 'hello' + name;
       };
       $scope.name = 'joe';
    }

And then this is accessed on the template something like:

    <div ng-controller=""MyController"">
    {{greet(name)}}
    </div>

This style still works and is worth understanding, but they added a new syntax called ""controller-as"" notation which is generally preferred. The same thing above could be done as:

    function MyController() {
       this.greet = function (name) {
          return 'hello' + name;
       }
       this.name = 'joe';
    }

    <div ng-controller=""MyController as ctrl"">
       {{ctrl.greet(ctrl.name)}}
    </div>

So if the tutorials you find use $scope, it's not a problem per se; they'll contain information worth learning. But once you're feeling comfortable with that i'd recommend getting use to the controller-as style as well.Your knowledge of component architecture from react is applicable to angular components.  I advise new projects to fully embrace angular 1.5 component model.  Read [Todd Motto's stuff on 1.5 components](https://www.google.com/search?q=todd+motto+components) to get started.  Since you'll likely be inheriting an existing codebase, you should still know how $scope works.if you have React background you should start with angular 1.5 because of components. I think you should start learning angular 2"
2016-11-07 20:55:07;Debugging Typescript in the Browser and in a Node Server - Step By Step Instructions - Debug Server Using Webstorm, Early Preview of Debugging Node Using Also the Chrome Dev Tools;
2016-11-07 20:47:33;Hybrid Charts for Angular.js;
2016-11-07 18:22:31;Is New Tech, like Angular, the New Way to Recruit Developers?;
2016-11-15 23:42:00;GitHub - STUkh/generator-angular-webpack-es6: Yeoman generator for Angular projects using Webpack, Babel, SASS with some cool optional features.;
2016-11-15 18:21:55;Discover Companies in New York City that Love Angular and are Hiring :);
2016-11-15 17:26:12;Clarity Design System (including Angular 2 Components) is now open source;
2016-11-15 06:23:06;K-Angular-howler Audio player UI;
2016-11-14 19:51:24;Good code examples;"Hey, so my styleguide actually links to a fully component based Angular 1.5 application - let me know if you have any questions on anything: https://github.com/toddmotto/angular-1-5-components-app[deleted]I maintain a list here - https://github.com/jasanst/maintained-angularI know it's temping to take the short cut and look for good examples of how to do it in angular, but I beg you to delay that as long as you can.

Instead, start by reading about design patterns in general. Once you understand the major design patterns, most of them appear regularly or can be replicated in language and framework you learn in the future. If you go into angular with this knowledge, you'll spot bad structure much more easily and know how to fix it. Then it's just a matter of looking at the APIs to see how to achieve those design patterns. You may still end up looking for good examples, but you'll have a much better foundation to work from and you'll probably understand the examples more easily and have some theories to help you do the things that aren't spelled out.

There are many resources for design patterns, including wikipedia. The design pattern bible is this book: http://amzn.com/0201633612also, here's my jank shit and feedback is welcome:
https://github.com/crashspringfieldCommenting to come backHi crashspring,

Somewhat in the same boat. If you're looking for some more ""quality"" videos/online ed course I'd share checking out this link: https://www.reddit.com/r/webdev/comments/3yrfgd/microsoft_is_giving_away_6_month_free/, giving you a now 3 months subscription to pluralsight. Only would say this here bc I feel the angular courses on platform are pretty rock solid. In specific, being John Papa's course himself, on Angular JS: Clean Code. 

First post Pom
"
2016-11-22 15:55:05;Setting up a one-way, one-time binding for async data to a child component - is there a better way?;"I believe the problem here is you are trying to combine two incompatible workflows. What you are trying to create is a sort of 'watchOnResolved' functionality. The only way I have gotten this to work is in repeating structures. Stamp out the component after the promise has resolved. Whenever the collection/list changes, the components will (or might with track by) be destroyed and re-created.

Your other option is to try some sort of ngIf to toggle the data while loading, but that only saves you a single watcher (in your example). If you have more watchers, then a single Boolean value (compared to 5x watchers) should be very fast to recalculate and not impact your digest time."
2016-11-22 15:39:55;Angular 2 Service Layers: Redux, RxJs and Ngrx Store - When to Use a Store And Why ?;
2016-11-21 21:03:20;1.6.0-rc.1 has been released;"When you've spent a year building up a huge app, transition isn't always possible. Plus it works, it won't stop working, and  I'm incredibly productive with it. 

Still a winner for me :)Did anything ever happen with the new router? Seems like it's been forever since news. It seems like the upgrade path from 1 to 2 really dried up after all the rewrites and focus changes. The angular material one seems to have entirely halted my project's upgrade anyway.ng1 is good for my projects. So it is good.Gawd... Angular 2 represents a. Complete rewrite for 1.x users., It's good that it's still being developedNg1 is still actively developed? 1.6 already? "
2016-11-21 18:07:27;I recently wrote an article about performance on an Angular + Loopback app, and chose to contextualize this article by the specifics of the app and the business. Hope it can interest and help some of you !;
2016-11-21 18:00:09;Love Angular? Live in Charlotte? Find Your Next Career Move!;
2016-11-29 22:20:35;Using Rails 5 ActionCable with Angular;
2016-11-29 21:30:03;How to make a draggable angular bootstrap modal in TypeScript;modal in example doesnt open, nice code tho
2016-11-29 18:32:21;@angularclass/bootloader released! async script tag support for faster initial page loads #angular2;
2016-11-29 18:01:14;@angularclass/idle-preload: preload Async/Lazy routes for faster initial page load speeds #angular2;
2016-11-29 16:42:55;Question: some ng components and directives won't execute in a mixed SPA env;"I figured out the issue. I was accidentally loading / defining one of the modules through redundant bundling. 

Hope this helps out someone in the future :)
"
2016-12-06 18:06:14;Introducing Nrwl (Enterprise support for Angular 2 from core contributors);
2016-12-06 14:54:07;Video Walkthrough: Refactoring Angular Components to Use Require Mechanism;
2016-12-06 03:11:41;Need help using $http.jsonp;"Not sure why you would need a callback inside the query. Might want to try this: 
```
  $http({method: ""GET"", url: ""http://www.distance24.org/route.jsonp?  stops=""+city+""|""+country+""}).then(successCallback(res){}, errorCallBack(){res});  
```  
based of off: https://docs.angularjs.org/api/ng/service/$httpYou don't use JSON_CALLBACK anymore, you specify it like this:

```
$http.jsonp('some/trusted/url', {jsonpCallbackParam: 'callback'})
```

Try the following code:

    window.distance24Result = function(data){ alert(data.distance); }
    $http.jsonp(""http://www.distance24.org/route.jsonp?stops=""+city+""|""+country, { 
         jsonpCallbackParam: 'distance24Result' 
    });


See this for further information: https://docs.angularjs.org/api/ng/service/$http#jsonp

NOTE: Also as the documentation states you need to whitelist your URL before it works using: 
`$sce.trustAsResourceUrl(""http://www.distance24.org/route.jsonp?stops=""+city+""|""+country)`"
2016-12-06 00:49:08;Debugging Protractor with WebStorm 2016.3;"Breakpoints for web driver promises only make sense in then blocks. As you may know, all the commands are scheduled up front by your code, then executed by web driver after scheduling everything.

But you can add a then block to any scheduled command and put your break point there.

Alternatively you can use browser.pause() which will insert a ""break point"" into the schedule which will allow you to use the browser mid test."
2016-12-05 18:06:09;ag-Grid now support AOT and Angular 2 Components;
2016-12-13 20:17:54;How To Debug RxJs - A Simple Way For Debugging Rxjs Observables;
2016-12-13 15:21:45;Replacing $scope.$watch with Lifecycle Hooks;
2016-12-13 09:59:03;Rebuilding Tesla's battery calculator in Angular 2 reactive forms. Full tutorial, AoT compile + deploy;"Really fun demo to highlight a lot of important concepts. Nicely done!One of your best posts Todd.

Thanks !I really think it would serve the Angular/Javascript community by showing an example like this with Angular 2 and ES5 - no typescript, no babel, nothing fancy. I'm honestly not interested in Angular 2 examples if they are all in Typescript/ES6/Classes. It's seriously turning off a lot of people to Angular 2.

The hype was that Angular 2 would work without Typescript, but I have yet to see any articles like this helping to bridge people from ES5 to Angular 2. If someone wants to use Typescript, that's fine, but it shouldn't feel like it's being forced on us either.
"
2016-12-13 09:00:42;Angular 4 Beta Expected This Week!;"Is this a joke?I hereby request that the following versions shall not be called 4, 5 and 6 but 4, 8 and 16!

(Oh, and I 'ld like to call bullshit on that ""just add -angularjs"" comment -.-)Oh they were serious? I understand all those points to a degree, except that they want to do a major release every 6 months. Can someone explain why this is a good idea? I can think of a few bad reasons - developer fatigue being one, but I'm sure they're a lot smarter than me, so genuinely ... why?  I was expecting a Windows 8 to 10 joke somewhere.  What a bummer."
2016-12-13 03:12:15;Angular 2 Advanced Topics;
2016-12-20 17:33:36;Typescript 2 Non Nullable Types - Avoiding null and undefined Bugs;
2016-12-20 16:43:52;Angular 2 - Structural Directives;
2016-12-20 16:05:30;Replacing Angular's Deep Watches with the $doCheck Lifecycle Hook;Is there any actual measurable performance improvement, or is this just making people feel good about themselves by avoiding $scope.$watch in a really strange way?Liking these articles. Would maybe add a note here that $doCheck is called every $digest - so might not be as performant if you're doing heavy stuff. In Angular 2 it's much more performant due to the different change detection strategies.
2016-12-20 13:41:47;Directive: Defining a template from link?;"What is your goal as far as top-level markup goes?

For example:
    <customElement nirtz-repeater=""v in [ 1, 2, 3, 4]"">Example {{ v }}</customElement>
"
2016-12-20 13:09:24;How to Write Async Await Without Try-Catch Blocks in Javascript;"Neat. I also like the way errors are handled in Go.I wrote about this very topic a few months ago. Glad to hear Im not the only one thinking about it.

http://chrisgriffing.com/rants/2016/06/25/prefer-return-objects-instead-exceptions/

The major difference in approaches is that mine is meant to handle non-async/await code too. (code that may still throw an exception, though). Not to say one is better than the other, just different."
2016-12-27 20:44:15;Ask AngularJS - I need to build an offline-capable web app, but it needs to work on iPad;"You can't without Cordova, Phonegap, or Electron. 

Also.... Ionic.So do you want it to run on IOS as an app installed to the device? Or do you want it to run on IOS inside a web browser like safari/chrome? And when you're saying it needs to work on firefox/chrome/edge, do you mean running those on a desktop machine only? Or does it need to run on those browsers on tablets as well? What is your server going to be built in for handling the logins and stuff? I think that since you're familiar with AngularJS, something like ionic would be the best bet for the mobile side (whether it be an app or running in a web browser on mobile). The other tools like phonegap/cordova/electron are all great for building apps that span across desktops/tablets/phones. But what is great about ionic is being able to work with all the components that the framework gives you out of the box.Ionic for iPhone/iPad/Android and Electron for Mac/WindowsIt's totally doable (but not enjoyable) with application cache to keep yout js/css/html/json in cache, use indexedbb and localstorage to keep your data

Also indexedb can hold a lot of data without problems, but I would probably go to the pouchdb road to keep it easier. Raw indexed db api is worse than the appcache 


also you can use meta tag to make it run in full screen Try Cordova or Phonegap (apple fork of Cordova) I believe. You could try Electron. You need service workers for better performance (with multithreading) or am i wrong?

If I were you, I would just make some ajax calls every n seconds to retrieve and push datas. As long as there's no internet, you will always be able to rely on localStorage. Actually, I already did that, it was working fine. I already used service workers too, but I was in need of very high performances (that was some webGL game actually). But my understanding of offline-capable web app (even I have already done one) is pretty low. So I'm pretty much interested in why you would choose service workers (except for better performances)."
2016-12-27 14:50:16;"Having fun with Angular: Extending *ngFor to support ""for…in""";
2016-12-27 13:58:25;Reactivity in Frontend JavaScript Frameworks;Brilliant.
2016-12-27 11:29:36;Angular 2 AOT (Ahead Of Time) compilation example with the Angular CLI Webpack plugin;
2016-12-27 07:49:50;label-class Angular directive;"   Do you have a compelling reason to not just use the built-in ng-class angular directive?
 
    <label ng-class='{""is-enabled"": this.enabled, ""is-checked"": this.example}'>
      <input ng-model=""this.example"" ng-enabled=""this.enabled"" type=""checkbox"">
    </label>"
2017-01-03 15:46:02;TinyMCE Validating length AngularJs;
2017-01-03 14:20:05;What skills should I test while hiring an AngularJS developer?;"What level are you looking to hire? When we look for junior devs, we like to get a sense that they can make their way around an angular environment.

Usually we ask questions like ""What is the purpose of a service? When might you use one?""

""What is the use of a directive. Can you list some built in directives you might use? (Ng-repeat, ng-model, etc...)""

""What is the difference between an component and a directive? (If you're team is using angular 1.5 and above)""

PM me if you want some more questions you could potentially ask.

While I like Todd mottos interview questions, those could definitely be overkill if you're not looking for a more senior positionMight be a bit of an overkill but todd motto released a fundamental list of interview questions. Useful for the theoretical part:
[modern angular interview questions](https://toddmotto.com/modern-angular-interview-questions)Depends on the level of course. I typically cover these topics:

* Services and what makes them ""special"" in angular 
* If they understand some ways to structure larger apps, instead of just one gigantic app.js file
* Plain Javascript skills
* I usually ask what directives are. These often leads to an explanation of the built-in directives, so I follow it up with questions about how and why to make custom directives. I like using directives in 1.2-1.3 for code organization and reusability. 
* If they've made it this far, I ask about $q and promises. Bonus question involves the use of $q.all for waiting on multiple async calls
* Routing - how it works in angular, bonus points if they know about state routing
* Dependency Injection - how do you inject services, for example
* Modules - how and why do you make modules
* Ask about related tools - grunt/gulp, bower/npm, etc. I'd have them build me something simple - design it so that the answer can be built with either vanilla js or angular. Super easy with angular but kinda Hardish with regular js. This will give you a good gauge of how much angular they know as well as their problem solving skills even though they may not necessarily know angular. We test for basic JavaScript first before diving into Angular.   We still on Angular 1.x though so not sure how useful these are going forward.

We have a pretty simple test that shakes out scoping, and shows if they can recognize and explain an iife functions.   Ask a few questions around how f'd up dates are in JavaScript and what can be done about it.

When we move on to Angular, we try a question that includes a service that returns a promise.   It's good to see if they understand $q.

A couple of other questions:. Two way binding: what is it?  Why can it be useful?  How can it cause problems?  

If they are familiar with both, you might ask Why do you think Angular 2 is so different from Angular 1.x?"
2017-01-03 07:00:16;The Growing Case For Angular JS For The Mobile Web;"Angular js sucks for the mobile web. Angular 2 maybe. 

This is just a shitty attempt at a blog article though, so Meh. LOL.
"
2017-01-03 05:43:53;Minimalistic search app for Frequently Asked Questions with Markdown support built on Elasticsearch using Nodejs, Angularjs and Bootstrap.;
2017-01-02 17:03:37;My journey from Angular1 to Angular2;"Linking to twitter that links to medium should be considered blog spam. https://medium.com/@amcdnl/the-journey-to-angular2-from-angular1-ee3aeb628fe9Please delete and re-add this submission with a link to the medium site, rather than Twitter.Wait, people actually finished the Oregon trail and managed to get a screenshot from it? I thought you were always meant to die of dysenterie to show you that sometimes you just can't win?

Also i thought it would go into more detail. Now it seems ""i did x and i got it working"". Sure it must've been amazing but it is hardly of any use to most of us.

And the one reason i'm still holding back is that most modules still need to be ported, most documentation needs to be improved and there aren't a lot of things on stackoverflow or examples to copy from that feature various post-hello-world situations. I know that if i would start new projects or port existing project, i would run into massive issues that are either due to lack of knowledge of the platform or bugs/missing features within angular 2. My company was on the decision to go port some jQuery projects to Angular and decided to still stick with Angular 1. Now of course we will already prepare for some stuff like using components for pretty much everything, but that will still take some time to convince them once we feel ready for it. Its a matter of ""easy, well backed, proven and well tested framework"" for something that is new, different and undiscovered territory."
2017-01-10 20:10:12;Make an Angular Firebase Chat App in this Written/Video Tutorial;
2017-01-10 17:33:58;Angular 2 — Clean Up your Form Template;
2017-01-10 09:05:12;Advice on development flow for building standalone components;You could create a gallery html file inside your common repo that displays all your components in order.
2017-01-09 17:06:48;Unit Testing Angular Components with $componentController;"This is actually documented on angular's doc. 

Though it doesn't mention of why $onInit and $onChanges aren't fire. 

This post mentions it. 

And because of those boilerplate steps i tend to have failing test when i forget to include them. 

There must be a better way to test components. 

Maybe still resort to $compile element. "
2017-01-09 12:51:24;Nouvel article bien fat originaire de #Sitepoint -> Traduction: Maitriser $watch dans #AngularJS;
2017-01-17 22:52:59;Progressive Web Apps with Angular 2+;
2017-01-17 19:38:40;Angular initial render speed and ‘above the fold’ content;
2017-01-17 14:47:43;Testing Components with $onChanges Using angular-stub-changes;
2017-01-17 12:35:10;Learn and Understand AngularJS;
2017-01-17 12:08:38;AngularJS Custom Directives with Dan Wahlin;
2017-01-24 20:03:15;How to setup AngularJs in ASP.NET MVC 5;
2017-01-24 17:33:46;Should I just stick with PHP to query my DB, or should I use a web framework like Flask or Django?;
2017-01-24 16:48:01;Angular vs React vs Vue comparison - the DEAL BREAKER;"This article just feels very lazy. Comparing on ""Scalability"" while offering no explanation for what that actually means in a frontend framework context. Ending with lazy conclusions like ""if you are a company, angular would be a way to go."". I'd go on, but I see no reason to put more effort into a review than the poster put into writing the article."
2017-01-24 15:04:03;I curated some of the best AngularJS templates for 2017.;I find that using a premade template can (in some cases) speed up development a lot, especially if you're not a designer. If you're not into paying for themes though, I also wrote a post a while ago on some [great free AngularJS themes](http://themesforangular.com/10-free-angularjs-templates/).
2017-01-24 14:13:33;Mastering Angular dependency injection with @Inject, @Injectable, tokens and providers;
2017-01-31 16:20:00;Implementing Angular's Dependency Injection in React. Understanding Element Injectors.;
2017-01-31 13:45:13;Demo of ag-Grid;"For those wanting a non-commerical thing, there is ui-grid which has most of the features of jquery datatables.

http://ui-grid.info/    (previously called ng-grid)I prefer w2ui. http://w2ui.com/web/demos/#!grid/grid-1"
2017-01-31 12:22:49;Angular CSS Classes;
2017-01-31 08:33:37;Enhancing AngularJS Logging using Decorators;
2017-01-31 07:15:12;Is there a search app on angular starter project;"I like this one so far:

https://github.com/preboot/angular2-webpack

uses typescript, sets up testing, etc."
2017-02-07 17:54:22;Angular ui-grid one click dropdown with ui-select;"Have you looked at this?

http://brianhann.com/ui-grid-and-dropdowns/

I had a similar issue, and it needed construction of a cell template."
2017-02-07 17:10:37;50 AngularJS Interview Questions to Make You Better Prepared;
2017-02-07 13:37:18;Curated List of Angular 2+ Components & Libraries;
2017-02-07 13:14:42;10 Angular 2 Modules and Tools you need to learn in 2017;I'm surprised the Angular CLI isn't on this list
2017-02-07 11:58:08;PrimeNG 2.0 Released with 70+ Open Source UI Components for Angular;
2017-02-14 21:18:06;How do I search my backend via angular for a string?;"Very broad question.  High level view:

You will set up an endpoint on your backend with whatever language/framework you're using that would expect a query term.  

You'll send a `get` request with the term as a payload which the backend will sanitize and perform the query, and return a result, usually in JSON.

Give it a go and the community can be of more help once some code is written.If you want to handle it in the browser, use [filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter).

    let filteredUsers = $scope.users.filter((a) => { return a.name === 'Andrew'; });

If you want the backend to deal with it, you'll need to edit your service. Don't really know how your service is set up currently, though.You have a lot to learn my friend. Could you give more information on how UserService looks like?deleted  ^^^^^^^^^^^^^^^^0.0495  [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/46777)"
2017-02-14 21:17:02;Angular store SEO;
2017-02-14 20:58:27;Ionic 2 -Building a Todo list application;
2017-02-14 20:08:28;NgImport: Import $http, $filter, etc. using regular ES6 imports!;This looks really cool, and might be very useful in helping us transition from AngularJS to Angular, but I'm worried it doesn't play *that* well with the Angular ecosystem. Am I right to be worried about this?
2017-02-14 16:44:03;Learn Master Angular 2 Programming By Creating Professional Applications - Supports Final Version;
2017-02-21 23:48:01;How to learn and apply MEAN stack for authentication in a simple app?;"There's nothing quick or simple about authentication.  First you should decide what kind of auth you want to use.  Oauth for security or basic auth for quick and dirty, or token based auth for an in between.   

Also, you don't HAVE to use mongodb to do authentication.  It sounds like you've got a lot of things you're trying to do at once.  I would stick with just doing the angular part and maybe using an $httpBackend to mock your service from the front end.  Then once you have a better understanding of what exactly you need to accomplish, revisit technologies>Also, how come I should use MEAN stack and not $http?

MEAN stack requires $http. MongoDB is on the serverside. Your client needs to talk to the server. That's why you use an HTTP call. The thing that handles the HTTP request is Express, which is a module for NodeJS. Mongoose is another module for NodeJS, and that communicates with MongoDB.

I strongly suggest you do more research on this subject before trying to implement it, because you don't seem to grasp the fundamentals.If you want to simplify your auth flow and you don't require any heavy database logic, you can use firebase to handle storage, a real time database, and google oauth. If you dont require any backend logic, you can omit nodejs and access firebase directly from the angular frontend. "
2017-02-21 23:05:05;The Outer Zone - Angular 1.x RPG;
2017-02-21 20:16:17;Automatic Dead CSS removal in Angular;[removed]
2017-02-21 17:40:37;Do you use Batarang?;"A resounding YES!  I use batarang whenever I develop in AngularJS. The scope inspector is *invaluable* for debugging the tree of components and scopes.

See here for what I'm talking about:
https://youtu.be/2D5_wE6nGFo

[deleted]For Chrome yes! It's really handy to be able to inspect the scope at runtime.No. Because last time I check they don't support Firefox. I use this: https://gist.github.com/DTFagus/3966db108a578f2eb00ddeleted  ^^^^^^^^^^^^^^^^0.2926  [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/19761)People might call me crazy, but after Batarang stopped working for a while, I got in the habit of selecting an element in Chrome inspector, then using `angular.element($0).scope()` in the console.I usually used to use it to look at scope in the elements panel or to find a watch behaving badly.

If you get into Angular2, Augur is the nice extension for that.I did until work blocked itI tried it and found it clunky and sometimes not working.  Firebug (and now FF Dev Edition) gives me a nice view of the DOM.  I typically add a line like:

    window.somescope=$scope; 

in the controller somewhere."
2017-02-21 14:02:42;Ionic 2 - Firebase Authentication II;
2017-02-28 21:01:51;How to deal with the deprecation of replace: true?;https://github.com/angular/angular.js/commit/eec6394a342fb92fba5270eee11c83f1d895e9fb#commitcomment-8124407
2017-02-28 20:28:25;Angular 2 app for converting NFA, epsilon-NFA to DFA;
2017-02-28 09:17:48;Does anyone miss ng-messages directive in ng2 similar to these from ng1? I created something similar. Enjoy!;
2017-02-27 21:54:56;Angular 1.5: problems passing a function that returns a value into a component binding;"With not knowing the parameters def I can't fully answer 100%.  However, if you are defining with & this won't work because the method gets wrapped.  You want to use < so the function gets passed down unchanged with one-way bindingEnsure getData returns a promise? Wrote a quick one. See if that's the same as yours: https://jsfiddle.net/q6z2agqf/3/
edit: changed the title of the jsfiddleAppreciate it everyone.Oh! I see your problem now lolz.

```$ctrl.dataCallback```This is the shit I hate about angular.  Why does it need to be wrapped in this json bullshit?  They literally neutered away the single best feature of js... the 1st class functions and extensibility, by wrapping it in this disgusting bullshit.

Why can't I pass in a simple function without this gross json param syntax?"
2017-02-27 16:50:11;Managing State in Angular Apps with ngrx/store and ngrx/effects (Part 2);
2017-03-07 23:37:46;Customize feed of articles (based on preferences) on front end (angularjs ng-ifs) or on backend?;"I would find a solution that does the filtering on the BE. It will cut down on the amount of data you send to the FE and the amount of data the FE needs to process.

Keep the FE light and let the BE do the hard work."
2017-03-07 20:41:11;An Introduction to Angular CLI Part 3 - Sort and filter data with custom pipes;
2017-03-07 20:06:48;AngularJs on-load not being called;"My guess is that when you leave and then return, the images are now cached by the browser, so the onload ends up happening pretty much immediately, and importantly it happens before your $timeout goes off to hook up the onload events.

I think my approach to this would be to make an attribute directive that sets up the onload listeners, then notifies a service. That service waits until all the images have loaded and then fires an event, and then your controller can listen for that event. 

Here's a rough approximation of the code. Template:

    <img ng-repeat=""urls in $ctrl.imageUrls"" ng-src=""{{url}}"" coordinated-load></img>

Directive:

    .directive('coordinatedLoad', function (imageCoordinator) {
        const directive = {
            restrict: 'A',
            link: function(scope, element) {
                imageCoordinator.add(element);
                element.on('load', function () {
                    imageCoordinator.remove(element);
                });
            }
        }

        return directive;
    });

Service:

    .factory('imageCoordinator', function ($rootScope) {
        const images = [];

        const service = {
            add: function (element) {
                images.push(element);
            },
            remove: function (element) {
                const index = images.indexOf(element);
                if (index > -1) {
                    images.splice(index, 1);
                    if (images.length === 0) {
                        $rootScope.$broadcast('allImagesLoaded');
                    }
                }
            }
        }

        return service;
    });


Controller:

    function Controller($scope) {
        $scope.on('allImagesLoaded', () => this.allImagesLoaded());
    }
What version of angular? I would highly, *highly*, ***highly*** recommend using classes for your controllers.

At any rate, everything looks like it's in place, though I've not worked with ui-router, so I don't know how it knows to instantiate your controller, nor how to tie your controller to a view.

Do other controllers you've coded in this way function correctly? Are there actually images to load?"
2017-03-07 18:18:12;md-autocomplete custom validation;"So in case anyone wants to do this here's what I came up with:

md-floating-label is required to make validation work for some reason

Setup your autocomplete and the set md-require-match=""true""

<div ng-messages=""myForm.myAutoComplete.$error ng-if=myForm.myAutoComplete.$dirty && myAutoCompleteSearchString.length > 0"">
<div ng-message=""md-require-match"">
Please make a selection!
</div>
</div>"
2017-03-07 17:13:35;Q: Add a component-2 to the DOM using component-1;"Did you add the component to the app?  

yourAppName.component('componentName', ComponentName);"
2017-03-14 20:36:24;Introduction to Angular CLI Part 4 - Using Third Party Libraries and adding interactivity;
2017-03-14 17:38:39;Help creating dashboard;"I don't like prepackaged ""angular"" themes. They have code their way, usually ignoring Angular best practices.

I tend to get an HTML template I like, strip out the JavaScript, and build from the ground up. It saves me a headache of customizing stuff.

Also, a lot of CSS frameworks make it fairly easy to come up with a simple template with limited knowledge. Bootstrap, materialize, foundation, etc. 

One thing preprogrammed templates do well is show a dashboard, usually with cool information and graphs that could be cool with your app... The only problem is you need to program them yourself anyways. May as well strip it out and worry about the dashboard portion when the app is complete and you know which stats you are going to grab."
2017-03-14 15:07:40;"Does anyone know a plugin similar to YouTube's ""Add To"" Feature?";Literally all it is doing is adding something to an array and saving it. No plugin needed for that. 
2017-03-14 14:59:02;Excellent read - Webpack Tutorial: Using ngTools/webpack;
2017-03-13 20:25:07;Angular Ngrx Crash Course Part 1: Ngrx Store - Learn It By Understanding The Original Facebook Counter Bug;
2017-03-21 18:31:28;Existing site with lots of non-interactive pages. Want to add angular 2 to some of them without becoming an SPA. Tips?;"What exactly are you trying to upgrade to Angular?  Navigation?  Some form?  Ads?  If you can give us more details, we may be able to give a better answer.Take what I say with a grain of salt because I'm by no means an angular dev, but I worked on a PHP project recently that had a couple screens that needed a front end framework and I had a lot of luck with Vue.js.  I could write the rest of the frontend in regular html (I assume angular templates like React, where your html is rendered inside a js object) which helped the less technical members of my team write templates and I only plugged in the vue.js in the spots it was needed.  You just define a Vue instance for that page and include the appropriate markup where it's needed.  Vue.js also let me keep all my routing logic in one place which was nice.

Again, I'm not an Angular dev and I'm certainly not a front-end expert, but your problem set sounds similar to mine and Vue.js worked out really nicely for me.

Sorry in advance for being a blasphemer and suggesting a different framework in the angular sub.My advice would be to look elsewhere. I'm a big fan of Anglular 2 but if you just need a bit of functionality, that isn't where it shines and you will wrestle with it and the other new technologies you have to grok to use it. Angular 2 is really designed to build large web applications. If you just need it to add a few web forms, I'd still suggest using jQuery. This doesn't really sound like a use case (from the limited info given) for a SPA.I've built something similar at my current company, but with the original AngularJS, so not sure how that would apply to Angular2.

It's based on an ancestral Java server-side rendering system. We are building a new section that's going to be entirely managed by Angular + Rest API.

Basically I created two apps; myApp1 handles the normal site, gets a couple Controllers here and there for stuff I'm switching bit by bit to Angular. myApp2 handles the new section, with ui-router and a bunch of services in a pseudo-SPA (ui-router kinds of blurs the line of what is or isn't an SPA).

The pre-rendered pages still exist, but Angular takes over once the page reach the browser. In the new section, it basically creates a SPA section inside a pre-generated template.

You can totally add touches of Angular here and there, bit by bit, rather than converting everything to Angular suddenly.

(anddon'tusejqueryitsevil)"
2017-03-21 18:17:52;I'm hiring a developer for an upcoming project to move from Wordpress to a custom built Angular based web app. Is this a good idea?;"deleted  ^^^^^^^^^^^^^^^^0.3381  [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/25279)Another way to look at it would be, Wordpress 3.7 supports Rest API out of the book so you just have to create frontend using AngularJS and Wordpress can handle the rest, so in a way you can use your current Wordpress instance as well.I'm actually a big fan of Wordpress, developing website and apps on it since something like 10 years. And, since 2 years, I mostly do Wordpress + Angular 1. Wordpress is a crazy good solution to make an admin area in minutes (who cares about recreating it if it fills your needs). On the front, you can do whatever you want, so AFAIK the sky is the limit.

Just because not a lot of people know how to use Wordpress, I guess I'll explain a bit. Don't use a ton of plugin, something like 5 or 6, max 10, is normally enough (basically ACF, Polylang for multilingual sites, Rest API for a MVW and some for other very specific needs). If you do a Wordpress with tons of plugins, it's really vulnerable and messed up to maintain. But it's the same in other technologies, you will not need WP plugins but gems, modules, etc... And the same logic applies.I think it really depends on your use case. I just took GetSyrup.com OFF of React/Meteor and moved it to Webflow which for my use case was just so much more simpliar to update and manage. It also meant less time fixing bugs with the framework and compiling code and fixing errors. So you really need to look at a couple things. Scaling and features being one. If you have a very specific set of features, go with Wordpress. If you plan on adding tons of new features over the course of the App's lifetime, I would go with a framework like Node + Angular. If you're not technical and you need a way to manage users and content you're either going to need to build some kind of admin panel which means cost to develop or you're better off going with Wordpress which of course has one built in. 

This is probably not enough to make a decision and I'd be MORE than happy to chat over Skype about your specific site and make a recommendation. Feel free to shoot me an email. Justin@jmitch.comActually - depending on the amount of existing content still needed, a decent developer can merge the two together. Without more details - its a little hard to give you the best advice"
2017-03-21 17:48:29;FlowChat - A live updating, threaded chat platform with range voting, written in angular.;
2017-03-21 14:11:40;Angular friendly CMS?;"Using the Wordpress RestAPI you can use any of those frameworks. I can't remember the exact museum - but a really famous one made their site with Angular and WPrestJust build out some microservices using whatever language you're comfortable in, expose the endpoints, and go to town.

There are API-based CMS's like [Prismic](https://prismic.io/) if you want somebody else to do the heavy lifting.[Contentful](http://contentful.com)KeystoneJS (http://keystonejs.com) is a React friendly CMS. You can get it to play very nicely with WP, as mentioned elsewhere in this thread.Done a few projects with umbraco + Angular. They seem to work well together.I've been using graph.cool to create a blog and have been really enjoying it. There is also graph cms which is in beta. Probably not the best choice for client work as graph cms is in beta and graph.cool isn't a cms. But for a simple personal project or more of a app it might be an option to think about.I recommend that Wordpress is the best CMS for modern front end developmenthttps://github.com/colmena/colmena-cms"
2017-03-21 12:31:15;AngularJS: single page app with query string and form?;"There are a few things I'm going to mention that will help you with the specific task you're trying to achieve as well as a few things that won't. 

Firstly, when it comes to filtering, Angular is very good at it using the .filter method. What you would want to is put the dropdown options in their own array and use either ng-options or ng-repeat. This way, you have an easy reference to the model for filtering. 

Secondly, I'm an advocate for not mixing jQuery with Angular, especially when it comes to grabbing DOM elements and their data. 

I was going to write more, but I'm on mobile right now. I hope this puts you in the right direction and if you have any more questions, feel free to PM me.[Hopefully this helps](http://www.codelord.net/2015/11/25/query-parameters-in-ui-router-without-needless-reloading-with-example-project/) 

I used an approach similar to this in a project.  When the user refreshes the filter you can use $state.go or $state.transitionTo and update the parameters in the call.  I'm on mobile now, but if you still need help tomorrow I can send you an example.So as a devil's advocate thought... if you are using django are you using django-rest if yes have you considered implementing JWT? This would allow you to hold some of your core session information in a certified Base64 token as part of the headers instead of passing it in the clear through the uri. then you just persist the token in the browser storage"
2017-03-28 08:52:41;Help with error;"In your app.js, try

    controller: ""LoginController""
Also, just as a side note. I would register your LoginController onto the 'test' module. Creating a module and controller with the same name is semantically confusing. You wouldn't have to add LoginController as a dependency for 'test' either if the controller is registered on the module already"
2017-03-28 04:40:37;AngularJS Get a Button! Angular 4.0.0 is Now Available.;Get a button, indeed! Well said. Angular v4.0 invisible-makeover is out! :)
2017-03-28 04:30:07;Upgrade project from Angular 2.0 to Angular 4.0;Why does the page have a permanent gray overlay? Impossible to read anything.
2017-03-27 13:15:56;angularjs retrieve imgur ?;"For retrieving data you'll use the $http service. I've made a plunk of it here: http://plnkr.co/edit/fmI3KMdINl3jHKCc2LH6 . The part where it gets the data is this:

    $http.get('https://api.imgur.com/3/gallery/hot/viral/0.json')
      .then(result => {
        this.data = result.data.data;
      }); "
2017-03-27 11:15:17;Angular 4+ enterprise-grade project generator;"I don't want to sound like Mister Negativity here, but ""Angular 4+ enterprise-grade project generator"" sounds like everything that's wrong with frontend development today, to me.To hell with the negativity in the comments, thanks for sharing OP!

I can definitely see how this can be useful to people. Them purists that don't like it, please go ahead and not use it, but stop bitching about other peoples projects. It's not that hard. "
2017-04-04 19:35:35;NgIf Else syntax in Angular demystified;Does every single blog post from here on out really need to talk about the versioning thing? Also it's a little weird how Angular 2 is mentioned repeatedly just to say lol jk it's only in v4
2017-04-04 17:29:03;Why are Android/IOS test failing for Angular 2/4?;"I think it's because of the old webkit engine that is built in the OS. But webview is constantly updated, so I think this goes to those without updates. iOS is yet another story, Safari webkit od always lacking some features other browsers support.

I would go and try it for myself, even emulator would give you good overview if something is not going to work.

If so, just through a polyfill for it and you are good to go ;)"
2017-04-04 16:51:45;Good tutorials for using Redux with Angular(>=2);Pluralsight 
2017-04-04 15:06:25;AngularJS v2.x directives for AnyChart JavaScript Charts;"Nice, but considering how hard the Angular team has pressed to drop the ""JS"" and also asked people not to version their packages with ""2"" and instead use ""ng"" it's weird this change wasn't made before release."
2017-04-04 14:51:30;Angular 2 input binding;Do you need two-way binding? If not, you can display the property in your component's template with {{ product.myProperty }}. 
2017-04-11 23:10:15;🎩 Automagically Unsubscribe in Angular;"Nice, I did something similar when I was starting with Subscriptions too.

https://github.com/cmgriffing/angular2-subscriber-component-decorators"
2017-04-11 13:34:14;Trying to create a library in Angular? Try angular-librarian!;yo dawg
2017-04-11 09:51:17;What do you use for obfuscating your code?;"Frontend Javascript obfuscation doesn't make much sense. You should rather look at uglifiers and see them as a way to improve download and parsing times.You need to read up on Gulp or Grunt.

There are modules/packages people have written to handle minification/uglify/bundling/cache busting and so on. Find a good guide on either Gulp or Grunt. This isn't an Angular problem, this is a javascript problem. DevOps/CI solves it.Surely Uglify kind of does that? As well as improving the payload size down and making it faster. https://stackoverflow.com/questions/194397/how-can-i-obfuscate-protect-javascript

Most of the time, people use an library to uglify their code (remove whitespace, rename variables, etc) but generally speaking that won't give you that much obfuscation. Think of it like as a tool to shrink the file size more than an obfuscation tool. 

Hooking the library into a CI/CD pipeline is pretty simple. I'm assuming that you are using AngularJS 1.x and that you've built your own pipeline. 

If you are using webpack there is built in uglification, if you are using Gulp/Grunt look for a related uglify plug-in."
2017-04-10 16:31:25;[Question]How to hide objects based on property values using checkbox?;You could pass a function to ngshow on the li
2017-04-10 12:29:34;AngularJS in 2 weeks. Core competencies and the most valuable skills?;"Hi, I learned angularjs basics in 3 weeks and I am able to deploy my first angular web app. I read a PDF called angularjs in 60 minutes and it really helped me. I can help if you need anything. I knew JavaScript at an intermediate level and I could do this.Unravelling AngularJS (supports up to version 1.5) is like an $8 eBook. You can go through it in 2 weeks.  I found bang for the buck, it was quite good.Maybe a bit late, but I thought I'd still reply.

I'm also learning Angular at the moment. Have a look at this [quickstart guide](https://angular.io/docs/ts/latest/quickstart.html) and this [tutorial](https://angular.io/docs/ts/latest/tutorial/). I found these really helpful to get started.

As for tools, I'm using the [Angular CLI](https://github.com/angular/angular-cli) and [VS Code](https://code.visualstudio.com/) with the following extensions: [Angular Language Service](https://marketplace.visualstudio.com/items?itemName=Angular.ng-template), [Angular v4 TypeScript Snippets](https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2), [angular-cli](https://marketplace.visualstudio.com/items?itemName=pkosta2006.angular-cli)."
2017-04-18 18:18:52;Implementing Event Modifiers in Angular;
2017-04-18 18:09:32;NodeJs+Ionic2+Socket.Io newbie question.;"Checkout [RxJs-Socket.io](http://npmjs.com/package/rxjs-socket.io) and its examples; It has a Angular2 example that can help you"
2017-04-18 15:52:55;Learn how to use dynamic Styles and powerful Animations to create beautiful Angular Apps;This looks like spam selling a course, posing as journalism on Medium, posing as a post on Reddit.
2017-04-18 14:07:37;Help me write an Angular 4 Book;Don't do it! Write an Angular book instead! :)
2017-04-17 15:43:50;Ionic 2 - Payment processing with Stripe;
2017-04-25 18:54:06;Unit Test Your ngrx/effects in Angular;
2017-04-25 11:42:00;Understanding AngularJS injector internals;
2017-04-25 09:59:45;Does anyone know where the Library Authoring Guide can be found, that was mentioned at ng-conf and in the weekly notes, or when it will be available ?;"Are you by chance referring to the ""Angular Package Format"" for library authors? https://docs.google.com/document/d/1CZC2rcpxffTDfRDs6p1cfbmKNLA6x5O-NtkJglDaBVs/edit#heading=h.k0mh3o8u5hx

Here is a link to all of the public documents the Angular core team publishes: https://drive.google.com/drive/folders/0BxgtL8yFJbacQmpCc1NMV3d5dnMShameless plug for my NPM package: https://www.npmjs.com/package/angular-librarianI'm using [angular-library-starter](https://github.com/robisim74/angular-library-starter) for npm packages. It's quite easy setup and outputs well defined npm dist package."
2017-04-25 09:28:55;The Angular Attack recently ended. Have a look at some of the entries!;lots of great inspiration here, thanks for posting!
2017-04-25 07:20:21;Reusing ngrx/effects in Angular (communicating between reducers) – Oren Farhi;
2017-05-02 12:19:17;Angularjs training in Bangalore;
2017-05-02 10:24:39;Custom text input component - thank you for feedback!;This is a great article, clearly defining a really good approach to creating a generic Angular component for text boxes.  As long as it stays this simple then there isn't an issue.  I have personally worked with some of these 're-useable' components that have caused nothing but stress due to them trying to do too much.
2017-05-01 15:56:45;Question about $http and binding data sources to objects that rely on $http promises;What version of angular are you using? And can you please put some more words on what you're trying to achieve? I might be able to help, but some more info will give better insight into what you need to get over the hump! :) 
2017-05-01 15:41:26;Ionic 2 - Google Auth with Firebase;
2017-05-01 13:54:07;LogRocket releases support for Angular and ngrx;
2017-05-09 22:29:09;Angular 4 up-and-running;its this somehow masked advertisement to nanobox ? 
2017-05-09 14:43:39;Understanding Custom Directives in AngularJS;This is really terrible. This information has been out for a long time. Plus, Facebook. 
2017-05-09 12:41:50;AngularJS not working in Flask template;"$scope.Patients might be missing the closing semicolon. A few things pop up in my mind.

First check if angular reports any error - open the chrome developer tools and look at the console tab. Is there any red error? If so, can you post a Screenshot of that?

Next up you are mixing jinja template and angular template (in the selectbox). Please make sure you fix that part and report again for further assistence.

"
2017-05-09 08:06:05;Zero dependency state management with Angular Model Pattern, immutable state, vanilla functions;Such a great explanation of models. Very helpful. Thanks man!
2017-05-08 20:21:49;Deep Dive Into The RxJs switchMap Operator - How Does it Work ? A Less Well-Known Use Case (selector functions);"Interesting, I didn't know about this operator. Though, the example this page gives seems rather poor, as you could accomplish the same thing with other operators with less code (and in my opinion more readable). For example taking the `[course, lesson]` case:

    const course$ = simulateHttp({id:1, description: 'Angular For Beginners'}, 1000);
    
    const httpResult$ = Observable.forkJoin([course$, course$.flatMap(
        courses => simulateHttp([], 2000)]);
    
    httpResult$.subscribe(
        console.log,
        console.error,
        () => console.log('completed httpResult$')
    );

There's a better example [here](https://www.learnrxjs.io/recipes/smartcounter.html), from which it becomes much more clear that `.switchMap()` is best used for cases where you want to do something repeatedly until the next value arrives, similar to an interruptible animation. Neat!For comparison, this is httpResult$ using switchMap and a selector function:

    const httpResult$ = course$.switchMap(courses => simulateHttp([], 2000),   
        (courses, lessons) => [courses, lessons] );
"
2017-05-16 19:22:57;Woodlot - An all-in-one JSON logging utility for NodeJS.;
2017-05-16 14:32:48;[Help] Inserting database entries into a paragraph field;"The most simple way to do it is to use the $http service to hit the endpoint on your server that is providing the paragraph info.  Then you use the response as replacement for the user input.

https://docs.angularjs.org/api/ng/service/$httpOnce you get it working, make sure you sanitize the data coming from the database. If you don't, someone could inject HTML or JavaScript and generally make life unpleasant."
2017-05-16 04:03:40;Implementing Auth Guard with Componentless Route in Angular;
2017-05-16 03:32:31;Build an app using Angular 2 with Material design;
2017-05-16 03:12:11;Angular File upload filtering Kml files?;
2017-05-22 15:27:28;New to testing angularJs with jasmine / karma. A few questions.;"For the first stack overflow question, remove this spy:

`spyOn(LocationContact, 'GetAll');`

Then add `scope.$digest()` (or use `rootScope`) right above the `Location.GetAll()` call. You're testing the `Location.GetAll` call, so you don't want to mock it. 

You'll probably want to convert the anonymous function into a declared function and test that too.

I'm on my phone right now, so I can't verify if it will work, but it should. I changed my collection string to an array and so my it looks like this now:

    it('should call the get all function', function () {
        var callback1 = jasmine.createSpy('callback1');
        var collection = [];
        var getFromDatabase = 'getFromDatabase';

        spyOn(locationContacts_factory, 'get').and.callFake(function (callback, getFromDatabase) {
            callback(collection);
        });
        scope.$digest();
        LocationContact.GetAll(callback1, getFromDatabase);
        expect(callback1).toHaveBeenCalledWith(collection);
    });

That is testing everything it should be testing correct? I get no errors when running it this way."
2017-05-22 13:29:28;Converting Angular Controllers to ES6 Classes;This is definitely my team's preferred way. With this we can more easily mock/stub methods and properties and it's extremely clear what's what. Most of our devs are used to a statically-typed language (and we don't want to go all the way to TypeScript) so this gives us a great middle ground that everyone can get behind.Meh. I'm not personally sold on classes, especially with DI. If you're going ES6, fat arrow functions mitigate the whole `self = this` shenanigans without having to do another assignment for another injection.
2017-05-21 11:26:49;💥 Angular Component Testing - How to Write A More Readable and Maintainable Angular Test Suite;
2017-05-20 12:58:08;A resume generator progressive web app which can work offline;iOS fallback for service workers?
2017-05-19 22:43:37;HN PWA - Hacker News readers as Progressive Web Apps;PWA is slick! I didn't know about it until I read this. I added a few of these to my homescreen and I was really impressed by them, they really feel speedy and performant!
2017-05-30 15:09:39;Get started with Angular: The InfoWorld tutorial;
2017-05-30 10:58:01;Any library to generate component documentation in markdown;"Highly recommend checking out Compodoc: https://www.npmjs.com/package/@compodoc/compodoc

It does basically exactly what you're looking for."
2017-05-30 02:45:51;Looking for tutorial on authenticating with JWTs;"If you're willing to learn node/express: https://www.udemy.com/angular-2-and-nodejs-the-practical-guide/ ... they go over the front and back end parts of storing and authenticating web tokens. It's a 10 dollar course but really worth it if you're just beginning to learn full stack with Angular.Your auth will happen server side, not in the client (angular).

I'm guessing your front end is completely decoupled (since you are using angular) so look into the resource owner password flow and check out oauth2 for whatever backend you are running.

Auth can be tricky but you need to ask the php sub since that's where you need to do your implementation. All you will do in angular is store the jwt in a cookie or localstorage and add it to your requests - which is really straight forward.You can implement two things:

1. Login page accessible from egeryone
2. You app content. In a PHP or node.js container which requests a ""isValidToken"" method on the server every time a user navigates to your app. 

This way no one can access the angular code without a valid login.

I learned a lot from following https://github.com/nbarbettini/SimpleTokenProvider

I actually ended up using this token provider and building on to it all the capabilities I needed like Refresh_Tokens and such it gave me excellent insight into what was actually going on and building it to my needs.

for the front-end I went through https://github.com/asadsahi/AspNetCoreSpa front-end code and stepped through it until I had a good understanding of it.I had done a similar project on it sometimes back: https://github.com/sumeetdas/AngularJS-JWT-OAuth2-Demo. Maybe this might help you to get an idea on how to implement it.This one should help you get all aspects up and running.

https://scotch.io/tutorials/easy-node-authentication-setup-and-local

Edit: This tutorial utilizes a node/express backend, just noticed you said the backend was done in php.Why don't you just use a third party authenticating system. I would recommend authOA good resource is the samples in the Thinkecture IdentityServer repositories. There are a few java script sample clients. They use the OIDC protocol for authentication. The samples are there because they've implemented an OIDC service but you could use their samples with any OIDC provider. Also check out their token client library. https://github.com/IdentityModel/oidc-client-js"
2017-05-29 22:31:46;What is the best way to use Angular to prevent different URL's from showing up in the browser?;"I think you better do an Angular beginners guide because that's one of the core fundamentals for Angular.99.9% of the time you absolutely want to have linkable URLs. Hiding where your user is in an application is amateurish and sloppyNo offence intended but it seems like you and/or your client don't really understand what a SPA is.

A single page application doesn't mean a single url page. All it means is javascript driving state changes and not fetching prerendered templates from the sever for every action.

Unless there is some obsure and uncommon reason to want to keep the url the same all the time there is no need to hide the url. And like centurijon said its actually very usefull to show them.

Our app has a small number of specific states that don't use url changes because we want them to be unlinkable, but that should be the exception not the rule.With ui-route you can just change the stste, but keep the urlui-router can do routes with no corresponding url just fine. It's just a matter of omitting the url parameter from the state definition. Here's an example i put together:

http://plnkr.co/edit/qrOkSwAcIjRcUPebDO2n?p=preview

If you want to see the urls: start the plnkr running, and then in the top right of the preview panel, there's a small blue button which you can click to pop the preview into a separate window. As you click between the buttons (thus going to different states), you'll notice that even though the contents of the page changes, buttons 1 and 2 never change the url. For comparison, i made button 3 so that it *does* change the url."
2017-05-29 13:10:27;Understanding Optional AngularJS Bindings;
2017-06-06 21:35:56;AngularJS & Service Workers;"I've spent the last couple of nights really understanding service workers and what they are all about. I've got to admit there was a lot more to getting it working than I thought, mostly getting my head around it. But the concept of PWAs has intrigued me for a while, i've just not had time to grok it.

Anyway, i've created a simple demo, using a service worker that caches assets for an application, collects data online and caches it, then when the user is offline returns the cached assets and data. It's really simple, but there is a lot to it - mainly the understanding of how it all fits together. 

It's powerful stuff, and I hope this helps someone else get up and running. I've used AngularJS becuase it's what i'm most comfortable with and it's really an extension of ideas from a Pluralsight course from @nikmd23 - but with data being returned, rather than just insights. I really recommend his course if you're interested.

I'm happy to answer any questions, and more importantly, has anyone got any great ideas on how they approached this themselves? Service workers aren't supported by all browsers, either - how did you get around that? Just implementing a manifest? I'd be interested to hear.

"
2017-06-06 21:06:52;💥 Learn Angular Template References And How To Make a Component Configurable With Partial Templates;This is Angular not AngularJS
2017-06-06 20:43:59;Chat app with Ionic 3 and Firebase - Ep. 1 - Sign-In & Tabs.;
2017-06-06 10:58:05;How to Integrate reCAPTCHA in your Angular Forms;
2017-06-06 02:06:39;Very new to AngularJS, I need help.;"First off, you are using Angular, not AngularJS. I know it's confusing, but AngularJS refers to the older 1.x version. Your issue is that you're getting a new random image but never sending that to the view. Something like this should work:

    export class CutePicsPage {
    
      private pics: Array<any> = ['assets/botw-1.png', 'assets/botw-2.png', 'assets/botw-3.png'];
      private randomPic;
    
      ngOnInit() {
        onClickThis();
      }
    
      randomize(){
        var rand = Math.floor((Math.random() * this.pics.length));
        return rand;
      }
    
      onClickThis(){
        randomPic = this.randomize();
      }
    }

html:

    <img src=""{{randomPic}}"" width=""305"" height=""312"" id=""myPicture"" alt=""some image"">"
2017-06-13 19:29:24;Service for storing data & changes?;Yes that is absolutely a valid approach. At my work, one module of our app is built with this kind of approach. Some other parts of our app is built with Redux pattern, where the cached state is modified by a reducer.I do this.  Basically a the service keeps a copy of both the data and the API URL used to get it.  If the next call is the same URL then the caller gets the cached array instead of doing another $http call.  Angular has a built in cache and there are other ways but this is pretty simple and gives me full control.
2017-06-13 13:53:18;Chat app with Ionic 3 & Firebase - Ep. 3 - Profile pic & Password reset;
2017-06-13 07:49:33;Some Awesome Reasons to Choose AngularJS for Improved Sales;I'm sorry mate, but this was 3 minutes of my life completely wasted
2017-06-12 16:40:34;"Angular usage ""research""";
2017-06-12 13:31:38;Fixing Angular Template Overuse;
2017-06-19 13:42:05;ng-annotate Deprecated: What That Means for Your Projects;Thanks for the heads up, will check [BPAA](https://github.com/schmod/babel-plugin-angularjs-annotate)
2017-06-19 12:31:31;AngularJS with ReactJS for the V in MVC?;"We implemented in a project, using ng-react as a wrapper. The increase of performance was noticeable.

However, maintaining this 'hybrid' project was a nightmare. It  was too big, and at the end, it was easier to start from zero with react.

That's what we did.I know this is an angular sub and your asking about angular and react, but have you looked at Vue? It's kind of a middle ground between angular and react. 

It's pretty easy to get started and it can easily be dropped into existing webpages, or you can create full SPAs with itIf you are not going to use angular templating, just do full react. Angular services and controllers are just functions that you can write without Angular. I don't think it's sane to import a full framework + library.

PS: I just read one of your replies and you have a large codebase in Angular. I suggest you to gradually change your html-controller architecture to a component based one (I mean Angular components), so you have a ""react-ish"" Angular. This way when you decide to migrate to react you'll have half the work."
2017-06-19 10:03:06;Question: Securing links based on privilege;"It would probably cause a quite visible perf hit if you had to query the server every time for the privilege. Just keep a copy of it in memory.

Just be sure to individually verify each request on the backend as they go through. The copy in memory should only be used for the client-side verification.

If you're concerned about it becoming stale, you can also consider refreshing it periodically from the server, but with most apps that's unnecessary since user levels wouldn't usually change on the flyThe privilege level should be part of your JWT claim.  You can decode the JWT client-side once the token comes back from the server and store the claim information as you see fit; local storage is fine, or even just as a value of an app variable.  At that point it will just be a matter of conditionally showing data/links/etc based on the privilege level you've stored.

That JWT gets sent along with each request to the API, so if someone tries to escalate their privilege level **(A)** by forming a request they normally should not have access to, the server should check the authorization level and reject the request; or **(B)** by altering the JWT claim's privilege level the server will reject the request because the JWT will fail a signature check."
2017-06-19 03:19:30;Tags and auto complete?;Not sure about tags, but I used uib-typeahead, no issues. We're using [ngTagsInput](https://github.com/mbenford/ngTagsInput) on a project and it seems fine so far.https://github.com/angular-ui/ui-select does the job pretty well, though it might be a little too bloated in some use cases.
2017-06-17 15:48:00;Question: Recommended Angular Slide Show;I used sick slider with an angular callback after the last item was processed and it worked out very well. When you revisit try giving that a shot
2017-06-27 14:28:19;Intermittent issue with ng-repeat orderby;"Doesn't answer your question, but you should be able to do:

> ng-repeat=""order in orders | orderBy:'ageInSeconds' | filter: activeFilter track by order.id""

*with quotes around ageInSeconds,* eliminating the need for the function. Everything seems fine with what you've provided, though. My guess is that when the program first loads there is something that sometimes happens out of order, causing the inconsistent results.

[orderBy documentation](https://docs.angularjs.org/api/ng/filter/orderBy)Do you have duplicate IDs? If so, try using ""track by $index"".

Are you certain ageInSeconds is an integer or number? Try coercing it in to one."
2017-06-27 12:59:33;AngularJS - what is the most popular development setup?;"I don't know what the most popular is, but I've been using the latest versions of AngularJS, webpack, and yarn, writing in es6. 

No need to use bower or gulp. Pretty much everything you would use from bower has an npm registry now, and webpack combined with scripts in the package.json cover what you would have done with gulp. 

Just out of curiosity, if you're already familiar with Angular 2/4, why check out 1.x?


State Of JavaScript:
http://stateofjs.com/

My 2c. Don't get lost down the rabbit hole of trying to pick the best, latest or most popular framework. As long as it's not too far out of left field and you can find folks to discuss and get pointers from: you should be okay.

It can often feel like everyone else has moved on... or is using something else and you're being left behind. Get to know your particular stack well, build useful things that people want to use. At some point, a change in jobs or a particular tech may lose support and you'll make a switch. It won't be that hard.




Try angular cli to get your project set up. It's kind of the standard.... Kind of.While AngularJS+Webpack+Yarn is a fantastic setup, it's unlikely that it's the most common.

AngularJS jobs are prolific right now because it was the framework of choice for enterprise applications development 2-4 years ago. Unfortunately, the popular tools in that time range would have been npm+bower and grunt, with gulp fighting its way in on the more recent side of it. Also unfortunately, you may find that many of them have no interest in upgrading immediately.

AngularJS version is a bit more problematic. Companies with half-decent upgrade processes across the board will likely be on at least 1.5. Many will be on earlier versions. Unfortunately, the suggested design paradigm in 1.5 is a pretty radical shift from 1.4. Fortunately it shifts in the direction of Angular 2, so you should have a slight leg up there. Since you have Angular 2 experience and no AngularJS experience, I might suggest starting with AngularJS 1.4 to be more comfortable with hypothetical legacy code bases.

stateofjs is an awesome resource for starting new projects, but keep in mind the typical corporate cultures of many of the aforementioned enterprise application development houses. They're likely to be dismayingly under-represented in surveys distributed through open source or other programming community channels.IMHO; typescript, webpack, yarn
Don't use bower. There may be a better alternative to webpack now. You'd be crazy to start a new big project and not use typescript.

Be wary of the deprecated ng annotate. The latest status quo is the Babel alternative, which is annoying.

I'm not sure if you can pipeline typescript->es6>Babel->es5 but that would be the most ideal. It allows you to drop the babel->es5 when you eventually want to only support es6.Don't listen to that guy, he uses yarn."
2017-06-27 10:21:48;Angular Bootstrap with Material Design - Free UI Kit.;I've looked all over the site but can't find what the difference is between MDB and MDBPro, apart from having to pay for MDBPro.  Anyone know the difference?
2017-06-27 01:47:31;Why do I need to explicitly return my 'this' instance from a controller when using 'controller as'?;"Try it without an arrow function.Same as /u/negative34, I believe this is why you're having problems:
> An arrow function does not create its own this context, so this has its original meaning from the enclosing context.

Source: [MDN - Arrow Functions](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions),
check the part of ""No binding of `this`""Just put of curiosity, if you didn't assign this to vm and had just declared const vm = {};, would it work?Try just using `var vm = this`."
2017-06-26 13:26:54;Prevent Injection Errors With Strict Mode;
2017-07-04 15:46:06;How Directives work in Angular JS;"Unfortunately, this article is a bit late to the game. Binding to `$scope` and using `.directive` are no longer best practices. 

Instead use `.component` and, when needed, use the `controllerAs` binding (which is the default for  `.component`). 


Some info on both topics:

- [Component](https://docs.angularjs.org/guide/component)
- [Controller-as](https://toddmotto.com/digging-into-angulars-controller-as-syntax/)"
2017-07-04 13:38:48;What's a good tutorial/book, that incorporates a backend language?;"Not sure about a best book but can give a good example being improved as time goes by: https://github.com/DavideViolante/Angular-Full-Stack

Davide is doing a good job, we might see secure API endpoints too, etc.Node is probably the easiest place to start, as you can learn one language while you learn full stack development. Then later you can learn other languages once you have the concepts down. I started reading this book to gain some Postgres knowledge. https://pragprog.com/book/dcbang/rails-angular-postgres-and-bootstrap I already know the other tech in the stack. Might fit your need."
2017-07-04 03:07:09;New to angularJS. Can't wrap my head around it :/;"Honestly jam it all in the controller to start.  Dealing with promises and service/factory crapola can wait until you get going.  Leave yourself time to refactor at the end.

Your json should be giving you an array *of objects* if it's tabular data.  If it isn't, formatting will be a pain.

Another trick: skip the API completely for now and just have a simplified small sample of data hard-coded right in your controller.  That'll save you tons of time watching data load over and over while you test.Use factory functions to communicate with your API and retrieve data.  Inject your factories into controller where you can bind the data to scope variables and access from your view. 

If you need your data to be formatted as an array to use in your tables, just create an array from your data object. Without seeing your JSON, it's impossible to give you specifics. You could probably do one of the following:

var dataArr = Object.keys(dataObj).map(function (key) { return dataObj[key]; });

ES2015 syntax:
var dataArr = Array.from(dataObj);

Either of those (depending on your JSON data structure) will create arrays from array-like objects, which you can then use in your tables.

It sounds as if you may need some more practice with JavaScript. I'd suggest following a couple tutorials online and building some practice projects until you feel more comfortable. Ask more specific questions and you will get more specific answers.I honestly can't tell if you're trolling. If you actually haven't worked with just straight HTML/CSS/JS before you have no business jumping directly into Angular. You need to know JavaScript before you can learn the ins and outs of entire fullstack JavaScript frameworkBefore we jump to your app requirement. My advice would be that you really need to dive into JS first, it will only get harder I believe. Do more pure vanilla exercises and increment the difficulty on every example. Finish a course at a website, eg codecademy.com or similar would help a lot as a starting point.

Here is an example of a possible solution to your problem: http://jsfiddle.net/mjaric/pJ5BR/Jumping directly to AngularJS might find you challenging try to start from basic at least try to learn basic of HTML, CSS, Bootstrap though not in detail some basic stuff and code school is the best source for you as they provide video plus challenges which improve the logic so that's my suggestion.It might be better to go for Angular rather than AngularJS - they'll stop supporting/security patching AngularJS as soon as next year (IIRC).Unfortunately a 60 minute video isnt going to help you much, especially when you haven't used JS before. What programming languages have you used in the past? If you have used c# (or similar) you might want to take a look at angular 2+ and typescript.
source: 3+ years using angular ~8 hours a day and seen almost every video there is on the topic and still finding new and better ways to do things."
2017-07-03 13:37:32;AngularJS Form Properties Guide;
2017-07-03 13:36:22;One HTML Used Twice;"Pass y.a or y.b into the directive as a binding, that way it has the same name once in the directive's scope. Then use the same template URL. Just an example of the answer of ADHEngineer:


In your main html:

    <foo data=""y.a""></foo>
    <foo data=""y.b""></foo>

the directive:

    app.directive('foo', function() {
      return {
        scope: {
          data: ""=""
        },
        restrict: ""E"",
        templateUrl: ""/path/to/html"",
        link: function(scope, element, attrs) {
          // your data is in scope.data
        }
      };
    });
"
2017-07-11 21:12:59;10 Ways to Misuse Angular;
2017-07-11 13:11:23;Chat app with Ionic 3 & Firebase - Ep. 6 - Sending requests;
2017-07-11 12:55:16;7 Mind-Blowing Reasons Why Development Services Are Using AngularJS;Absolutely mind blowing!
2017-07-11 00:08:50;Angular Chart libraries - array-only data source;"[this page](http://jtblin.github.io/angular-chart.js/)  has a button being clicked and the charts being updated. I've had really good experience with highcharts. they have a ton of examples on the demo page.You don't have tie your original data source directly to your target chart component. For angular 4.x I recommend https://github.com/valor-software/ng2-charts

Simple to use."
2017-07-10 02:28:41;NativeScript for the Angular 2 Developer;
2017-07-18 18:34:13;Announcing NgRx 4 – Angular Blog;
2017-07-17 17:39:50;URL Routing changes to mask ID;"can't you simply pass the string instead of the number as id? of course you will need some hashmap or other way to find the id from the string.. these things are normally done as optional params after the id.. e.g. ""/products/21/the-awesome-toy"" and are intended as a way to have meaningful link :)Which part of this are you having trouble with? Configuring ui-router? You can use a regexp in the URL matcher to detect an id and forward to the slug URL, and add a new route for the slug. ~~Google ""ui-router html5 mode"".~~ 

~~No offense but did you even try to Google this before posting?~~

Nevermind, I failed to read correctly.   "
2017-07-17 15:34:18;Lazy loading: code splitting NgModules with Webpack;[deleted]Good work and thanks for sharing. How does it compare to require.js or other AMD solutions?
2017-07-17 14:05:28;Angular Authentication: Using the Http Client and Http Interceptors;
2017-07-17 02:01:58;A website within a website?;"congrats for being high. I suggest you buy one of Todd Motto's basic courses and follow it. or any other course tbh.

Javascript is not what it used to be, you'll have a bad time if you think you can just hack around and come up with something nice :DThe lay of the land on mostly any javascript frameworks and angular is understanding objects in javascript and JSON (two different things, similiar syntax). They're both data, and angular uses objects to display information on the html page.  

What you should do is render an object (being the week) per item you clicked on. 

Let's say you ng-repeat the weeks based on the index of weeks in your data. (workout log).
If you have 4 weeks logged, then it displays 4 buttons. ( 0 - 3 )

Which leads me to my second topic. There's alot going on in index.html but we should keep the scope of our app inside a respective controller. I like to treat index.html as a master page. Header, Footer anything that will remain static as you move around the site should go there. 

___
Edit:
So as you can [see here](https://plnkr.co/edit/DYRxKh7SuZXKT1aev2d1?p=preview) it was a slow day at the office. I took the liberty of messing with it a bit. 

I meant to write more but I got carried away. If you have any questions feel free to ask!
"
2017-07-25 12:38:44;The Incredible Advantages of Combining Ionic and AngularJS Development Services;
2017-07-25 10:33:06;⚡Try out New Angular Starter Project - Angular 4.3, NgRx 4, Angular Material, Lazy Loading, Themes, Animations;
2017-07-25 05:24:10;Use uploadfs and gridfs with meteor + angular | Simple steps for image upload in meteor + angular;
2017-07-24 17:42:05;Lazy loading Components in Angular 2;
2017-07-24 16:12:22;Chat app with Ionic 3 & Firebase - Ep. 7 - Accepting and ignoring requests;
2017-08-01 18:14:17;Saving Angular form data without an internet connection;"I just read this and it occurred to me that taking an ""offline availability first"" approach to forms might not be a bad idea in the aggregate. It's probably not too hard to write a sufficiently generic I/O function that would work well.

Anyone doing anything like that?"
2017-08-01 12:21:24;Are you planning to migrate to Angular?;"I don't see the point. 

Adding features and fixing bugs in my Angular1 app is really easy. Everything works. The UI is really fast and responsive. If I was starting a new project maybe, but not going to fix something that is definitely not broken.If you're looking at it as a migration then you're looking at it wrong. AngularJS and Angular have very little in common outside of the name. Generally, I recommend that clients do not migrate existing applications from AngularJS 1.x to Angular 4.x [or React or Vue or whatever].  I don't see a huge ROI there.  My impression is folks championing that are looking for a more modern skillset that can help they land a new job.

On the other hand, if you have any Flex apps in production you're running out of time to migrate. :ha, ha: Yup; were planning on migrating, but only once we can answer the question ""why do we *need* to move""

Until we get an answer that isn't along the lines of

  - ""it's new""
  - ""it's the cutting edge""
  - ""such shiny, much awesome""

We won't move. AngularJS is good enough, so the ROI of migrating isn't high enough at the minuteWe will eventually, but porting a 100k line app just because it's new and shiny is not good enough of a reason.

We are still in 1.6.5 until a big refactor / rewrite of the product.Depends on the definition of Migrate. 

New code in Angular? Yes. 
Update all of our old applications? Not right now.Seems to me like the distance from angularjs to angular is the same as towards vue or react, for example.I am a new web developer ( after 18 years developing video games ) and decided on using Angular JS over Angular 2.0. The workflow was just so much easier in Angular JS, plus there are so many more concrete examples and supported libraries. Also,since I'm a lone developer, the type safety isn't that big a deal for me. Eventually, yes, though we're also considering alternatives such as Vue. We have a pretty sizeable code-base in AngularJS 1.6, so migrating would not be a short task. 

I imagine once AngularJS 1 stops receiving updates, we'll discuss migrating or moving to something else."
2017-07-31 11:12:28;Unit test angular controller with JsTestDriver;
2017-07-31 10:27:13;possible to remove origin header from call restful api ?;No. This is part of a browser security feature called CORS. No, but you can run the call through a server side request that exists on your domain/protocol and invokes request (or something else) on the backend. Effectively you proxy it through your own server. 
2017-07-31 01:45:55;Great Youtube video covering angular4 basics really well;loved it!
2017-08-08 17:44:04;Angular 4 and Firebase Authentication Login with Google, email/password;
2017-08-07 13:49:37;Data binding a picture input.;
2017-08-07 13:33:21;Advanced ng-model Integration for Bug-free Controls;
2017-08-07 12:45:10;[question] Linking into ng routes from static HTML;
2017-08-06 15:28:48;Is Angular Bad for SEO?;"It can be, but it has tools for fixing that. Google already indexes Javascript applications, but if you cared about social media metatags or other search engines you have to look into server-side rendering that is provided by Angular Universal.I've had issues where my views render in webmaster console but don't show up in google search or ad words search. Also open graph tags & twitter cards aren't picked up when a URL is pasted into Facebook or Twitter.    

There are couple of ways to fix this:
Use a service like prerender.io

Redirect the Facebook & Twitter User agent to a URL with static meta data. 

AirBnB actually renders all their pages server side. Then uses Angular to update data on the page. In that case they are using Angular to add a level interactivity & responsiveness to the page. It's also doing double work but I believe they did it because of SEO issues. To get around the SEO problem, I had a phantomjs script spit out pre-rendered versions of each view. When my webserver detected a known crawler, instead of serving the js file, it would serve the pre-rendered html.Even if Google was or wasn't completely able to crawl and understand SPAs, there are tons of other services that don't.

There is nothing shittier than linking your blog on Facebook, Slack or even WhatsApp and their preview card displays a bunch of `{{}}`expressions.

Edit: there are services that can help you with prerendering your pages so you don't suffer from this. E.g. we've been using seo4ajax very successfully the past ~3 years.It's not that it is inherently bad, but it does mean you will need put in a LOT more up-front work, design, and coding, which could translate to significant time dollars for you, if you want a client-side rendered SPA to work with anything other than Google. This may be acceptable or not, it depends completely on your use-case. Like others have mentioned there are tools and guides to help get around this but it means you have to design your application in a way that supports it (which usually means back-end work too.)The trick is to use server-side rendering. There’s a [fork of React Boilerplate](https://github.com/react-boilerplate/react-boilerplate/pull/1236) that has it built in.

Some mention [isomorphic webpack](https://github.com/gajus/isomorphic-webpack) but i haven’t tried that solution."
2017-08-15 19:40:36;Mocking Angular material;"You'll probably have to mock $mdDialog.alert ""andReturn"" an object which contains a field called ""title"" which is also simply a mock function. It's been a while since I've used Jasmine, so the exact function call for returning from a mocked function may be slightly different now, but the documentation should be easy to follow.RemindMe! 3 Days"
2017-08-15 17:14:25;[Test coverage with Karma]How to cover functions inside lodash methods?;"What you could do is export that line into its own method, and actually test that lodash removes an item.

Or, you could move the callback into its own function, then put a spy on it and assert that it was called with some `id`.don't stub it out, just let the behaviour happen.What I believe it is telling you is that you should test that function separately (fatty arrow function) and not the lodash remove function.

You could assign it as a named function and test different variables being passed in match or not and return the correct Boolean value."
2017-08-15 02:36:25;Is this possible in angular?;"What version of angular are you using? Are your pages/views dynamic or static?Make a single component for a generic page.  Another component to display one of those front page blocks.

Set up a typescript class that contains properties for every piece of an individual page.  Like the image it uses, the title, the text, etc...  For places that have multiples, you could make it an array.

Then, set up an array of that class.  Each item in that array is the properties for a single page.  Then, on the front page, you can do an ngfor that iterates over that array, and passes in the single iterative instance within the array via a parameter.  And, on each sub-page, there could be a router parameter in the URL at the top that would tell that page which item it's currently on, and it just pulls the coordinating item from the array and displays it.Each ""page"" will have to be either implemented as individual components or as different markup in the same component that you toggle via *ngIf. 

You don't really create multiple distinct html pages.  That's not the pattern prescribed by front end app frameworks. 

In addition to view management, you also need to manage the data that feeds the view.  Your portfolio site would have a notion of what images are in each section of the site.  Clicking on a link reveals different parts of the site, but it also load up the data specific to that part of the site.  The data is then bound to the view template for final rendering "
2017-08-14 20:06:23;I have the same problem in Chrome as ADP does, I can show you though I'm not sure what it is. Anyone know what's happening or how to fix?;"Looks like it's a weird interaction with Chrome and AngularJS

The button is disabled when there's nothing there, because of the `data-ng-disabled=""!form.$valid""` directive. Chrome may pre-fill the form in such a way that it does not trigger events that result in form validation, so angular continues to consider it invalid until an event (such as a click) causes the app to cycle through.

I don't know if there's a way around that, to be honest. It's possible that it's a bug that didn't exist before, or has been fixed since, so you might consider switching versions and seeing if that solves the issue.

If you can't fix it, I recommend just changing it so that when the user submits the form, it checks/performs validation and exposes the appropriate error(s) if something required is missing, and if nothing required is missing, moves to the next step."
2017-08-14 16:52:53;Integrate Angular with Asp.Net core in just 10 steps (Process 2);
